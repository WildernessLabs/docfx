### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Sensors.Motion.BNO055.PowerModes
  commentId: T:Meadow.Foundation.Sensors.Motion.BNO055.PowerModes
  id: BNO055.PowerModes
  parent: Meadow.Foundation.Sensors.Motion
  children:
  - Meadow.Foundation.Sensors.Motion.BNO055.PowerModes.LowPower
  - Meadow.Foundation.Sensors.Motion.BNO055.PowerModes.Normal
  - Meadow.Foundation.Sensors.Motion.BNO055.PowerModes.Suspended
  langs:
  - csharp
  - vb
  name: BNO055.PowerModes
  nameWithType: BNO055.PowerModes
  fullName: Meadow.Foundation.Sensors.Motion.BNO055.PowerModes
  type: Class
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: PowerModes
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
    startLine: 1321
  assemblies:
  - Sensors.Motion.BNO055
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nValis power mode.\n"
  example: []
  syntax:
    content: public static class PowerModes
    content.vb: Public Module PowerModes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Meadow.Foundation.Sensors.Motion.BNO055.PowerModes.Normal
  commentId: F:Meadow.Foundation.Sensors.Motion.BNO055.PowerModes.Normal
  id: Normal
  parent: Meadow.Foundation.Sensors.Motion.BNO055.PowerModes
  langs:
  - csharp
  - vb
  name: Normal
  nameWithType: BNO055.PowerModes.Normal
  fullName: Meadow.Foundation.Sensors.Motion.BNO055.PowerModes.Normal
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Normal
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
    startLine: 1326
  assemblies:
  - Sensors.Motion.BNO055
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nAll sensors are active in normal mode.\n"
  example: []
  syntax:
    content: public static readonly byte Normal
    return:
      type: System.Byte
    content.vb: Public Shared ReadOnly Normal As Byte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Meadow.Foundation.Sensors.Motion.BNO055.PowerModes.LowPower
  commentId: F:Meadow.Foundation.Sensors.Motion.BNO055.PowerModes.LowPower
  id: LowPower
  parent: Meadow.Foundation.Sensors.Motion.BNO055.PowerModes
  langs:
  - csharp
  - vb
  name: LowPower
  nameWithType: BNO055.PowerModes.LowPower
  fullName: Meadow.Foundation.Sensors.Motion.BNO055.PowerModes.LowPower
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: LowPower
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
    startLine: 1334
  assemblies:
  - Sensors.Motion.BNO055
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nIf no activity is detected for a configuration duration (default = 5s)\nthe sensor will enter low power mode.  In this mode, only the accelerometer\nis is active and motion detected by the accelerometer then the device\nwill wake.\n"
  example: []
  syntax:
    content: public static readonly byte LowPower
    return:
      type: System.Byte
    content.vb: Public Shared ReadOnly LowPower As Byte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Meadow.Foundation.Sensors.Motion.BNO055.PowerModes.Suspended
  commentId: F:Meadow.Foundation.Sensors.Motion.BNO055.PowerModes.Suspended
  id: Suspended
  parent: Meadow.Foundation.Sensors.Motion.BNO055.PowerModes
  langs:
  - csharp
  - vb
  name: Suspended
  nameWithType: BNO055.PowerModes.Suspended
  fullName: Meadow.Foundation.Sensors.Motion.BNO055.PowerModes.Suspended
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Suspended
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
    startLine: 1340
  assemblies:
  - Sensors.Motion.BNO055
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nPut the sensor into Suspoend mode.  In this more no values in\nthe register map will be updated.\n"
  example: []
  syntax:
    content: public static readonly byte Suspended
    return:
      type: System.Byte
    content.vb: Public Shared ReadOnly Suspended As Byte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Meadow.Foundation.Sensors.Motion
  commentId: N:Meadow.Foundation.Sensors.Motion
  name: Meadow.Foundation.Sensors.Motion
  nameWithType: Meadow.Foundation.Sensors.Motion
  fullName: Meadow.Foundation.Sensors.Motion
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
