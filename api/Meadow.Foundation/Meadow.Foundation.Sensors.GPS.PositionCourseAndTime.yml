### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime
  commentId: T:Meadow.Foundation.Sensors.GPS.PositionCourseAndTime
  id: PositionCourseAndTime
  parent: Meadow.Foundation.Sensors.GPS
  children:
  - Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Course
  - Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Latitude
  - Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Longitude
  - Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.MagneticVariation
  - Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Speed
  - Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.TimeOfReading
  - Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Valid
  langs:
  - csharp
  - vb
  name: PositionCourseAndTime
  nameWithType: PositionCourseAndTime
  fullName: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime
  type: Struct
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: PositionCourseAndTime
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
    startLine: 147
  assemblies:
  - Sensors.GPS.NMEA
  namespace: Meadow.Foundation.Sensors.GPS
  summary: "\nRecommended Minimum message - this is the equivalent of GPS position and\ncourse data.\n"
  example: []
  syntax:
    content: public struct PositionCourseAndTime
    content.vb: Public Structure PositionCourseAndTime
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.TimeOfReading
  commentId: F:Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.TimeOfReading
  id: TimeOfReading
  parent: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime
  langs:
  - csharp
  - vb
  name: TimeOfReading
  nameWithType: PositionCourseAndTime.TimeOfReading
  fullName: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.TimeOfReading
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: TimeOfReading
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
    startLine: 152
  assemblies:
  - Sensors.GPS.NMEA
  namespace: Meadow.Foundation.Sensors.GPS
  summary: "\nTime the reading was generated.\n"
  example: []
  syntax:
    content: public DateTime TimeOfReading
    return:
      type: System.DateTime
    content.vb: Public TimeOfReading As Date
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Valid
  commentId: F:Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Valid
  id: Valid
  parent: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime
  langs:
  - csharp
  - vb
  name: Valid
  nameWithType: PositionCourseAndTime.Valid
  fullName: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Valid
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Valid
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
    startLine: 157
  assemblies:
  - Sensors.GPS.NMEA
  namespace: Meadow.Foundation.Sensors.GPS
  summary: "\nIndicate if the data is valid or not.\n"
  example: []
  syntax:
    content: public bool Valid
    return:
      type: System.Boolean
    content.vb: Public Valid As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Latitude
  commentId: F:Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Latitude
  id: Latitude
  parent: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime
  langs:
  - csharp
  - vb
  name: Latitude
  nameWithType: PositionCourseAndTime.Latitude
  fullName: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Latitude
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Latitude
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
    startLine: 162
  assemblies:
  - Sensors.GPS.NMEA
  namespace: Meadow.Foundation.Sensors.GPS
  summary: "\nLatitude reading.\n"
  example: []
  syntax:
    content: public DegreeMinutePosition Latitude
    return:
      type: Meadow.Foundation.Sensors.GPS.DegreeMinutePosition
    content.vb: Public Latitude As DegreeMinutePosition
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Longitude
  commentId: F:Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Longitude
  id: Longitude
  parent: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime
  langs:
  - csharp
  - vb
  name: Longitude
  nameWithType: PositionCourseAndTime.Longitude
  fullName: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Longitude
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Longitude
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
    startLine: 167
  assemblies:
  - Sensors.GPS.NMEA
  namespace: Meadow.Foundation.Sensors.GPS
  summary: "\nLongitude reading.\n"
  example: []
  syntax:
    content: public DegreeMinutePosition Longitude
    return:
      type: Meadow.Foundation.Sensors.GPS.DegreeMinutePosition
    content.vb: Public Longitude As DegreeMinutePosition
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Speed
  commentId: F:Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Speed
  id: Speed
  parent: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: PositionCourseAndTime.Speed
  fullName: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Speed
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Speed
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
    startLine: 172
  assemblies:
  - Sensors.GPS.NMEA
  namespace: Meadow.Foundation.Sensors.GPS
  summary: "\nCurrent speed in Knots.\n"
  example: []
  syntax:
    content: public double Speed
    return:
      type: System.Double
    content.vb: Public Speed As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Course
  commentId: F:Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Course
  id: Course
  parent: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime
  langs:
  - csharp
  - vb
  name: Course
  nameWithType: PositionCourseAndTime.Course
  fullName: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.Course
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Course
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
    startLine: 177
  assemblies:
  - Sensors.GPS.NMEA
  namespace: Meadow.Foundation.Sensors.GPS
  summary: "\nCourse in degrees (true heading).\n"
  example: []
  syntax:
    content: public double Course
    return:
      type: System.Double
    content.vb: Public Course As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.MagneticVariation
  commentId: F:Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.MagneticVariation
  id: MagneticVariation
  parent: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime
  langs:
  - csharp
  - vb
  name: MagneticVariation
  nameWithType: PositionCourseAndTime.MagneticVariation
  fullName: Meadow.Foundation.Sensors.GPS.PositionCourseAndTime.MagneticVariation
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: MagneticVariation
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.GPS.NMEA/Structures.cs
    startLine: 182
  assemblies:
  - Sensors.GPS.NMEA
  namespace: Meadow.Foundation.Sensors.GPS
  summary: "\nMagnetic variation.\n"
  example: []
  syntax:
    content: public DirectionIndicator MagneticVariation
    return:
      type: Meadow.Foundation.Sensors.GPS.DirectionIndicator
    content.vb: Public MagneticVariation As DirectionIndicator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Meadow.Foundation.Sensors.GPS
  commentId: N:Meadow.Foundation.Sensors.GPS
  name: Meadow.Foundation.Sensors.GPS
  nameWithType: Meadow.Foundation.Sensors.GPS
  fullName: Meadow.Foundation.Sensors.GPS
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Meadow.Foundation.Sensors.GPS.DegreeMinutePosition
  commentId: T:Meadow.Foundation.Sensors.GPS.DegreeMinutePosition
  parent: Meadow.Foundation.Sensors.GPS
  name: DegreeMinutePosition
  nameWithType: DegreeMinutePosition
  fullName: Meadow.Foundation.Sensors.GPS.DegreeMinutePosition
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Meadow.Foundation.Sensors.GPS.DirectionIndicator
  commentId: T:Meadow.Foundation.Sensors.GPS.DirectionIndicator
  parent: Meadow.Foundation.Sensors.GPS
  name: DirectionIndicator
  nameWithType: DirectionIndicator
  fullName: Meadow.Foundation.Sensors.GPS.DirectionIndicator
