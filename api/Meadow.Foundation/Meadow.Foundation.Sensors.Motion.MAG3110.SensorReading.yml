### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading
  commentId: T:Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading
  id: MAG3110.SensorReading
  parent: Meadow.Foundation.Sensors.Motion
  children:
  - Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading.X
  - Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading.Y
  - Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading.Z
  langs:
  - csharp
  - vb
  name: MAG3110.SensorReading
  nameWithType: MAG3110.SensorReading
  fullName: Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading
  type: Struct
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.MAG3110/MAG3110.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: SensorReading
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.MAG3110/MAG3110.cs
    startLine: 15
  assemblies:
  - Sensors.Motion.MAG3110
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nSensor readings to be passed back when an interrupt is generated.\n"
  example: []
  syntax:
    content: public struct SensorReading
    content.vb: Public Structure SensorReading
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading.X
  commentId: F:Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading.X
  id: X
  parent: Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading
  langs:
  - csharp
  - vb
  name: X
  nameWithType: MAG3110.SensorReading.X
  fullName: Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading.X
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.MAG3110/MAG3110.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: X
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.MAG3110/MAG3110.cs
    startLine: 17
  assemblies:
  - Sensors.Motion.MAG3110
  namespace: Meadow.Foundation.Sensors.Motion
  syntax:
    content: public short X
    return:
      type: System.Int16
    content.vb: Public X As Short
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading.Y
  commentId: F:Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading.Y
  id: Y
  parent: Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: MAG3110.SensorReading.Y
  fullName: Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading.Y
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.MAG3110/MAG3110.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Y
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.MAG3110/MAG3110.cs
    startLine: 18
  assemblies:
  - Sensors.Motion.MAG3110
  namespace: Meadow.Foundation.Sensors.Motion
  syntax:
    content: public short Y
    return:
      type: System.Int16
    content.vb: Public Y As Short
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading.Z
  commentId: F:Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading.Z
  id: Z
  parent: Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: MAG3110.SensorReading.Z
  fullName: Meadow.Foundation.Sensors.Motion.MAG3110.SensorReading.Z
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.MAG3110/MAG3110.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Z
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.MAG3110/MAG3110.cs
    startLine: 19
  assemblies:
  - Sensors.Motion.MAG3110
  namespace: Meadow.Foundation.Sensors.Motion
  syntax:
    content: public short Z
    return:
      type: System.Int16
    content.vb: Public Z As Short
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Meadow.Foundation.Sensors.Motion
  commentId: N:Meadow.Foundation.Sensors.Motion
  name: Meadow.Foundation.Sensors.Motion
  nameWithType: Meadow.Foundation.Sensors.Motion
  fullName: Meadow.Foundation.Sensors.Motion
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
