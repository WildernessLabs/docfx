### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.NumericExtensions
  commentId: T:Meadow.Foundation.NumericExtensions
  id: NumericExtensions
  parent: Meadow.Foundation
  children:
  - Meadow.Foundation.NumericExtensions.Clamp(System.Double,System.Double,System.Double)
  - Meadow.Foundation.NumericExtensions.Clamp(System.Int32,System.Int32,System.Int32)
  - Meadow.Foundation.NumericExtensions.Clamp(System.Single,System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: NumericExtensions
  nameWithType: NumericExtensions
  fullName: Meadow.Foundation.NumericExtensions
  type: Class
  source:
    remote:
      path: Source/Meadow.Foundation/Helpers/NumericExtensions.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: NumericExtensions
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Helpers/NumericExtensions.cs
    startLine: 4
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation
  syntax:
    content: public static class NumericExtensions
    content.vb: Public Module NumericExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Meadow.Foundation.NumericExtensions.Clamp(System.Single,System.Single,System.Single)
  commentId: M:Meadow.Foundation.NumericExtensions.Clamp(System.Single,System.Single,System.Single)
  id: Clamp(System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: Meadow.Foundation.NumericExtensions
  langs:
  - csharp
  - vb
  name: Clamp(Single, Single, Single)
  nameWithType: NumericExtensions.Clamp(Single, Single, Single)
  fullName: Meadow.Foundation.NumericExtensions.Clamp(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Source/Meadow.Foundation/Helpers/NumericExtensions.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Clamp
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Helpers/NumericExtensions.cs
    startLine: 6
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation
  syntax:
    content: public static float Clamp(this float self, float min, float max)
    parameters:
    - id: self
      type: System.Single
    - id: min
      type: System.Single
    - id: max
      type: System.Single
    return:
      type: System.Single
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Clamp(self As Single, min As Single, max As Single) As Single
  overload: Meadow.Foundation.NumericExtensions.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Meadow.Foundation.NumericExtensions.Clamp(System.Double,System.Double,System.Double)
  commentId: M:Meadow.Foundation.NumericExtensions.Clamp(System.Double,System.Double,System.Double)
  id: Clamp(System.Double,System.Double,System.Double)
  isExtensionMethod: true
  parent: Meadow.Foundation.NumericExtensions
  langs:
  - csharp
  - vb
  name: Clamp(Double, Double, Double)
  nameWithType: NumericExtensions.Clamp(Double, Double, Double)
  fullName: Meadow.Foundation.NumericExtensions.Clamp(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Source/Meadow.Foundation/Helpers/NumericExtensions.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Clamp
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Helpers/NumericExtensions.cs
    startLine: 11
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation
  syntax:
    content: public static double Clamp(this double self, double min, double max)
    parameters:
    - id: self
      type: System.Double
    - id: min
      type: System.Double
    - id: max
      type: System.Double
    return:
      type: System.Double
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Clamp(self As Double, min As Double, max As Double) As Double
  overload: Meadow.Foundation.NumericExtensions.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Meadow.Foundation.NumericExtensions.Clamp(System.Int32,System.Int32,System.Int32)
  commentId: M:Meadow.Foundation.NumericExtensions.Clamp(System.Int32,System.Int32,System.Int32)
  id: Clamp(System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: Meadow.Foundation.NumericExtensions
  langs:
  - csharp
  - vb
  name: Clamp(Int32, Int32, Int32)
  nameWithType: NumericExtensions.Clamp(Int32, Int32, Int32)
  fullName: Meadow.Foundation.NumericExtensions.Clamp(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Source/Meadow.Foundation/Helpers/NumericExtensions.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Clamp
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Helpers/NumericExtensions.cs
    startLine: 16
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation
  syntax:
    content: public static int Clamp(this int self, int min, int max)
    parameters:
    - id: self
      type: System.Int32
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Int32
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Clamp(self As Integer, min As Integer, max As Integer) As Integer
  overload: Meadow.Foundation.NumericExtensions.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Meadow.Foundation
  commentId: N:Meadow.Foundation
  name: Meadow.Foundation
  nameWithType: Meadow.Foundation
  fullName: Meadow.Foundation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Meadow.Foundation.NumericExtensions.Clamp*
  commentId: Overload:Meadow.Foundation.NumericExtensions.Clamp
  name: Clamp
  nameWithType: NumericExtensions.Clamp
  fullName: Meadow.Foundation.NumericExtensions.Clamp
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
