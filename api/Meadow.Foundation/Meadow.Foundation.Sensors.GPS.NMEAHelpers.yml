### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Sensors.GPS.NMEAHelpers
  commentId: T:Meadow.Foundation.Sensors.GPS.NMEAHelpers
  id: NMEAHelpers
  parent: Meadow.Foundation.Sensors.GPS
  children:
  - Meadow.Foundation.Sensors.GPS.NMEAHelpers.DegreesMinutesDecode(System.String,System.String)
  - Meadow.Foundation.Sensors.GPS.NMEAHelpers.TimeOfReading(System.String,System.String)
  langs:
  - csharp
  - vb
  name: NMEAHelpers
  nameWithType: NMEAHelpers
  fullName: Meadow.Foundation.Sensors.GPS.NMEAHelpers
  type: Class
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.GPS.NMEA/NMEAHelpers.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: NMEAHelpers
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.GPS.NMEA/NMEAHelpers.cs
    startLine: 7
  assemblies:
  - Sensors.GPS.NMEA
  namespace: Meadow.Foundation.Sensors.GPS
  summary: "\nProvide common functionality for the decode classes.\n"
  example: []
  syntax:
    content: public class NMEAHelpers
    content.vb: Public Class NMEAHelpers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Meadow.Foundation.Sensors.GPS.NMEAHelpers.TimeOfReading(System.String,System.String)
  commentId: M:Meadow.Foundation.Sensors.GPS.NMEAHelpers.TimeOfReading(System.String,System.String)
  id: TimeOfReading(System.String,System.String)
  parent: Meadow.Foundation.Sensors.GPS.NMEAHelpers
  langs:
  - csharp
  - vb
  name: TimeOfReading(String, String)
  nameWithType: NMEAHelpers.TimeOfReading(String, String)
  fullName: Meadow.Foundation.Sensors.GPS.NMEAHelpers.TimeOfReading(System.String, System.String)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.GPS.NMEA/NMEAHelpers.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: TimeOfReading
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.GPS.NMEA/NMEAHelpers.cs
    startLine: 17
  assemblies:
  - Sensors.GPS.NMEA
  namespace: Meadow.Foundation.Sensors.GPS
  summary: "\nExtract the time of the reading.\n"
  example: []
  syntax:
    content: public static DateTime TimeOfReading(string date, string time)
    parameters:
    - id: date
      type: System.String
      description: Date the reading was taken (this can be null)
    - id: time
      type: System.String
      description: String containing the time of the reading in the format hhmmss.sss
    return:
      type: System.DateTime
      description: DateTime object containing the time.
    content.vb: Public Shared Function TimeOfReading(date As String, time As String) As Date
  overload: Meadow.Foundation.Sensors.GPS.NMEAHelpers.TimeOfReading*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Meadow.Foundation.Sensors.GPS.NMEAHelpers.DegreesMinutesDecode(System.String,System.String)
  commentId: M:Meadow.Foundation.Sensors.GPS.NMEAHelpers.DegreesMinutesDecode(System.String,System.String)
  id: DegreesMinutesDecode(System.String,System.String)
  parent: Meadow.Foundation.Sensors.GPS.NMEAHelpers
  langs:
  - csharp
  - vb
  name: DegreesMinutesDecode(String, String)
  nameWithType: NMEAHelpers.DegreesMinutesDecode(String, String)
  fullName: Meadow.Foundation.Sensors.GPS.NMEAHelpers.DegreesMinutesDecode(System.String, System.String)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.GPS.NMEA/NMEAHelpers.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DegreesMinutesDecode
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.GPS.NMEA/NMEAHelpers.cs
    startLine: 63
  assemblies:
  - Sensors.GPS.NMEA
  namespace: Meadow.Foundation.Sensors.GPS
  summary: "\nDecode the degrees / minutes location and return a DMPosition.\n"
  example: []
  syntax:
    content: public static DegreeMinutePosition DegreesMinutesDecode(string location, string direction)
    parameters:
    - id: location
      type: System.String
      description: Location in the format dddmm.mmmm or ddmm.mmmm
    - id: direction
      type: System.String
      description: Direction of the reading, one of N, S, E, W.
    return:
      type: Meadow.Foundation.Sensors.GPS.DegreeMinutePosition
      description: DMPosition in degrees and minutes.
    content.vb: Public Shared Function DegreesMinutesDecode(location As String, direction As String) As DegreeMinutePosition
  overload: Meadow.Foundation.Sensors.GPS.NMEAHelpers.DegreesMinutesDecode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Throw if the location string cannot be decoded.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Meadow.Foundation.Sensors.GPS
  commentId: N:Meadow.Foundation.Sensors.GPS
  name: Meadow.Foundation.Sensors.GPS
  nameWithType: Meadow.Foundation.Sensors.GPS
  fullName: Meadow.Foundation.Sensors.GPS
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Meadow.Foundation.Sensors.GPS.NMEAHelpers.TimeOfReading*
  commentId: Overload:Meadow.Foundation.Sensors.GPS.NMEAHelpers.TimeOfReading
  name: TimeOfReading
  nameWithType: NMEAHelpers.TimeOfReading
  fullName: Meadow.Foundation.Sensors.GPS.NMEAHelpers.TimeOfReading
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Meadow.Foundation.Sensors.GPS.NMEAHelpers.DegreesMinutesDecode*
  commentId: Overload:Meadow.Foundation.Sensors.GPS.NMEAHelpers.DegreesMinutesDecode
  name: DegreesMinutesDecode
  nameWithType: NMEAHelpers.DegreesMinutesDecode
  fullName: Meadow.Foundation.Sensors.GPS.NMEAHelpers.DegreesMinutesDecode
- uid: Meadow.Foundation.Sensors.GPS.DegreeMinutePosition
  commentId: T:Meadow.Foundation.Sensors.GPS.DegreeMinutePosition
  parent: Meadow.Foundation.Sensors.GPS
  name: DegreeMinutePosition
  nameWithType: DegreeMinutePosition
  fullName: Meadow.Foundation.Sensors.GPS.DegreeMinutePosition
