### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280
  commentId: T:Meadow.Foundation.Sensors.Atmospheric.BME280
  id: BME280
  parent: Meadow.Foundation.Sensors.Atmospheric
  children:
  - Meadow.Foundation.Sensors.Atmospheric.BME280.#ctor(System.Byte,System.UInt16,System.UInt16,System.Single,System.Single,System.Single)
  - Meadow.Foundation.Sensors.Atmospheric.BME280.Filter
  - Meadow.Foundation.Sensors.Atmospheric.BME280.Humidity
  - Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityChanged
  - Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityChangeNotificationThreshold
  - Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityOverSampling
  - Meadow.Foundation.Sensors.Atmospheric.BME280.MinimumPollingPeriod
  - Meadow.Foundation.Sensors.Atmospheric.BME280.Mode
  - Meadow.Foundation.Sensors.Atmospheric.BME280.Pressure
  - Meadow.Foundation.Sensors.Atmospheric.BME280.PressureChanged
  - Meadow.Foundation.Sensors.Atmospheric.BME280.PressureChangeNotificationThreshold
  - Meadow.Foundation.Sensors.Atmospheric.BME280.PressureOversampling
  - Meadow.Foundation.Sensors.Atmospheric.BME280.Reset
  - Meadow.Foundation.Sensors.Atmospheric.BME280.Standby
  - Meadow.Foundation.Sensors.Atmospheric.BME280.Temperature
  - Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureChanged
  - Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureChangeNotificationThreshold
  - Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureOverSampling
  - Meadow.Foundation.Sensors.Atmospheric.BME280.Update
  - Meadow.Foundation.Sensors.Atmospheric.BME280.UpdateConfiguration
  langs:
  - csharp
  - vb
  name: BME280
  nameWithType: BME280
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280
  type: Class
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: BME280
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 13
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nBME280 Temperature, Pressure and Humidity Sensor.\n"
  remarks: "\nThis class implements the functionality necessary to read the temperature, pressure and humidity\nfrom the Bosch BME280 sensor.\n"
  example: []
  syntax:
    content: 'public class BME280 : object, ITemperatureSensor, IHumiditySensor, IPressureSensor, ISensor'
    content.vb: >-
      Public Class BME280
          Inherits Object
          Implements ITemperatureSensor, IHumiditySensor, IPressureSensor, ISensor
  inheritance:
  - System.Object
  implements:
  - Meadow.Foundation.Sensors.ITemperatureSensor
  - Meadow.Foundation.Sensors.IHumiditySensor
  - Meadow.Foundation.Sensors.IPressureSensor
  - Meadow.Foundation.Sensors.ISensor
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.MinimumPollingPeriod
  commentId: F:Meadow.Foundation.Sensors.Atmospheric.BME280.MinimumPollingPeriod
  id: MinimumPollingPeriod
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: MinimumPollingPeriod
  nameWithType: BME280.MinimumPollingPeriod
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.MinimumPollingPeriod
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: MinimumPollingPeriod
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 20
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nMinimum value that should be used for the polling frequency.\n"
  example: []
  syntax:
    content: public const ushort MinimumPollingPeriod = null
    return:
      type: System.UInt16
    content.vb: Public Const MinimumPollingPeriod As UShort = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Temperature
  commentId: P:Meadow.Foundation.Sensors.Atmospheric.BME280.Temperature
  id: Temperature
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: Temperature
  nameWithType: BME280.Temperature
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Temperature
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Temperature
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 171
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nTemperature reading from last update.\n"
  example: []
  syntax:
    content: public float Temperature { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Temperature As Single
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.Temperature*
  implements:
  - Meadow.Foundation.Sensors.ITemperatureSensor.Temperature
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Pressure
  commentId: P:Meadow.Foundation.Sensors.Atmospheric.BME280.Pressure
  id: Pressure
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: Pressure
  nameWithType: BME280.Pressure
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Pressure
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Pressure
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 194
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nPressure reading from the sensor.\n"
  example: []
  syntax:
    content: public float Pressure { get; }
    parameters: []
    return:
      type: System.Single
      description: Current pressure reading from the sensor in Pascals (divide by 100 for hPa).
    content.vb: Public ReadOnly Property Pressure As Single
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.Pressure*
  implements:
  - Meadow.Foundation.Sensors.IPressureSensor.Pressure
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Humidity
  commentId: P:Meadow.Foundation.Sensors.Atmospheric.BME280.Humidity
  id: Humidity
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: Humidity
  nameWithType: BME280.Humidity
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Humidity
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Humidity
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 216
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nHumidity reading from the last update.\n"
  example: []
  syntax:
    content: public float Humidity { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Humidity As Single
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.Humidity*
  implements:
  - Meadow.Foundation.Sensors.IHumiditySensor.Humidity
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureOverSampling
  commentId: P:Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureOverSampling
  id: TemperatureOverSampling
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: TemperatureOverSampling
  nameWithType: BME280.TemperatureOverSampling
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureOverSampling
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: TemperatureOverSampling
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 238
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nTemperature over sampling configuration.\n"
  example: []
  syntax:
    content: public BME280.Oversample TemperatureOverSampling { get; set; }
    parameters: []
    return:
      type: Meadow.Foundation.Sensors.Atmospheric.BME280.Oversample
    content.vb: Public Property TemperatureOverSampling As BME280.Oversample
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureOverSampling*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.PressureOversampling
  commentId: P:Meadow.Foundation.Sensors.Atmospheric.BME280.PressureOversampling
  id: PressureOversampling
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: PressureOversampling
  nameWithType: BME280.PressureOversampling
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.PressureOversampling
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: PressureOversampling
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 243
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nPressure over sampling configuration.\n"
  example: []
  syntax:
    content: public BME280.Oversample PressureOversampling { get; set; }
    parameters: []
    return:
      type: Meadow.Foundation.Sensors.Atmospheric.BME280.Oversample
    content.vb: Public Property PressureOversampling As BME280.Oversample
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.PressureOversampling*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityOverSampling
  commentId: P:Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityOverSampling
  id: HumidityOverSampling
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: HumidityOverSampling
  nameWithType: BME280.HumidityOverSampling
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityOverSampling
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: HumidityOverSampling
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 248
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nHumidity over sampling configuration.\n"
  example: []
  syntax:
    content: public BME280.Oversample HumidityOverSampling { get; set; }
    parameters: []
    return:
      type: Meadow.Foundation.Sensors.Atmospheric.BME280.Oversample
    content.vb: Public Property HumidityOverSampling As BME280.Oversample
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityOverSampling*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Mode
  commentId: P:Meadow.Foundation.Sensors.Atmospheric.BME280.Mode
  id: Mode
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: BME280.Mode
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Mode
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Mode
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 253
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nSet the operating mode for the sensor.\n"
  example: []
  syntax:
    content: public BME280.Modes Mode { get; set; }
    parameters: []
    return:
      type: Meadow.Foundation.Sensors.Atmospheric.BME280.Modes
    content.vb: Public Property Mode As BME280.Modes
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.Mode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Standby
  commentId: P:Meadow.Foundation.Sensors.Atmospheric.BME280.Standby
  id: Standby
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: Standby
  nameWithType: BME280.Standby
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Standby
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Standby
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 258
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nSet the standby period for the sensor.\n"
  example: []
  syntax:
    content: public BME280.StandbyDuration Standby { get; set; }
    parameters: []
    return:
      type: Meadow.Foundation.Sensors.Atmospheric.BME280.StandbyDuration
    content.vb: Public Property Standby As BME280.StandbyDuration
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.Standby*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Filter
  commentId: P:Meadow.Foundation.Sensors.Atmospheric.BME280.Filter
  id: Filter
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: BME280.Filter
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Filter
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Filter
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 266
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nDetermine the time constant for the IIR filter.\n"
  remarks: "\nSee section 3.44 of the datasheet for more informaiton.\n"
  example: []
  syntax:
    content: public BME280.FilterCoefficient Filter { get; set; }
    parameters: []
    return:
      type: Meadow.Foundation.Sensors.Atmospheric.BME280.FilterCoefficient
    content.vb: Public Property Filter As BME280.FilterCoefficient
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.Filter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureChangeNotificationThreshold
  commentId: P:Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureChangeNotificationThreshold
  id: TemperatureChangeNotificationThreshold
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: TemperatureChangeNotificationThreshold
  nameWithType: BME280.TemperatureChangeNotificationThreshold
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureChangeNotificationThreshold
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: TemperatureChangeNotificationThreshold
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 273
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nAny changes in the temperature that are greater than the temperature\nthreshold will cause an event to be raised when the instance is\nset to update automatically.\n"
  example: []
  syntax:
    content: public float TemperatureChangeNotificationThreshold { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property TemperatureChangeNotificationThreshold As Single
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureChangeNotificationThreshold*
  implements:
  - Meadow.Foundation.Sensors.ITemperatureSensor.TemperatureChangeNotificationThreshold
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityChangeNotificationThreshold
  commentId: P:Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityChangeNotificationThreshold
  id: HumidityChangeNotificationThreshold
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: HumidityChangeNotificationThreshold
  nameWithType: BME280.HumidityChangeNotificationThreshold
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityChangeNotificationThreshold
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: HumidityChangeNotificationThreshold
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 280
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nAny changes in the humidity that are greater than the humidity\nthreshold will cause an event to be raised when the instance is\nset to update automatically.\n"
  example: []
  syntax:
    content: public float HumidityChangeNotificationThreshold { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property HumidityChangeNotificationThreshold As Single
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityChangeNotificationThreshold*
  implements:
  - Meadow.Foundation.Sensors.IHumiditySensor.HumidityChangeNotificationThreshold
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.PressureChangeNotificationThreshold
  commentId: P:Meadow.Foundation.Sensors.Atmospheric.BME280.PressureChangeNotificationThreshold
  id: PressureChangeNotificationThreshold
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: PressureChangeNotificationThreshold
  nameWithType: BME280.PressureChangeNotificationThreshold
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.PressureChangeNotificationThreshold
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: PressureChangeNotificationThreshold
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 287
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nAny changes in the pressure that are greater than the pressure\nthreshold will cause an event to be raised when the instance is\nset to update automatically.\n"
  example: []
  syntax:
    content: public float PressureChangeNotificationThreshold { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property PressureChangeNotificationThreshold As Single
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.PressureChangeNotificationThreshold*
  implements:
  - Meadow.Foundation.Sensors.IPressureSensor.PressureChangeNotificationThreshold
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureChanged
  commentId: E:Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureChanged
  id: TemperatureChanged
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: TemperatureChanged
  nameWithType: BME280.TemperatureChanged
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureChanged
  type: Event
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: TemperatureChanged
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 297
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nEvent raised when the temperature change is greater than the \nTemperatureChangeNotificationThreshold value.\n"
  example: []
  syntax:
    content: public event SensorFloatEventHandler TemperatureChanged
    return:
      type: Meadow.Foundation.Sensors.SensorFloatEventHandler
    content.vb: Public Event TemperatureChanged As SensorFloatEventHandler
  implements:
  - Meadow.Foundation.Sensors.ITemperatureSensor.TemperatureChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityChanged
  commentId: E:Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityChanged
  id: HumidityChanged
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: HumidityChanged
  nameWithType: BME280.HumidityChanged
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityChanged
  type: Event
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: HumidityChanged
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 303
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nEvent raised when the humidity change is greater than the\nHumidityChangeNotificationThreshold value.\n"
  example: []
  syntax:
    content: public event SensorFloatEventHandler HumidityChanged
    return:
      type: Meadow.Foundation.Sensors.SensorFloatEventHandler
    content.vb: Public Event HumidityChanged As SensorFloatEventHandler
  implements:
  - Meadow.Foundation.Sensors.IHumiditySensor.HumidityChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.PressureChanged
  commentId: E:Meadow.Foundation.Sensors.Atmospheric.BME280.PressureChanged
  id: PressureChanged
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: PressureChanged
  nameWithType: BME280.PressureChanged
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.PressureChanged
  type: Event
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: PressureChanged
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 309
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nEvent raised when the change in pressure is greater than the\nPressureChangeNotificationThreshold value.\n"
  example: []
  syntax:
    content: public event SensorFloatEventHandler PressureChanged
    return:
      type: Meadow.Foundation.Sensors.SensorFloatEventHandler
    content.vb: Public Event PressureChanged As SensorFloatEventHandler
  implements:
  - Meadow.Foundation.Sensors.IPressureSensor.PressureChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.#ctor(System.Byte,System.UInt16,System.UInt16,System.Single,System.Single,System.Single)
  commentId: M:Meadow.Foundation.Sensors.Atmospheric.BME280.#ctor(System.Byte,System.UInt16,System.UInt16,System.Single,System.Single,System.Single)
  id: '#ctor(System.Byte,System.UInt16,System.UInt16,System.Single,System.Single,System.Single)'
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: BME280(Byte, UInt16, UInt16, Single, Single, Single)
  nameWithType: BME280.BME280(Byte, UInt16, UInt16, Single, Single, Single)
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.BME280(System.Byte, System.UInt16, System.UInt16, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: .ctor
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 335
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nInitializes a new instance of the <xref href=\"Meadow.Foundation.Sensors.Barometric.BME280\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public BME280(byte address = null, ushort speed = null, ushort updateInterval = null, float humidityChangeNotificationThreshold = 0.001F, float temperatureChangeNotificationThreshold = 0.001F, float pressureChangedNotificationThreshold = 10F)
    parameters:
    - id: address
      type: System.Byte
      description: I2C address of the sensor (default = 0x77).
    - id: speed
      type: System.UInt16
      description: Speed of the I2C bus (default = 100KHz).
    - id: updateInterval
      type: System.UInt16
      description: Number of milliseconds between samples (0 indicates polling to be used)
    - id: humidityChangeNotificationThreshold
      type: System.Single
      description: Changes in humidity greater than this value will trigger an event when updatePeriod > 0.
    - id: temperatureChangeNotificationThreshold
      type: System.Single
      description: Changes in temperature greater than this value will trigger an event when updatePeriod > 0.
    - id: pressureChangedNotificationThreshold
      type: System.Single
      description: Changes in pressure greater than this value will trigger an event when updatePeriod > 0.
    content.vb: Public Sub New(address As Byte = Nothing, speed As UShort = Nothing, updateInterval As UShort = Nothing, humidityChangeNotificationThreshold As Single = 0.001F, temperatureChangeNotificationThreshold As Single = 0.001F, pressureChangedNotificationThreshold As Single = 10F)
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.UpdateConfiguration
  commentId: M:Meadow.Foundation.Sensors.Atmospheric.BME280.UpdateConfiguration
  id: UpdateConfiguration
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: UpdateConfiguration()
  nameWithType: BME280.UpdateConfiguration()
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.UpdateConfiguration()
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: UpdateConfiguration
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 423
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nUpdate the configuration for the BME280.\n"
  remarks: "\nThis method uses the data in the configuration properties in order to set up the\nBME280.  Ensure that the following are set correctly before calling this method:\n- Standby\n- Filter\n- HumidityOverSampling\n- TemperatureOverSampling\n- PressureOverSampling\n- Mode\n"
  example: []
  syntax:
    content: public void UpdateConfiguration()
    content.vb: Public Sub UpdateConfiguration
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.UpdateConfiguration*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Reset
  commentId: M:Meadow.Foundation.Sensors.Atmospheric.BME280.Reset
  id: Reset
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: BME280.Reset()
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Reset()
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Reset
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 446
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nReset the sensor.\n"
  remarks: "\nPerform a full power-on-reset of the sensor and reset the configuration of the sensor.\n"
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.Reset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Update
  commentId: M:Meadow.Foundation.Sensors.Atmospheric.BME280.Update
  id: Update
  parent: Meadow.Foundation.Sensors.Atmospheric.BME280
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: BME280.Update()
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Update()
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Update
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Atmospheric.BME280/BME280.cs
    startLine: 505
  assemblies:
  - Sensors.Atmospheric.BME280
  namespace: Meadow.Foundation.Sensors.Atmospheric
  summary: "\nUpdate the sensor information from the BME280.\n"
  remarks: "\nReads the raw temperature, pressure and humidity data from the BME280 and applies\nthe compensation data to get the actual readings.  These are made available through the\nTemperature, Pressure and Humidity properties.\nAll three readings are taken at once to ensure that the three readings are consistent.\nRegister locations and formulas taken from the Bosch BME280 datasheet revision 1.1, May 2015.\nRegister locations - section 5.3 Memory Map\nFormulas - section 4.2.3 Compensation Formulas\nThe integer formulas have been used to try and keep the calculations performant.\n"
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update
  overload: Meadow.Foundation.Sensors.Atmospheric.BME280.Update*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Meadow.Foundation.Sensors.Atmospheric
  commentId: N:Meadow.Foundation.Sensors.Atmospheric
  name: Meadow.Foundation.Sensors.Atmospheric
  nameWithType: Meadow.Foundation.Sensors.Atmospheric
  fullName: Meadow.Foundation.Sensors.Atmospheric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Meadow.Foundation.Sensors.ITemperatureSensor
  commentId: T:Meadow.Foundation.Sensors.ITemperatureSensor
  parent: Meadow.Foundation.Sensors
  name: ITemperatureSensor
  nameWithType: ITemperatureSensor
  fullName: Meadow.Foundation.Sensors.ITemperatureSensor
- uid: Meadow.Foundation.Sensors.IHumiditySensor
  commentId: T:Meadow.Foundation.Sensors.IHumiditySensor
  parent: Meadow.Foundation.Sensors
  name: IHumiditySensor
  nameWithType: IHumiditySensor
  fullName: Meadow.Foundation.Sensors.IHumiditySensor
- uid: Meadow.Foundation.Sensors.IPressureSensor
  commentId: T:Meadow.Foundation.Sensors.IPressureSensor
  parent: Meadow.Foundation.Sensors
  name: IPressureSensor
  nameWithType: IPressureSensor
  fullName: Meadow.Foundation.Sensors.IPressureSensor
- uid: Meadow.Foundation.Sensors.ISensor
  commentId: T:Meadow.Foundation.Sensors.ISensor
  parent: Meadow.Foundation.Sensors
  name: ISensor
  nameWithType: ISensor
  fullName: Meadow.Foundation.Sensors.ISensor
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Meadow.Foundation.Sensors
  commentId: N:Meadow.Foundation.Sensors
  name: Meadow.Foundation.Sensors
  nameWithType: Meadow.Foundation.Sensors
  fullName: Meadow.Foundation.Sensors
- uid: System.UInt16
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Temperature*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.Temperature
  name: Temperature
  nameWithType: BME280.Temperature
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Temperature
- uid: Meadow.Foundation.Sensors.ITemperatureSensor.Temperature
  commentId: P:Meadow.Foundation.Sensors.ITemperatureSensor.Temperature
  parent: Meadow.Foundation.Sensors.ITemperatureSensor
  name: Temperature
  nameWithType: ITemperatureSensor.Temperature
  fullName: Meadow.Foundation.Sensors.ITemperatureSensor.Temperature
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Pressure*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.Pressure
  name: Pressure
  nameWithType: BME280.Pressure
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Pressure
- uid: Meadow.Foundation.Sensors.IPressureSensor.Pressure
  commentId: P:Meadow.Foundation.Sensors.IPressureSensor.Pressure
  parent: Meadow.Foundation.Sensors.IPressureSensor
  name: Pressure
  nameWithType: IPressureSensor.Pressure
  fullName: Meadow.Foundation.Sensors.IPressureSensor.Pressure
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Humidity*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.Humidity
  name: Humidity
  nameWithType: BME280.Humidity
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Humidity
- uid: Meadow.Foundation.Sensors.IHumiditySensor.Humidity
  commentId: P:Meadow.Foundation.Sensors.IHumiditySensor.Humidity
  parent: Meadow.Foundation.Sensors.IHumiditySensor
  name: Humidity
  nameWithType: IHumiditySensor.Humidity
  fullName: Meadow.Foundation.Sensors.IHumiditySensor.Humidity
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureOverSampling*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureOverSampling
  name: TemperatureOverSampling
  nameWithType: BME280.TemperatureOverSampling
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureOverSampling
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Oversample
  commentId: T:Meadow.Foundation.Sensors.Atmospheric.BME280.Oversample
  parent: Meadow.Foundation.Sensors.Atmospheric
  name: BME280.Oversample
  nameWithType: BME280.Oversample
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Oversample
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.PressureOversampling*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.PressureOversampling
  name: PressureOversampling
  nameWithType: BME280.PressureOversampling
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.PressureOversampling
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityOverSampling*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityOverSampling
  name: HumidityOverSampling
  nameWithType: BME280.HumidityOverSampling
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityOverSampling
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Mode*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.Mode
  name: Mode
  nameWithType: BME280.Mode
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Mode
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Modes
  commentId: T:Meadow.Foundation.Sensors.Atmospheric.BME280.Modes
  parent: Meadow.Foundation.Sensors.Atmospheric
  name: BME280.Modes
  nameWithType: BME280.Modes
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Modes
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Standby*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.Standby
  name: Standby
  nameWithType: BME280.Standby
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Standby
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.StandbyDuration
  commentId: T:Meadow.Foundation.Sensors.Atmospheric.BME280.StandbyDuration
  parent: Meadow.Foundation.Sensors.Atmospheric
  name: BME280.StandbyDuration
  nameWithType: BME280.StandbyDuration
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.StandbyDuration
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Filter*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.Filter
  name: Filter
  nameWithType: BME280.Filter
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Filter
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.FilterCoefficient
  commentId: T:Meadow.Foundation.Sensors.Atmospheric.BME280.FilterCoefficient
  parent: Meadow.Foundation.Sensors.Atmospheric
  name: BME280.FilterCoefficient
  nameWithType: BME280.FilterCoefficient
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.FilterCoefficient
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureChangeNotificationThreshold*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureChangeNotificationThreshold
  name: TemperatureChangeNotificationThreshold
  nameWithType: BME280.TemperatureChangeNotificationThreshold
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.TemperatureChangeNotificationThreshold
- uid: Meadow.Foundation.Sensors.ITemperatureSensor.TemperatureChangeNotificationThreshold
  commentId: P:Meadow.Foundation.Sensors.ITemperatureSensor.TemperatureChangeNotificationThreshold
  parent: Meadow.Foundation.Sensors.ITemperatureSensor
  name: TemperatureChangeNotificationThreshold
  nameWithType: ITemperatureSensor.TemperatureChangeNotificationThreshold
  fullName: Meadow.Foundation.Sensors.ITemperatureSensor.TemperatureChangeNotificationThreshold
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityChangeNotificationThreshold*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityChangeNotificationThreshold
  name: HumidityChangeNotificationThreshold
  nameWithType: BME280.HumidityChangeNotificationThreshold
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.HumidityChangeNotificationThreshold
- uid: Meadow.Foundation.Sensors.IHumiditySensor.HumidityChangeNotificationThreshold
  commentId: P:Meadow.Foundation.Sensors.IHumiditySensor.HumidityChangeNotificationThreshold
  parent: Meadow.Foundation.Sensors.IHumiditySensor
  name: HumidityChangeNotificationThreshold
  nameWithType: IHumiditySensor.HumidityChangeNotificationThreshold
  fullName: Meadow.Foundation.Sensors.IHumiditySensor.HumidityChangeNotificationThreshold
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.PressureChangeNotificationThreshold*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.PressureChangeNotificationThreshold
  name: PressureChangeNotificationThreshold
  nameWithType: BME280.PressureChangeNotificationThreshold
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.PressureChangeNotificationThreshold
- uid: Meadow.Foundation.Sensors.IPressureSensor.PressureChangeNotificationThreshold
  commentId: P:Meadow.Foundation.Sensors.IPressureSensor.PressureChangeNotificationThreshold
  parent: Meadow.Foundation.Sensors.IPressureSensor
  name: PressureChangeNotificationThreshold
  nameWithType: IPressureSensor.PressureChangeNotificationThreshold
  fullName: Meadow.Foundation.Sensors.IPressureSensor.PressureChangeNotificationThreshold
- uid: Meadow.Foundation.Sensors.ITemperatureSensor.TemperatureChanged
  commentId: E:Meadow.Foundation.Sensors.ITemperatureSensor.TemperatureChanged
  parent: Meadow.Foundation.Sensors.ITemperatureSensor
  name: TemperatureChanged
  nameWithType: ITemperatureSensor.TemperatureChanged
  fullName: Meadow.Foundation.Sensors.ITemperatureSensor.TemperatureChanged
- uid: Meadow.Foundation.Sensors.SensorFloatEventHandler
  commentId: T:Meadow.Foundation.Sensors.SensorFloatEventHandler
  parent: Meadow.Foundation.Sensors
  name: SensorFloatEventHandler
  nameWithType: SensorFloatEventHandler
  fullName: Meadow.Foundation.Sensors.SensorFloatEventHandler
- uid: Meadow.Foundation.Sensors.IHumiditySensor.HumidityChanged
  commentId: E:Meadow.Foundation.Sensors.IHumiditySensor.HumidityChanged
  parent: Meadow.Foundation.Sensors.IHumiditySensor
  name: HumidityChanged
  nameWithType: IHumiditySensor.HumidityChanged
  fullName: Meadow.Foundation.Sensors.IHumiditySensor.HumidityChanged
- uid: Meadow.Foundation.Sensors.IPressureSensor.PressureChanged
  commentId: E:Meadow.Foundation.Sensors.IPressureSensor.PressureChanged
  parent: Meadow.Foundation.Sensors.IPressureSensor
  name: PressureChanged
  nameWithType: IPressureSensor.PressureChanged
  fullName: Meadow.Foundation.Sensors.IPressureSensor.PressureChanged
- uid: Meadow.Foundation.Sensors.Barometric.BME280
  commentId: T:Meadow.Foundation.Sensors.Barometric.BME280
  isExternal: true
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.#ctor*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.#ctor
  name: BME280
  nameWithType: BME280.BME280
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.BME280
- uid: System.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.UpdateConfiguration*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.UpdateConfiguration
  name: UpdateConfiguration
  nameWithType: BME280.UpdateConfiguration
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.UpdateConfiguration
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Reset*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.Reset
  name: Reset
  nameWithType: BME280.Reset
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Reset
- uid: Meadow.Foundation.Sensors.Atmospheric.BME280.Update*
  commentId: Overload:Meadow.Foundation.Sensors.Atmospheric.BME280.Update
  name: Update
  nameWithType: BME280.Update
  fullName: Meadow.Foundation.Sensors.Atmospheric.BME280.Update
