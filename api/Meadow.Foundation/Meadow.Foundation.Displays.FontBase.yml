### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Displays.FontBase
  commentId: T:Meadow.Foundation.Displays.FontBase
  id: FontBase
  parent: Meadow.Foundation.Displays
  children:
  - Meadow.Foundation.Displays.FontBase.Height
  - Meadow.Foundation.Displays.FontBase.Item(System.Char)
  - Meadow.Foundation.Displays.FontBase.Width
  langs:
  - csharp
  - vb
  name: FontBase
  nameWithType: FontBase
  fullName: Meadow.Foundation.Displays.FontBase
  type: Class
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/FontBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: FontBase
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/FontBase.cs
    startLine: 5
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nAbstract class for a Font.\n"
  example: []
  syntax:
    content: 'public abstract class FontBase : object'
    content.vb: >-
      Public MustInherit Class FontBase

          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Meadow.Foundation.Displays.Font4x8
  - Meadow.Foundation.Displays.Font8x12
  - Meadow.Foundation.Displays.Font8x8
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Meadow.Foundation.Displays.FontBase.Width
  commentId: P:Meadow.Foundation.Displays.FontBase.Width
  id: Width
  parent: Meadow.Foundation.Displays.FontBase
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: FontBase.Width
  fullName: Meadow.Foundation.Displays.FontBase.Width
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/FontBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Width
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/FontBase.cs
    startLine: 10
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nWidth of a character in the font.\n"
  example: []
  syntax:
    content: public abstract int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public MustOverride ReadOnly Property Width As Integer
  overload: Meadow.Foundation.Displays.FontBase.Width*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Meadow.Foundation.Displays.FontBase.Height
  commentId: P:Meadow.Foundation.Displays.FontBase.Height
  id: Height
  parent: Meadow.Foundation.Displays.FontBase
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: FontBase.Height
  fullName: Meadow.Foundation.Displays.FontBase.Height
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/FontBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Height
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/FontBase.cs
    startLine: 15
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nHeight of a character in the font.\n"
  example: []
  syntax:
    content: public abstract int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public MustOverride ReadOnly Property Height As Integer
  overload: Meadow.Foundation.Displays.FontBase.Height*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Meadow.Foundation.Displays.FontBase.Item(System.Char)
  commentId: P:Meadow.Foundation.Displays.FontBase.Item(System.Char)
  id: Item(System.Char)
  parent: Meadow.Foundation.Displays.FontBase
  langs:
  - csharp
  - vb
  name: Item[Char]
  nameWithType: FontBase.Item[Char]
  fullName: Meadow.Foundation.Displays.FontBase.Item[System.Char]
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/FontBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: this[]
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/FontBase.cs
    startLine: 22
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nGet the binary representation of the ASCII character from the font table.\n"
  example: []
  syntax:
    content: public abstract byte[] this[char character] { get; }
    parameters:
    - id: character
      type: System.Char
      description: Character to look up.
    return:
      type: System.Byte[]
      description: Array of bytes representing the binary bit pattern of the character.
    content.vb: Public MustOverride ReadOnly Property Item(character As Char) As Byte()
  overload: Meadow.Foundation.Displays.FontBase.Item*
  nameWithType.vb: FontBase.Item(Char)
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: Meadow.Foundation.Displays.FontBase.Item(System.Char)
  name.vb: Item(Char)
references:
- uid: Meadow.Foundation.Displays
  commentId: N:Meadow.Foundation.Displays
  name: Meadow.Foundation.Displays
  nameWithType: Meadow.Foundation.Displays
  fullName: Meadow.Foundation.Displays
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Meadow.Foundation.Displays.FontBase.Width*
  commentId: Overload:Meadow.Foundation.Displays.FontBase.Width
  name: Width
  nameWithType: FontBase.Width
  fullName: Meadow.Foundation.Displays.FontBase.Width
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Meadow.Foundation.Displays.FontBase.Height*
  commentId: Overload:Meadow.Foundation.Displays.FontBase.Height
  name: Height
  nameWithType: FontBase.Height
  fullName: Meadow.Foundation.Displays.FontBase.Height
- uid: Meadow.Foundation.Displays.FontBase.Item*
  commentId: Overload:Meadow.Foundation.Displays.FontBase.Item
  name: Item
  nameWithType: FontBase.Item
  fullName: Meadow.Foundation.Displays.FontBase.Item
- uid: System.Char
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
