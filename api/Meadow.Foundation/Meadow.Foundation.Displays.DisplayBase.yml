### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Displays.DisplayBase
  commentId: T:Meadow.Foundation.Displays.DisplayBase
  id: DisplayBase
  parent: Meadow.Foundation.Displays
  children:
  - Meadow.Foundation.Displays.DisplayBase.Clear(System.Boolean)
  - Meadow.Foundation.Displays.DisplayBase.ColorMode
  - Meadow.Foundation.Displays.DisplayBase.DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],Meadow.Foundation.Displays.DisplayBase.BitmapMode)
  - Meadow.Foundation.Displays.DisplayBase.DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Drawing.Color)
  - Meadow.Foundation.Displays.DisplayBase.DrawPixel(System.Int32,System.Int32,System.Boolean)
  - Meadow.Foundation.Displays.DisplayBase.DrawPixel(System.Int32,System.Int32,System.Drawing.Color)
  - Meadow.Foundation.Displays.DisplayBase.Height
  - Meadow.Foundation.Displays.DisplayBase.IgnoreOutOfBoundsPixels
  - Meadow.Foundation.Displays.DisplayBase.Show
  - Meadow.Foundation.Displays.DisplayBase.Width
  langs:
  - csharp
  - vb
  name: DisplayBase
  nameWithType: DisplayBase
  fullName: Meadow.Foundation.Displays.DisplayBase
  type: Class
  source:
    remote:
      path: Source/Meadow.Foundation/Displays/DisplayBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DisplayBase
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Displays/DisplayBase.cs
    startLine: 7
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Displays
  summary: "\nDefine the interface for the display object.\n"
  example: []
  syntax:
    content: 'public abstract class DisplayBase : IDisplay'
    content.vb: >-
      Public MustInherit Class DisplayBase

          Implements IDisplay
  inheritance:
  - System.Object
  derivedClasses:
  - Meadow.Foundation.Displays.DisplayTftSpiBase
  - Meadow.Foundation.Displays.PCD8544
  - Meadow.Foundation.Displays.SPIDisplayBase
  - Meadow.Foundation.Displays.SSD1306
  implements:
  - Meadow.Foundation.Displays.IDisplay
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Meadow.Foundation.Displays.DisplayBase.ColorMode
  commentId: P:Meadow.Foundation.Displays.DisplayBase.ColorMode
  id: ColorMode
  parent: Meadow.Foundation.Displays.DisplayBase
  langs:
  - csharp
  - vb
  name: ColorMode
  nameWithType: DisplayBase.ColorMode
  fullName: Meadow.Foundation.Displays.DisplayBase.ColorMode
  type: Property
  source:
    remote:
      path: Source/Meadow.Foundation/Displays/DisplayBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: ColorMode
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Displays/DisplayBase.cs
    startLine: 31
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Displays
  syntax:
    content: public abstract DisplayBase.DisplayColorMode ColorMode { get; }
    parameters: []
    return:
      type: Meadow.Foundation.Displays.DisplayBase.DisplayColorMode
    content.vb: Public MustOverride ReadOnly Property ColorMode As DisplayBase.DisplayColorMode
  overload: Meadow.Foundation.Displays.DisplayBase.ColorMode*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Meadow.Foundation.Displays.DisplayBase.Width
  commentId: P:Meadow.Foundation.Displays.DisplayBase.Width
  id: Width
  parent: Meadow.Foundation.Displays.DisplayBase
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: DisplayBase.Width
  fullName: Meadow.Foundation.Displays.DisplayBase.Width
  type: Property
  source:
    remote:
      path: Source/Meadow.Foundation/Displays/DisplayBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Width
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Displays/DisplayBase.cs
    startLine: 33
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Displays
  syntax:
    content: public abstract uint Width { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public MustOverride ReadOnly Property Width As UInteger
  overload: Meadow.Foundation.Displays.DisplayBase.Width*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Meadow.Foundation.Displays.DisplayBase.Height
  commentId: P:Meadow.Foundation.Displays.DisplayBase.Height
  id: Height
  parent: Meadow.Foundation.Displays.DisplayBase
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: DisplayBase.Height
  fullName: Meadow.Foundation.Displays.DisplayBase.Height
  type: Property
  source:
    remote:
      path: Source/Meadow.Foundation/Displays/DisplayBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Height
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Displays/DisplayBase.cs
    startLine: 34
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Displays
  syntax:
    content: public abstract uint Height { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public MustOverride ReadOnly Property Height As UInteger
  overload: Meadow.Foundation.Displays.DisplayBase.Height*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Meadow.Foundation.Displays.DisplayBase.IgnoreOutOfBoundsPixels
  commentId: P:Meadow.Foundation.Displays.DisplayBase.IgnoreOutOfBoundsPixels
  id: IgnoreOutOfBoundsPixels
  parent: Meadow.Foundation.Displays.DisplayBase
  langs:
  - csharp
  - vb
  name: IgnoreOutOfBoundsPixels
  nameWithType: DisplayBase.IgnoreOutOfBoundsPixels
  fullName: Meadow.Foundation.Displays.DisplayBase.IgnoreOutOfBoundsPixels
  type: Property
  source:
    remote:
      path: Source/Meadow.Foundation/Displays/DisplayBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: IgnoreOutOfBoundsPixels
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Displays/DisplayBase.cs
    startLine: 40
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Displays
  summary: "\nIndicate of the hardware driver should ignore out of bounds pixels\nor if the driver should generate an exception.\n"
  example: []
  syntax:
    content: public bool IgnoreOutOfBoundsPixels { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IgnoreOutOfBoundsPixels As Boolean
  overload: Meadow.Foundation.Displays.DisplayBase.IgnoreOutOfBoundsPixels*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.DisplayBase.Show
  commentId: M:Meadow.Foundation.Displays.DisplayBase.Show
  id: Show
  parent: Meadow.Foundation.Displays.DisplayBase
  langs:
  - csharp
  - vb
  name: Show()
  nameWithType: DisplayBase.Show()
  fullName: Meadow.Foundation.Displays.DisplayBase.Show()
  type: Method
  source:
    remote:
      path: Source/Meadow.Foundation/Displays/DisplayBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Show
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Displays/DisplayBase.cs
    startLine: 45
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Displays
  summary: "\nTransfer the contents of the buffer to the display.\n"
  example: []
  syntax:
    content: public abstract void Show()
    content.vb: Public MustOverride Sub Show
  overload: Meadow.Foundation.Displays.DisplayBase.Show*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Meadow.Foundation.Displays.DisplayBase.Clear(System.Boolean)
  commentId: M:Meadow.Foundation.Displays.DisplayBase.Clear(System.Boolean)
  id: Clear(System.Boolean)
  parent: Meadow.Foundation.Displays.DisplayBase
  langs:
  - csharp
  - vb
  name: Clear(Boolean)
  nameWithType: DisplayBase.Clear(Boolean)
  fullName: Meadow.Foundation.Displays.DisplayBase.Clear(System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Meadow.Foundation/Displays/DisplayBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Clear
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Displays/DisplayBase.cs
    startLine: 51
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Displays
  summary: "\nClear the display.\n"
  example: []
  syntax:
    content: public abstract void Clear(bool updateDisplay = false)
    parameters:
    - id: updateDisplay
      type: System.Boolean
      description: Update the dipslay once the buffer has been cleared when true.
    content.vb: Public MustOverride Sub Clear(updateDisplay As Boolean = False)
  overload: Meadow.Foundation.Displays.DisplayBase.Clear*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Meadow.Foundation.Displays.DisplayBase.DrawPixel(System.Int32,System.Int32,System.Drawing.Color)
  commentId: M:Meadow.Foundation.Displays.DisplayBase.DrawPixel(System.Int32,System.Int32,System.Drawing.Color)
  id: DrawPixel(System.Int32,System.Int32,System.Drawing.Color)
  parent: Meadow.Foundation.Displays.DisplayBase
  langs:
  - csharp
  - vb
  name: DrawPixel(Int32, Int32, Color)
  nameWithType: DisplayBase.DrawPixel(Int32, Int32, Color)
  fullName: Meadow.Foundation.Displays.DisplayBase.DrawPixel(System.Int32, System.Int32, System.Drawing.Color)
  type: Method
  source:
    remote:
      path: Source/Meadow.Foundation/Displays/DisplayBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawPixel
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Displays/DisplayBase.cs
    startLine: 53
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Displays
  syntax:
    content: public abstract void DrawPixel(int x, int y, Color color)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: color
      type: System.Drawing.Color
    content.vb: Public MustOverride Sub DrawPixel(x As Integer, y As Integer, color As Color)
  overload: Meadow.Foundation.Displays.DisplayBase.DrawPixel*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Meadow.Foundation.Displays.DisplayBase.DrawPixel(System.Int32,System.Int32,System.Boolean)
  commentId: M:Meadow.Foundation.Displays.DisplayBase.DrawPixel(System.Int32,System.Int32,System.Boolean)
  id: DrawPixel(System.Int32,System.Int32,System.Boolean)
  parent: Meadow.Foundation.Displays.DisplayBase
  langs:
  - csharp
  - vb
  name: DrawPixel(Int32, Int32, Boolean)
  nameWithType: DisplayBase.DrawPixel(Int32, Int32, Boolean)
  fullName: Meadow.Foundation.Displays.DisplayBase.DrawPixel(System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Meadow.Foundation/Displays/DisplayBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawPixel
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Displays/DisplayBase.cs
    startLine: 60
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Displays
  summary: "\n"
  example: []
  syntax:
    content: public abstract void DrawPixel(int x, int y, bool colored)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    - id: colored
      type: System.Boolean
      description: ''
    content.vb: Public MustOverride Sub DrawPixel(x As Integer, y As Integer, colored As Boolean)
  overload: Meadow.Foundation.Displays.DisplayBase.DrawPixel*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Meadow.Foundation.Displays.DisplayBase.DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],Meadow.Foundation.Displays.DisplayBase.BitmapMode)
  commentId: M:Meadow.Foundation.Displays.DisplayBase.DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],Meadow.Foundation.Displays.DisplayBase.BitmapMode)
  id: DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],Meadow.Foundation.Displays.DisplayBase.BitmapMode)
  parent: Meadow.Foundation.Displays.DisplayBase
  langs:
  - csharp
  - vb
  name: DrawBitmap(Int32, Int32, Int32, Int32, Byte[], DisplayBase.BitmapMode)
  nameWithType: DisplayBase.DrawBitmap(Int32, Int32, Int32, Int32, Byte[], DisplayBase.BitmapMode)
  fullName: Meadow.Foundation.Displays.DisplayBase.DrawBitmap(System.Int32, System.Int32, System.Int32, System.Int32, System.Byte[], Meadow.Foundation.Displays.DisplayBase.BitmapMode)
  type: Method
  source:
    remote:
      path: Source/Meadow.Foundation/Displays/DisplayBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawBitmap
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Displays/DisplayBase.cs
    startLine: 72
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Displays
  summary: "\nCopy a 1bpp bitmap to the display.\n"
  example: []
  syntax:
    content: public abstract void DrawBitmap(int x, int y, int width, int height, byte[] bitmap, DisplayBase.BitmapMode bitmapMode)
    parameters:
    - id: x
      type: System.Int32
      description: Abscissa of the top left corner of the bitmap.
    - id: y
      type: System.Int32
      description: Ordinate of the top left corner of the bitmap.
    - id: width
      type: System.Int32
      description: Width of the bitmap.
    - id: height
      type: System.Int32
      description: Height of the bitmap.
    - id: bitmap
      type: System.Byte[]
      description: Bitmap to transfer
    - id: bitmapMode
      type: Meadow.Foundation.Displays.DisplayBase.BitmapMode
      description: How should the bitmap be transferred to the display?
    content.vb: Public MustOverride Sub DrawBitmap(x As Integer, y As Integer, width As Integer, height As Integer, bitmap As Byte(), bitmapMode As DisplayBase.BitmapMode)
  overload: Meadow.Foundation.Displays.DisplayBase.DrawBitmap*
  nameWithType.vb: DisplayBase.DrawBitmap(Int32, Int32, Int32, Int32, Byte(), DisplayBase.BitmapMode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Meadow.Foundation.Displays.DisplayBase.DrawBitmap(System.Int32, System.Int32, System.Int32, System.Int32, System.Byte(), Meadow.Foundation.Displays.DisplayBase.BitmapMode)
  name.vb: DrawBitmap(Int32, Int32, Int32, Int32, Byte(), DisplayBase.BitmapMode)
- uid: Meadow.Foundation.Displays.DisplayBase.DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Drawing.Color)
  commentId: M:Meadow.Foundation.Displays.DisplayBase.DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Drawing.Color)
  id: DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Drawing.Color)
  parent: Meadow.Foundation.Displays.DisplayBase
  langs:
  - csharp
  - vb
  name: DrawBitmap(Int32, Int32, Int32, Int32, Byte[], Color)
  nameWithType: DisplayBase.DrawBitmap(Int32, Int32, Int32, Int32, Byte[], Color)
  fullName: Meadow.Foundation.Displays.DisplayBase.DrawBitmap(System.Int32, System.Int32, System.Int32, System.Int32, System.Byte[], System.Drawing.Color)
  type: Method
  source:
    remote:
      path: Source/Meadow.Foundation/Displays/DisplayBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawBitmap
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Displays/DisplayBase.cs
    startLine: 83
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Displays
  summary: "\nCopy a 1bpp bit bitmap to the display.\n"
  example: []
  syntax:
    content: public abstract void DrawBitmap(int x, int y, int width, int height, byte[] bitmap, Color color)
    parameters:
    - id: x
      type: System.Int32
      description: Abscissa of the top left corner of the bitmap.
    - id: y
      type: System.Int32
      description: Ordinate of the top left corner of the bitmap.
    - id: width
      type: System.Int32
      description: Width of the bitmap.
    - id: height
      type: System.Int32
      description: Height of the bitmap.
    - id: bitmap
      type: System.Byte[]
      description: Bitmap to transfer
    - id: color
      type: System.Drawing.Color
    content.vb: Public MustOverride Sub DrawBitmap(x As Integer, y As Integer, width As Integer, height As Integer, bitmap As Byte(), color As Color)
  overload: Meadow.Foundation.Displays.DisplayBase.DrawBitmap*
  nameWithType.vb: DisplayBase.DrawBitmap(Int32, Int32, Int32, Int32, Byte(), Color)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Meadow.Foundation.Displays.DisplayBase.DrawBitmap(System.Int32, System.Int32, System.Int32, System.Int32, System.Byte(), System.Drawing.Color)
  name.vb: DrawBitmap(Int32, Int32, Int32, Int32, Byte(), Color)
references:
- uid: Meadow.Foundation.Displays
  commentId: N:Meadow.Foundation.Displays
  name: Meadow.Foundation.Displays
  nameWithType: Meadow.Foundation.Displays
  fullName: Meadow.Foundation.Displays
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Meadow.Foundation.Displays.IDisplay
  commentId: T:Meadow.Foundation.Displays.IDisplay
  parent: Meadow.Foundation.Displays
  name: IDisplay
  nameWithType: IDisplay
  fullName: Meadow.Foundation.Displays.IDisplay
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Meadow.Foundation.Displays.DisplayBase.ColorMode*
  commentId: Overload:Meadow.Foundation.Displays.DisplayBase.ColorMode
  name: ColorMode
  nameWithType: DisplayBase.ColorMode
  fullName: Meadow.Foundation.Displays.DisplayBase.ColorMode
- uid: Meadow.Foundation.Displays.DisplayBase.DisplayColorMode
  commentId: T:Meadow.Foundation.Displays.DisplayBase.DisplayColorMode
  parent: Meadow.Foundation.Displays
  name: DisplayBase.DisplayColorMode
  nameWithType: DisplayBase.DisplayColorMode
  fullName: Meadow.Foundation.Displays.DisplayBase.DisplayColorMode
- uid: Meadow.Foundation.Displays.DisplayBase.Width*
  commentId: Overload:Meadow.Foundation.Displays.DisplayBase.Width
  name: Width
  nameWithType: DisplayBase.Width
  fullName: Meadow.Foundation.Displays.DisplayBase.Width
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Meadow.Foundation.Displays.DisplayBase.Height*
  commentId: Overload:Meadow.Foundation.Displays.DisplayBase.Height
  name: Height
  nameWithType: DisplayBase.Height
  fullName: Meadow.Foundation.Displays.DisplayBase.Height
- uid: Meadow.Foundation.Displays.DisplayBase.IgnoreOutOfBoundsPixels*
  commentId: Overload:Meadow.Foundation.Displays.DisplayBase.IgnoreOutOfBoundsPixels
  name: IgnoreOutOfBoundsPixels
  nameWithType: DisplayBase.IgnoreOutOfBoundsPixels
  fullName: Meadow.Foundation.Displays.DisplayBase.IgnoreOutOfBoundsPixels
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Meadow.Foundation.Displays.DisplayBase.Show*
  commentId: Overload:Meadow.Foundation.Displays.DisplayBase.Show
  name: Show
  nameWithType: DisplayBase.Show
  fullName: Meadow.Foundation.Displays.DisplayBase.Show
- uid: Meadow.Foundation.Displays.DisplayBase.Clear*
  commentId: Overload:Meadow.Foundation.Displays.DisplayBase.Clear
  name: Clear
  nameWithType: DisplayBase.Clear
  fullName: Meadow.Foundation.Displays.DisplayBase.Clear
- uid: Meadow.Foundation.Displays.DisplayBase.DrawPixel*
  commentId: Overload:Meadow.Foundation.Displays.DisplayBase.DrawPixel
  name: DrawPixel
  nameWithType: DisplayBase.DrawPixel
  fullName: Meadow.Foundation.Displays.DisplayBase.DrawPixel
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Color
  commentId: T:System.Drawing.Color
  parent: System.Drawing
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
- uid: Meadow.Foundation.Displays.DisplayBase.DrawBitmap*
  commentId: Overload:Meadow.Foundation.Displays.DisplayBase.DrawBitmap
  name: DrawBitmap
  nameWithType: DisplayBase.DrawBitmap
  fullName: Meadow.Foundation.Displays.DisplayBase.DrawBitmap
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Meadow.Foundation.Displays.DisplayBase.BitmapMode
  commentId: T:Meadow.Foundation.Displays.DisplayBase.BitmapMode
  parent: Meadow.Foundation.Displays
  name: DisplayBase.BitmapMode
  nameWithType: DisplayBase.BitmapMode
  fullName: Meadow.Foundation.Displays.DisplayBase.BitmapMode
