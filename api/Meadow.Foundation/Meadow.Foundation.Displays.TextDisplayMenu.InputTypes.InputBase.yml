### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  commentId: T:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  id: InputBase
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  children:
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._buttonNext
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._buttonPrevious
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._buttonSelect
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._display
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._encoder
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._isInit
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._itemID
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.GetInput(System.String,System.Object)
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleClicked(System.Object,System.EventArgs)
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleNext(System.Object,System.EventArgs)
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandlePrevious(System.Object,System.EventArgs)
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleRotated(System.Object,Meadow.Foundation.Sensors.Rotary.RotaryTurnedEventArgs)
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton)
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Rotary.IRotaryEncoder,Meadow.Foundation.Sensors.Buttons.IButton)
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.ParseValue(System.Object)
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RegisterHandlers
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RewriteInputLine(System.String)
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.UnregisterHandlers
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.ValueChanged
  langs:
  - csharp
  - vb
  name: InputBase
  nameWithType: InputBase
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  type: Class
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: InputBase
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 7
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: 'public abstract class InputBase : IMenuInputItem'
    content.vb: >-
      Public MustInherit Class InputBase

          Implements IMenuInputItem
  inheritance:
  - System.Object
  derivedClasses:
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.ListBase
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.NumericBase
  - Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.TimeBase
  implements:
  - Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._encoder
  commentId: F:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._encoder
  id: _encoder
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: _encoder
  nameWithType: InputBase._encoder
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._encoder
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: _encoder
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 9
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: protected IRotaryEncoder _encoder
    return:
      type: Meadow.Foundation.Sensors.Rotary.IRotaryEncoder
    content.vb: Protected _encoder As IRotaryEncoder
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._buttonNext
  commentId: F:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._buttonNext
  id: _buttonNext
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: _buttonNext
  nameWithType: InputBase._buttonNext
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._buttonNext
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: _buttonNext
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 10
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: protected IButton _buttonNext
    return:
      type: Meadow.Foundation.Sensors.Buttons.IButton
    content.vb: Protected _buttonNext As IButton
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._buttonPrevious
  commentId: F:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._buttonPrevious
  id: _buttonPrevious
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: _buttonPrevious
  nameWithType: InputBase._buttonPrevious
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._buttonPrevious
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: _buttonPrevious
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 11
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: protected IButton _buttonPrevious
    return:
      type: Meadow.Foundation.Sensors.Buttons.IButton
    content.vb: Protected _buttonPrevious As IButton
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._buttonSelect
  commentId: F:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._buttonSelect
  id: _buttonSelect
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: _buttonSelect
  nameWithType: InputBase._buttonSelect
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._buttonSelect
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: _buttonSelect
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 12
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: protected IButton _buttonSelect
    return:
      type: Meadow.Foundation.Sensors.Buttons.IButton
    content.vb: Protected _buttonSelect As IButton
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._display
  commentId: F:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._display
  id: _display
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: _display
  nameWithType: InputBase._display
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._display
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: _display
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 13
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: protected ITextDisplay _display
    return:
      type: Meadow.Foundation.Displays.ITextDisplay
    content.vb: Protected _display As ITextDisplay
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._isInit
  commentId: F:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._isInit
  id: _isInit
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: _isInit
  nameWithType: InputBase._isInit
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._isInit
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: _isInit
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 14
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: protected bool _isInit
    return:
      type: System.Boolean
    content.vb: Protected _isInit As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._itemID
  commentId: F:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._itemID
  id: _itemID
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: _itemID
  nameWithType: InputBase._itemID
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase._itemID
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: _itemID
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 15
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: protected string _itemID
    return:
      type: System.String
    content.vb: Protected _itemID As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.ValueChanged
  commentId: E:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.ValueChanged
  id: ValueChanged
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: ValueChanged
  nameWithType: InputBase.ValueChanged
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.ValueChanged
  type: Event
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: ValueChanged
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 17
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: public abstract event ValueChangedHandler ValueChanged
    return:
      type: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedHandler
    content.vb: Public MustOverride Event ValueChanged As ValueChangedHandler
  implements:
  - Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.ValueChanged
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.GetInput(System.String,System.Object)
  commentId: M:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.GetInput(System.String,System.Object)
  id: GetInput(System.String,System.Object)
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: GetInput(String, Object)
  nameWithType: InputBase.GetInput(String, Object)
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.GetInput(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: GetInput
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 19
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: public abstract void GetInput(string itemID, object currentValue)
    parameters:
    - id: itemID
      type: System.String
    - id: currentValue
      type: System.Object
    content.vb: Public MustOverride Sub GetInput(itemID As String, currentValue As Object)
  overload: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.GetInput*
  implements:
  - Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.GetInput(System.String,System.Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.ParseValue(System.Object)
  commentId: M:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.ParseValue(System.Object)
  id: ParseValue(System.Object)
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: ParseValue(Object)
  nameWithType: InputBase.ParseValue(Object)
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.ParseValue(System.Object)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: ParseValue
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 20
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: protected abstract void ParseValue(object value)
    parameters:
    - id: value
      type: System.Object
    content.vb: Protected MustOverride Sub ParseValue(value As Object)
  overload: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.ParseValue*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Rotary.IRotaryEncoder,Meadow.Foundation.Sensors.Buttons.IButton)
  commentId: M:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Rotary.IRotaryEncoder,Meadow.Foundation.Sensors.Buttons.IButton)
  id: Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Rotary.IRotaryEncoder,Meadow.Foundation.Sensors.Buttons.IButton)
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: Init(ITextDisplay, IRotaryEncoder, IButton)
  nameWithType: InputBase.Init(ITextDisplay, IRotaryEncoder, IButton)
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.Init(Meadow.Foundation.Displays.ITextDisplay, Meadow.Foundation.Sensors.Rotary.IRotaryEncoder, Meadow.Foundation.Sensors.Buttons.IButton)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Init
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 22
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: public void Init(ITextDisplay display, IRotaryEncoder encoder, IButton buttonSelect)
    parameters:
    - id: display
      type: Meadow.Foundation.Displays.ITextDisplay
    - id: encoder
      type: Meadow.Foundation.Sensors.Rotary.IRotaryEncoder
    - id: buttonSelect
      type: Meadow.Foundation.Sensors.Buttons.IButton
    content.vb: Public Sub Init(display As ITextDisplay, encoder As IRotaryEncoder, buttonSelect As IButton)
  overload: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.Init*
  implements:
  - Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Rotary.IRotaryEncoder,Meadow.Foundation.Sensors.Buttons.IButton)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton)
  commentId: M:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton)
  id: Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton)
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: Init(ITextDisplay, IButton, IButton, IButton)
  nameWithType: InputBase.Init(ITextDisplay, IButton, IButton, IButton)
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.Init(Meadow.Foundation.Displays.ITextDisplay, Meadow.Foundation.Sensors.Buttons.IButton, Meadow.Foundation.Sensors.Buttons.IButton, Meadow.Foundation.Sensors.Buttons.IButton)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Init
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 30
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: public void Init(ITextDisplay display, IButton buttonNext, IButton buttonPrevious, IButton buttonSelect)
    parameters:
    - id: display
      type: Meadow.Foundation.Displays.ITextDisplay
    - id: buttonNext
      type: Meadow.Foundation.Sensors.Buttons.IButton
    - id: buttonPrevious
      type: Meadow.Foundation.Sensors.Buttons.IButton
    - id: buttonSelect
      type: Meadow.Foundation.Sensors.Buttons.IButton
    content.vb: Public Sub Init(display As ITextDisplay, buttonNext As IButton, buttonPrevious As IButton, buttonSelect As IButton)
  overload: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.Init*
  implements:
  - Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RewriteInputLine(System.String)
  commentId: M:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RewriteInputLine(System.String)
  id: RewriteInputLine(System.String)
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: RewriteInputLine(String)
  nameWithType: InputBase.RewriteInputLine(String)
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RewriteInputLine(System.String)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: RewriteInputLine
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 39
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: protected void RewriteInputLine(string text)
    parameters:
    - id: text
      type: System.String
    content.vb: Protected Sub RewriteInputLine(text As String)
  overload: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RewriteInputLine*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RegisterHandlers
  commentId: M:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RegisterHandlers
  id: RegisterHandlers
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: RegisterHandlers()
  nameWithType: InputBase.RegisterHandlers()
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RegisterHandlers()
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: RegisterHandlers
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 45
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: protected void RegisterHandlers()
    content.vb: Protected Sub RegisterHandlers
  overload: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RegisterHandlers*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.UnregisterHandlers
  commentId: M:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.UnregisterHandlers
  id: UnregisterHandlers
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: UnregisterHandlers()
  nameWithType: InputBase.UnregisterHandlers()
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.UnregisterHandlers()
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: UnregisterHandlers
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 59
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: protected void UnregisterHandlers()
    content.vb: Protected Sub UnregisterHandlers
  overload: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.UnregisterHandlers*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandlePrevious(System.Object,System.EventArgs)
  commentId: M:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandlePrevious(System.Object,System.EventArgs)
  id: HandlePrevious(System.Object,System.EventArgs)
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: HandlePrevious(Object, EventArgs)
  nameWithType: InputBase.HandlePrevious(Object, EventArgs)
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandlePrevious(System.Object, System.EventArgs)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: HandlePrevious
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 73
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: protected abstract void HandlePrevious(object sender, EventArgs e)
    parameters:
    - id: sender
      type: System.Object
    - id: e
      type: System.EventArgs
    content.vb: Protected MustOverride Sub HandlePrevious(sender As Object, e As EventArgs)
  overload: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandlePrevious*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleNext(System.Object,System.EventArgs)
  commentId: M:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleNext(System.Object,System.EventArgs)
  id: HandleNext(System.Object,System.EventArgs)
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: HandleNext(Object, EventArgs)
  nameWithType: InputBase.HandleNext(Object, EventArgs)
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleNext(System.Object, System.EventArgs)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: HandleNext
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 74
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: protected abstract void HandleNext(object sender, EventArgs e)
    parameters:
    - id: sender
      type: System.Object
    - id: e
      type: System.EventArgs
    content.vb: Protected MustOverride Sub HandleNext(sender As Object, e As EventArgs)
  overload: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleNext*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleRotated(System.Object,Meadow.Foundation.Sensors.Rotary.RotaryTurnedEventArgs)
  commentId: M:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleRotated(System.Object,Meadow.Foundation.Sensors.Rotary.RotaryTurnedEventArgs)
  id: HandleRotated(System.Object,Meadow.Foundation.Sensors.Rotary.RotaryTurnedEventArgs)
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: HandleRotated(Object, RotaryTurnedEventArgs)
  nameWithType: InputBase.HandleRotated(Object, RotaryTurnedEventArgs)
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleRotated(System.Object, Meadow.Foundation.Sensors.Rotary.RotaryTurnedEventArgs)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: HandleRotated
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 75
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: protected abstract void HandleRotated(object sender, RotaryTurnedEventArgs e)
    parameters:
    - id: sender
      type: System.Object
    - id: e
      type: Meadow.Foundation.Sensors.Rotary.RotaryTurnedEventArgs
    content.vb: Protected MustOverride Sub HandleRotated(sender As Object, e As RotaryTurnedEventArgs)
  overload: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleRotated*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleClicked(System.Object,System.EventArgs)
  commentId: M:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleClicked(System.Object,System.EventArgs)
  id: HandleClicked(System.Object,System.EventArgs)
  parent: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase
  langs:
  - csharp
  - vb
  name: HandleClicked(Object, EventArgs)
  nameWithType: InputBase.HandleClicked(Object, EventArgs)
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleClicked(System.Object, System.EventArgs)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: HandleClicked
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/InputTypes/InputBase.cs
    startLine: 76
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  syntax:
    content: protected abstract void HandleClicked(object sender, EventArgs e)
    parameters:
    - id: sender
      type: System.Object
    - id: e
      type: System.EventArgs
    content.vb: Protected MustOverride Sub HandleClicked(sender As Object, e As EventArgs)
  overload: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleClicked*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  commentId: N:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  name: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  nameWithType: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem
  commentId: T:Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem
  parent: Meadow.Foundation.Displays.TextDisplayMenu
  name: IMenuInputItem
  nameWithType: IMenuInputItem
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Meadow.Foundation.Displays.TextDisplayMenu
  commentId: N:Meadow.Foundation.Displays.TextDisplayMenu
  name: Meadow.Foundation.Displays.TextDisplayMenu
  nameWithType: Meadow.Foundation.Displays.TextDisplayMenu
  fullName: Meadow.Foundation.Displays.TextDisplayMenu
- uid: Meadow.Foundation.Sensors.Rotary.IRotaryEncoder
  commentId: T:Meadow.Foundation.Sensors.Rotary.IRotaryEncoder
  parent: Meadow.Foundation.Sensors.Rotary
  name: IRotaryEncoder
  nameWithType: IRotaryEncoder
  fullName: Meadow.Foundation.Sensors.Rotary.IRotaryEncoder
- uid: Meadow.Foundation.Sensors.Rotary
  commentId: N:Meadow.Foundation.Sensors.Rotary
  name: Meadow.Foundation.Sensors.Rotary
  nameWithType: Meadow.Foundation.Sensors.Rotary
  fullName: Meadow.Foundation.Sensors.Rotary
- uid: Meadow.Foundation.Sensors.Buttons.IButton
  commentId: T:Meadow.Foundation.Sensors.Buttons.IButton
  parent: Meadow.Foundation.Sensors.Buttons
  name: IButton
  nameWithType: IButton
  fullName: Meadow.Foundation.Sensors.Buttons.IButton
- uid: Meadow.Foundation.Sensors.Buttons
  commentId: N:Meadow.Foundation.Sensors.Buttons
  name: Meadow.Foundation.Sensors.Buttons
  nameWithType: Meadow.Foundation.Sensors.Buttons
  fullName: Meadow.Foundation.Sensors.Buttons
- uid: Meadow.Foundation.Displays.ITextDisplay
  commentId: T:Meadow.Foundation.Displays.ITextDisplay
  parent: Meadow.Foundation.Displays
  name: ITextDisplay
  nameWithType: ITextDisplay
  fullName: Meadow.Foundation.Displays.ITextDisplay
- uid: Meadow.Foundation.Displays
  commentId: N:Meadow.Foundation.Displays
  name: Meadow.Foundation.Displays
  nameWithType: Meadow.Foundation.Displays
  fullName: Meadow.Foundation.Displays
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.ValueChanged
  commentId: E:Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.ValueChanged
  parent: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem
  name: ValueChanged
  nameWithType: IMenuInputItem.ValueChanged
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.ValueChanged
- uid: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedHandler
  commentId: T:Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedHandler
  parent: Meadow.Foundation.Displays.TextDisplayMenu
  name: ValueChangedHandler
  nameWithType: ValueChangedHandler
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedHandler
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.GetInput*
  commentId: Overload:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.GetInput
  name: GetInput
  nameWithType: InputBase.GetInput
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.GetInput
- uid: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.GetInput(System.String,System.Object)
  commentId: M:Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.GetInput(System.String,System.Object)
  parent: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem
  isExternal: true
  name: GetInput(String, Object)
  nameWithType: IMenuInputItem.GetInput(String, Object)
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.GetInput(System.String, System.Object)
  spec.csharp:
  - uid: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.GetInput(System.String,System.Object)
    name: GetInput
    nameWithType: IMenuInputItem.GetInput
    fullName: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.GetInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.GetInput(System.String,System.Object)
    name: GetInput
    nameWithType: IMenuInputItem.GetInput
    fullName: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.GetInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.ParseValue*
  commentId: Overload:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.ParseValue
  name: ParseValue
  nameWithType: InputBase.ParseValue
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.ParseValue
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.Init*
  commentId: Overload:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.Init
  name: Init
  nameWithType: InputBase.Init
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.Init
- uid: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Rotary.IRotaryEncoder,Meadow.Foundation.Sensors.Buttons.IButton)
  commentId: M:Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Rotary.IRotaryEncoder,Meadow.Foundation.Sensors.Buttons.IButton)
  parent: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem
  name: Init(ITextDisplay, IRotaryEncoder, IButton)
  nameWithType: IMenuInputItem.Init(ITextDisplay, IRotaryEncoder, IButton)
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init(Meadow.Foundation.Displays.ITextDisplay, Meadow.Foundation.Sensors.Rotary.IRotaryEncoder, Meadow.Foundation.Sensors.Buttons.IButton)
  spec.csharp:
  - uid: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Rotary.IRotaryEncoder,Meadow.Foundation.Sensors.Buttons.IButton)
    name: Init
    nameWithType: IMenuInputItem.Init
    fullName: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Meadow.Foundation.Displays.ITextDisplay
    name: ITextDisplay
    nameWithType: ITextDisplay
    fullName: Meadow.Foundation.Displays.ITextDisplay
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.Foundation.Sensors.Rotary.IRotaryEncoder
    name: IRotaryEncoder
    nameWithType: IRotaryEncoder
    fullName: Meadow.Foundation.Sensors.Rotary.IRotaryEncoder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.Foundation.Sensors.Buttons.IButton
    name: IButton
    nameWithType: IButton
    fullName: Meadow.Foundation.Sensors.Buttons.IButton
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Rotary.IRotaryEncoder,Meadow.Foundation.Sensors.Buttons.IButton)
    name: Init
    nameWithType: IMenuInputItem.Init
    fullName: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Meadow.Foundation.Displays.ITextDisplay
    name: ITextDisplay
    nameWithType: ITextDisplay
    fullName: Meadow.Foundation.Displays.ITextDisplay
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.Foundation.Sensors.Rotary.IRotaryEncoder
    name: IRotaryEncoder
    nameWithType: IRotaryEncoder
    fullName: Meadow.Foundation.Sensors.Rotary.IRotaryEncoder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.Foundation.Sensors.Buttons.IButton
    name: IButton
    nameWithType: IButton
    fullName: Meadow.Foundation.Sensors.Buttons.IButton
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton)
  commentId: M:Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton)
  parent: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem
  name: Init(ITextDisplay, IButton, IButton, IButton)
  nameWithType: IMenuInputItem.Init(ITextDisplay, IButton, IButton, IButton)
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init(Meadow.Foundation.Displays.ITextDisplay, Meadow.Foundation.Sensors.Buttons.IButton, Meadow.Foundation.Sensors.Buttons.IButton, Meadow.Foundation.Sensors.Buttons.IButton)
  spec.csharp:
  - uid: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton)
    name: Init
    nameWithType: IMenuInputItem.Init
    fullName: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Meadow.Foundation.Displays.ITextDisplay
    name: ITextDisplay
    nameWithType: ITextDisplay
    fullName: Meadow.Foundation.Displays.ITextDisplay
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.Foundation.Sensors.Buttons.IButton
    name: IButton
    nameWithType: IButton
    fullName: Meadow.Foundation.Sensors.Buttons.IButton
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.Foundation.Sensors.Buttons.IButton
    name: IButton
    nameWithType: IButton
    fullName: Meadow.Foundation.Sensors.Buttons.IButton
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.Foundation.Sensors.Buttons.IButton
    name: IButton
    nameWithType: IButton
    fullName: Meadow.Foundation.Sensors.Buttons.IButton
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init(Meadow.Foundation.Displays.ITextDisplay,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton,Meadow.Foundation.Sensors.Buttons.IButton)
    name: Init
    nameWithType: IMenuInputItem.Init
    fullName: Meadow.Foundation.Displays.TextDisplayMenu.IMenuInputItem.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Meadow.Foundation.Displays.ITextDisplay
    name: ITextDisplay
    nameWithType: ITextDisplay
    fullName: Meadow.Foundation.Displays.ITextDisplay
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.Foundation.Sensors.Buttons.IButton
    name: IButton
    nameWithType: IButton
    fullName: Meadow.Foundation.Sensors.Buttons.IButton
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.Foundation.Sensors.Buttons.IButton
    name: IButton
    nameWithType: IButton
    fullName: Meadow.Foundation.Sensors.Buttons.IButton
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.Foundation.Sensors.Buttons.IButton
    name: IButton
    nameWithType: IButton
    fullName: Meadow.Foundation.Sensors.Buttons.IButton
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RewriteInputLine*
  commentId: Overload:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RewriteInputLine
  name: RewriteInputLine
  nameWithType: InputBase.RewriteInputLine
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RewriteInputLine
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RegisterHandlers*
  commentId: Overload:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RegisterHandlers
  name: RegisterHandlers
  nameWithType: InputBase.RegisterHandlers
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.RegisterHandlers
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.UnregisterHandlers*
  commentId: Overload:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.UnregisterHandlers
  name: UnregisterHandlers
  nameWithType: InputBase.UnregisterHandlers
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.UnregisterHandlers
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandlePrevious*
  commentId: Overload:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandlePrevious
  name: HandlePrevious
  nameWithType: InputBase.HandlePrevious
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandlePrevious
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleNext*
  commentId: Overload:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleNext
  name: HandleNext
  nameWithType: InputBase.HandleNext
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleNext
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleRotated*
  commentId: Overload:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleRotated
  name: HandleRotated
  nameWithType: InputBase.HandleRotated
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleRotated
- uid: Meadow.Foundation.Sensors.Rotary.RotaryTurnedEventArgs
  commentId: T:Meadow.Foundation.Sensors.Rotary.RotaryTurnedEventArgs
  parent: Meadow.Foundation.Sensors.Rotary
  name: RotaryTurnedEventArgs
  nameWithType: RotaryTurnedEventArgs
  fullName: Meadow.Foundation.Sensors.Rotary.RotaryTurnedEventArgs
- uid: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleClicked*
  commentId: Overload:Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleClicked
  name: HandleClicked
  nameWithType: InputBase.HandleClicked
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.InputTypes.InputBase.HandleClicked
