### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Displays.GraphicsLibrary
  commentId: T:Meadow.Foundation.Displays.GraphicsLibrary
  id: GraphicsLibrary
  parent: Meadow.Foundation.Displays
  children:
  - Meadow.Foundation.Displays.GraphicsLibrary.#ctor(Meadow.Foundation.Displays.DisplayBase)
  - Meadow.Foundation.Displays.GraphicsLibrary.Clear(System.Boolean)
  - Meadow.Foundation.Displays.GraphicsLibrary.CurrentFont
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],Color)
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],Meadow.Foundation.Displays.DisplayBase.BitmapMode)
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawCircle(System.Int32,System.Int32,System.Int32,Color,System.Boolean)
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawCircle(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawHorizontalLine(System.Int32,System.Int32,System.Int32,Color)
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawHorizontalLine(System.Int32,System.Int32,System.Int32,System.Boolean)
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,Color)
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawPixel(System.Int32,System.Int32,Color)
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawPixel(System.Int32,System.Int32,System.Boolean)
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,Color,System.Boolean)
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawText(System.Int32,System.Int32,System.String)
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawText(System.Int32,System.Int32,System.String,Color)
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawVerticalLine(System.Int32,System.Int32,System.Int32,Color)
  - Meadow.Foundation.Displays.GraphicsLibrary.DrawVerticalLine(System.Int32,System.Int32,System.Int32,System.Boolean)
  - Meadow.Foundation.Displays.GraphicsLibrary.Show
  langs:
  - csharp
  - vb
  name: GraphicsLibrary
  nameWithType: GraphicsLibrary
  fullName: Meadow.Foundation.Displays.GraphicsLibrary
  type: Class
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: GraphicsLibrary
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 8
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nProvide high level graphics functions\n"
  example: []
  syntax:
    content: 'public class GraphicsLibrary : object'
    content.vb: >-
      Public Class GraphicsLibrary

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Meadow.Foundation.Displays.GraphicsLibrary.CurrentFont
  commentId: P:Meadow.Foundation.Displays.GraphicsLibrary.CurrentFont
  id: CurrentFont
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: CurrentFont
  nameWithType: GraphicsLibrary.CurrentFont
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.CurrentFont
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: CurrentFont
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 23
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nCurrent font used for displaying text on the display.\n"
  example: []
  syntax:
    content: public FontBase CurrentFont { get; set; }
    parameters: []
    return:
      type: Meadow.Foundation.Displays.FontBase
    content.vb: Public Property CurrentFont As FontBase
  overload: Meadow.Foundation.Displays.GraphicsLibrary.CurrentFont*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.#ctor(Meadow.Foundation.Displays.DisplayBase)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.#ctor(Meadow.Foundation.Displays.DisplayBase)
  id: '#ctor(Meadow.Foundation.Displays.DisplayBase)'
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: GraphicsLibrary(DisplayBase)
  nameWithType: GraphicsLibrary.GraphicsLibrary(DisplayBase)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.GraphicsLibrary(Meadow.Foundation.Displays.DisplayBase)
  type: Constructor
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: .ctor
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 32
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\n"
  example: []
  syntax:
    content: public GraphicsLibrary(DisplayBase display)
    parameters:
    - id: display
      type: Meadow.Foundation.Displays.DisplayBase
      description: ''
    content.vb: Public Sub New(display As DisplayBase)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawPixel(System.Int32,System.Int32,System.Boolean)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawPixel(System.Int32,System.Int32,System.Boolean)
  id: DrawPixel(System.Int32,System.Int32,System.Boolean)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawPixel(Int32, Int32, Boolean)
  nameWithType: GraphicsLibrary.DrawPixel(Int32, Int32, Boolean)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawPixel(System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawPixel
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 48
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDraw a single pixel \n"
  example: []
  syntax:
    content: public void DrawPixel(int x, int y, bool colored = true)
    parameters:
    - id: x
      type: System.Int32
      description: 'x location '
    - id: y
      type: System.Int32
      description: y location
    - id: colored
      type: System.Boolean
      description: Turn the pixel on (true) or off (false).
    content.vb: Public Sub DrawPixel(x As Integer, y As Integer, colored As Boolean = True)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawPixel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawPixel(System.Int32,System.Int32,Color)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawPixel(System.Int32,System.Int32,Color)
  id: DrawPixel(System.Int32,System.Int32,Color)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawPixel(Int32, Int32, Color)
  nameWithType: GraphicsLibrary.DrawPixel(Int32, Int32, Color)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawPixel(System.Int32, System.Int32, Color)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawPixel
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 59
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDraw a single pixel \n"
  example: []
  syntax:
    content: public void DrawPixel(int x, int y, Color color)
    parameters:
    - id: x
      type: System.Int32
      description: 'x location '
    - id: y
      type: System.Int32
      description: y location
    - id: color
      type: Color
      description: Color of pixel.
    content.vb: Public Sub DrawPixel(x As Integer, y As Integer, color As Color)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawPixel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawLine(Int32, Int32, Int32, Int32, Boolean)
  nameWithType: GraphicsLibrary.DrawLine(Int32, Int32, Int32, Int32, Boolean)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawLine(System.Int32, System.Int32, System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawLine
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 78
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDraw a line using Bresenhams line drawing algorithm.\n"
  remarks: "\nBresenhams line drawing algoritm:\nhttps://en.wikipedia.org/wiki/Bresenham&apos;s_line_algorithm\nC# Implementation:\nhttps://en.wikipedia.org/wiki/Bresenham&apos;s_line_algorithm\n"
  example: []
  syntax:
    content: public void DrawLine(int x0, int y0, int x1, int y1, bool colored = true)
    parameters:
    - id: x0
      type: System.Int32
      description: Abscissa of the starting point of the line.
    - id: y0
      type: System.Int32
      description: Ordinate of the starting point of the line
    - id: x1
      type: System.Int32
      description: Abscissa of the end point of the line.
    - id: y1
      type: System.Int32
      description: Ordinate of the end point of the line
    - id: colored
      type: System.Boolean
      description: Turn the pixel on (true) or off (false).
    content.vb: Public Sub DrawLine(x0 As Integer, y0 As Integer, x1 As Integer, y1 As Integer, colored As Boolean = True)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawLine*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,Color)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,Color)
  id: DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,Color)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawLine(Int32, Int32, Int32, Int32, Color)
  nameWithType: GraphicsLibrary.DrawLine(Int32, Int32, Int32, Int32, Color)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawLine(System.Int32, System.Int32, System.Int32, System.Int32, Color)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawLine
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 97
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDraw a line using Bresenhams line drawing algorithm.\n"
  remarks: "\nBresenhams line drawing algoritm:\nhttps://en.wikipedia.org/wiki/Bresenham&apos;s_line_algorithm\nC# Implementation:\nhttps://en.wikipedia.org/wiki/Bresenham&apos;s_line_algorithm\n"
  example: []
  syntax:
    content: public void DrawLine(int x0, int y0, int x1, int y1, Color color)
    parameters:
    - id: x0
      type: System.Int32
      description: Abscissa of the starting point of the line.
    - id: y0
      type: System.Int32
      description: Ordinate of the starting point of the line
    - id: x1
      type: System.Int32
      description: Abscissa of the end point of the line.
    - id: y1
      type: System.Int32
      description: Ordinate of the end point of the line
    - id: color
      type: Color
      description: The color of the line.
    content.vb: Public Sub DrawLine(x0 As Integer, y0 As Integer, x1 As Integer, y1 As Integer, color As Color)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawLine*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawHorizontalLine(System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawHorizontalLine(System.Int32,System.Int32,System.Int32,System.Boolean)
  id: DrawHorizontalLine(System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawHorizontalLine(Int32, Int32, Int32, Boolean)
  nameWithType: GraphicsLibrary.DrawHorizontalLine(Int32, Int32, Int32, Boolean)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawHorizontalLine(System.Int32, System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawHorizontalLine
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 144
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDraw a horizontal line.\n"
  example: []
  syntax:
    content: public void DrawHorizontalLine(int x0, int y0, int length, bool colored = true)
    parameters:
    - id: x0
      type: System.Int32
      description: Abscissa of the starting point of the line.
    - id: y0
      type: System.Int32
      description: Ordinate of the starting point of the line.
    - id: length
      type: System.Int32
      description: Length of the line to draw.
    - id: colored
      type: System.Boolean
      description: Turn the pixel on (true) or off (false).
    content.vb: Public Sub DrawHorizontalLine(x0 As Integer, y0 As Integer, length As Integer, colored As Boolean = True)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawHorizontalLine*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawHorizontalLine(System.Int32,System.Int32,System.Int32,Color)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawHorizontalLine(System.Int32,System.Int32,System.Int32,Color)
  id: DrawHorizontalLine(System.Int32,System.Int32,System.Int32,Color)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawHorizontalLine(Int32, Int32, Int32, Color)
  nameWithType: GraphicsLibrary.DrawHorizontalLine(Int32, Int32, Int32, Color)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawHorizontalLine(System.Int32, System.Int32, System.Int32, Color)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawHorizontalLine
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 159
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDraw a horizontal line.\n"
  example: []
  syntax:
    content: public void DrawHorizontalLine(int x0, int y0, int length, Color color)
    parameters:
    - id: x0
      type: System.Int32
      description: Abscissa of the starting point of the line.
    - id: y0
      type: System.Int32
      description: Ordinate of the starting point of the line.
    - id: length
      type: System.Int32
      description: Length of the line to draw.
    - id: color
      type: Color
      description: The color of the line.
    content.vb: Public Sub DrawHorizontalLine(x0 As Integer, y0 As Integer, length As Integer, color As Color)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawHorizontalLine*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawVerticalLine(System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawVerticalLine(System.Int32,System.Int32,System.Int32,System.Boolean)
  id: DrawVerticalLine(System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawVerticalLine(Int32, Int32, Int32, Boolean)
  nameWithType: GraphicsLibrary.DrawVerticalLine(Int32, Int32, Int32, Boolean)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawVerticalLine(System.Int32, System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawVerticalLine
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 174
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDraw a vertical line.\n"
  example: []
  syntax:
    content: public void DrawVerticalLine(int x0, int y0, int length, bool colored = true)
    parameters:
    - id: x0
      type: System.Int32
      description: Abscissa of the starting point of the line.
    - id: y0
      type: System.Int32
      description: Ordinate of the starting point of the line.
    - id: length
      type: System.Int32
      description: Length of the line to draw.
    - id: colored
      type: System.Boolean
      description: Show the line when (true) or off (false).
    content.vb: Public Sub DrawVerticalLine(x0 As Integer, y0 As Integer, length As Integer, colored As Boolean = True)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawVerticalLine*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawVerticalLine(System.Int32,System.Int32,System.Int32,Color)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawVerticalLine(System.Int32,System.Int32,System.Int32,Color)
  id: DrawVerticalLine(System.Int32,System.Int32,System.Int32,Color)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawVerticalLine(Int32, Int32, Int32, Color)
  nameWithType: GraphicsLibrary.DrawVerticalLine(Int32, Int32, Int32, Color)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawVerticalLine(System.Int32, System.Int32, System.Int32, Color)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawVerticalLine
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 189
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDraw a vertical line.\n"
  example: []
  syntax:
    content: public void DrawVerticalLine(int x0, int y0, int length, Color color)
    parameters:
    - id: x0
      type: System.Int32
      description: Abscissa of the starting point of the line.
    - id: y0
      type: System.Int32
      description: Ordinate of the starting point of the line.
    - id: length
      type: System.Int32
      description: Length of the line to draw.
    - id: color
      type: Color
      description: The color of the line.
    content.vb: Public Sub DrawVerticalLine(x0 As Integer, y0 As Integer, length As Integer, color As Color)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawVerticalLine*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawCircle(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawCircle(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)
  id: DrawCircle(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawCircle(Int32, Int32, Int32, Boolean, Boolean)
  nameWithType: GraphicsLibrary.DrawCircle(Int32, Int32, Int32, Boolean, Boolean)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawCircle(System.Int32, System.Int32, System.Int32, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawCircle
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 213
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDraw a dircle.\n"
  remarks: "\nThis algorithm draws the circle by splitting the full circle into eight\nsegments.\nThis method uses the Midpoint algorithm:\nhttps://en.wikipedia.org/wiki/Midpoint_circle_algorithm\nA C# implementation can be found here:\nhttps://rosettacode.org/wiki/Bitmap/Midpoint_circle_algorithm#C.23\n"
  example: []
  syntax:
    content: public void DrawCircle(int centerX, int centerY, int radius, bool colored = true, bool filled = false)
    parameters:
    - id: centerX
      type: System.Int32
      description: Abscissa of the centre point of the circle.
    - id: centerY
      type: System.Int32
      description: Ordinate of the centre point of the circle.
    - id: radius
      type: System.Int32
      description: Radius of the circle.
    - id: colored
      type: System.Boolean
      description: Show the circle when true.
    - id: filled
      type: System.Boolean
      description: Draw a filled circle?
    content.vb: Public Sub DrawCircle(centerX As Integer, centerY As Integer, radius As Integer, colored As Boolean = True, filled As Boolean = False)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawCircle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawCircle(System.Int32,System.Int32,System.Int32,Color,System.Boolean)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawCircle(System.Int32,System.Int32,System.Int32,Color,System.Boolean)
  id: DrawCircle(System.Int32,System.Int32,System.Int32,Color,System.Boolean)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawCircle(Int32, Int32, Int32, Color, Boolean)
  nameWithType: GraphicsLibrary.DrawCircle(Int32, Int32, Int32, Color, Boolean)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawCircle(System.Int32, System.Int32, System.Int32, Color, System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawCircle
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 234
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDraw a dircle.\n"
  remarks: "\nThis algorithm draws the circle by splitting the full circle into eight\nsegments.\nThis method uses the Midpoint algorithm:\nhttps://en.wikipedia.org/wiki/Midpoint_circle_algorithm\nA C# implementation can be found here:\nhttps://rosettacode.org/wiki/Bitmap/Midpoint_circle_algorithm#C.23\n"
  example: []
  syntax:
    content: public void DrawCircle(int centerX, int centerY, int radius, Color color, bool filled = false)
    parameters:
    - id: centerX
      type: System.Int32
      description: Abscissa of the centre point of the circle.
    - id: centerY
      type: System.Int32
      description: Ordinate of the centre point of the circle.
    - id: radius
      type: System.Int32
      description: Radius of the circle.
    - id: color
      type: Color
      description: The color of the circle.
    - id: filled
      type: System.Boolean
      description: Draw a filled circle?
    content.vb: Public Sub DrawCircle(centerX As Integer, centerY As Integer, radius As Integer, color As Color, filled As Boolean = False)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawCircle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)
  id: DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawRectangle(Int32, Int32, Int32, Int32, Boolean, Boolean)
  nameWithType: GraphicsLibrary.DrawRectangle(Int32, Int32, Int32, Int32, Boolean, Boolean)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawRectangle(System.Int32, System.Int32, System.Int32, System.Int32, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawRectangle
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 281
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDraw a rectangle.\n"
  example: []
  syntax:
    content: public void DrawRectangle(int xLeft, int yTop, int width, int height, bool colored = true, bool filled = false)
    parameters:
    - id: xLeft
      type: System.Int32
      description: Abscissa of the top left corner.
    - id: yTop
      type: System.Int32
      description: Ordinate of the top left corner.
    - id: width
      type: System.Int32
      description: Width of the rectangle.
    - id: height
      type: System.Int32
      description: Height of the rectangle.
    - id: colored
      type: System.Boolean
      description: Draw the pixel (true) or turn the pixel off (false).
    - id: filled
      type: System.Boolean
      description: Fill the rectangle (true) or draw the outline (false, default).
    content.vb: Public Sub DrawRectangle(xLeft As Integer, yTop As Integer, width As Integer, height As Integer, colored As Boolean = True, filled As Boolean = False)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawRectangle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,Color,System.Boolean)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,Color,System.Boolean)
  id: DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,Color,System.Boolean)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawRectangle(Int32, Int32, Int32, Int32, Color, Boolean)
  nameWithType: GraphicsLibrary.DrawRectangle(Int32, Int32, Int32, Int32, Color, Boolean)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawRectangle(System.Int32, System.Int32, System.Int32, System.Int32, Color, System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawRectangle
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 310
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDraw a rectangle.\n"
  example: []
  syntax:
    content: public void DrawRectangle(int xLeft, int yTop, int width, int height, Color color, bool filled = false)
    parameters:
    - id: xLeft
      type: System.Int32
      description: Abscissa of the top left corner.
    - id: yTop
      type: System.Int32
      description: Ordinate of the top left corner.
    - id: width
      type: System.Int32
      description: Width of the rectangle.
    - id: height
      type: System.Int32
      description: Height of the rectangle.
    - id: color
      type: Color
      description: The color of the rectangle.
    - id: filled
      type: System.Boolean
      description: Fill the rectangle (true) or draw the outline (false, default).
    content.vb: Public Sub DrawRectangle(xLeft As Integer, yTop As Integer, width As Integer, height As Integer, color As Color, filled As Boolean = False)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawRectangle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawText(System.Int32,System.Int32,System.String)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawText(System.Int32,System.Int32,System.String)
  id: DrawText(System.Int32,System.Int32,System.String)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawText(Int32, Int32, String)
  nameWithType: GraphicsLibrary.DrawText(Int32, Int32, String)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawText(System.Int32, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawText
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 336
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDraw a text message on the display using the current font.\n"
  example: []
  syntax:
    content: public void DrawText(int x, int y, string text)
    parameters:
    - id: x
      type: System.Int32
      description: Abscissa of the location of the text.
    - id: y
      type: System.Int32
      description: Ordinate of the location of the text.
    - id: text
      type: System.String
      description: Text to display.
    content.vb: Public Sub DrawText(x As Integer, y As Integer, text As String)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawText*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawText(System.Int32,System.Int32,System.String,Color)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawText(System.Int32,System.Int32,System.String,Color)
  id: DrawText(System.Int32,System.Int32,System.String,Color)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawText(Int32, Int32, String, Color)
  nameWithType: GraphicsLibrary.DrawText(Int32, Int32, String, Color)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawText(System.Int32, System.Int32, System.String, Color)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawText
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 353
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDraw a text message on the display using the current font.\n"
  example: []
  syntax:
    content: public void DrawText(int x, int y, string text, Color color)
    parameters:
    - id: x
      type: System.Int32
      description: Abscissa of the location of the text.
    - id: y
      type: System.Int32
      description: Ordinate of the location of the text.
    - id: text
      type: System.String
      description: Text to display.
    - id: color
      type: Color
      description: Color of the text.
    content.vb: Public Sub DrawText(x As Integer, y As Integer, text As String, color As Color)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawText*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.Show
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.Show
  id: Show
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: Show()
  nameWithType: GraphicsLibrary.Show()
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.Show()
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Show
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 419
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nShow the changes on the display.\n"
  example: []
  syntax:
    content: public void Show()
    content.vb: Public Sub Show
  overload: Meadow.Foundation.Displays.GraphicsLibrary.Show*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.Clear(System.Boolean)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.Clear(System.Boolean)
  id: Clear(System.Boolean)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: Clear(Boolean)
  nameWithType: GraphicsLibrary.Clear(Boolean)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.Clear(System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Clear
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 428
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nClear the display.\n"
  example: []
  syntax:
    content: public void Clear(bool updateDisplay = false)
    parameters:
    - id: updateDisplay
      type: System.Boolean
      description: Update the display immediately when true.
    content.vb: Public Sub Clear(updateDisplay As Boolean = False)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],Meadow.Foundation.Displays.DisplayBase.BitmapMode)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],Meadow.Foundation.Displays.DisplayBase.BitmapMode)
  id: DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],Meadow.Foundation.Displays.DisplayBase.BitmapMode)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawBitmap(Int32, Int32, Int32, Int32, Byte[], DisplayBase.BitmapMode)
  nameWithType: GraphicsLibrary.DrawBitmap(Int32, Int32, Int32, Int32, Byte[], DisplayBase.BitmapMode)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawBitmap(System.Int32, System.Int32, System.Int32, System.Int32, System.Byte[], Meadow.Foundation.Displays.DisplayBase.BitmapMode)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawBitmap
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 444
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDisplay a 1-bit bitmap\n\nThis method simply calls a similar method in the display hardware.\n"
  example: []
  syntax:
    content: public void DrawBitmap(int x, int y, int width, int height, byte[] bitmap, DisplayBase.BitmapMode bitmapMode)
    parameters:
    - id: x
      type: System.Int32
      description: Abscissa of the top left corner of the bitmap.
    - id: y
      type: System.Int32
      description: Ordinate of the top left corner of the bitmap.
    - id: width
      type: System.Int32
      description: Width of the bitmap in bytes.
    - id: height
      type: System.Int32
      description: Height of the bitmap in bytes.
    - id: bitmap
      type: System.Byte[]
      description: Bitmap to display.
    - id: bitmapMode
      type: Meadow.Foundation.Displays.DisplayBase.BitmapMode
      description: How should the bitmap be transferred to the display?
    content.vb: Public Sub DrawBitmap(x As Integer, y As Integer, width As Integer, height As Integer, bitmap As Byte(), bitmapMode As DisplayBase.BitmapMode)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawBitmap*
  nameWithType.vb: GraphicsLibrary.DrawBitmap(Int32, Int32, Int32, Int32, Byte(), DisplayBase.BitmapMode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Foundation.Displays.GraphicsLibrary.DrawBitmap(System.Int32, System.Int32, System.Int32, System.Int32, System.Byte(), Meadow.Foundation.Displays.DisplayBase.BitmapMode)
  name.vb: DrawBitmap(Int32, Int32, Int32, Int32, Byte(), DisplayBase.BitmapMode)
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],Color)
  commentId: M:Meadow.Foundation.Displays.GraphicsLibrary.DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],Color)
  id: DrawBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],Color)
  parent: Meadow.Foundation.Displays.GraphicsLibrary
  langs:
  - csharp
  - vb
  name: DrawBitmap(Int32, Int32, Int32, Int32, Byte[], Color)
  nameWithType: GraphicsLibrary.DrawBitmap(Int32, Int32, Int32, Int32, Byte[], Color)
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawBitmap(System.Int32, System.Int32, System.Int32, System.Int32, System.Byte[], Color)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DrawBitmap
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.GraphicsLibrary/GraphicsLibrary.cs
    startLine: 460
  assemblies:
  - Displays.GraphicsLibrary
  namespace: Meadow.Foundation.Displays
  summary: "\nDisplay a 1-bit bitmap\n\nThis method simply calls a similar method in the display hardware.\n"
  example: []
  syntax:
    content: public void DrawBitmap(int x, int y, int width, int height, byte[] bitmap, Color color)
    parameters:
    - id: x
      type: System.Int32
      description: Abscissa of the top left corner of the bitmap.
    - id: y
      type: System.Int32
      description: Ordinate of the top left corner of the bitmap.
    - id: width
      type: System.Int32
      description: Width of the bitmap in bytes.
    - id: height
      type: System.Int32
      description: Height of the bitmap in bytes.
    - id: bitmap
      type: System.Byte[]
      description: Bitmap to display.
    - id: color
      type: Color
      description: The color of the bitmap.
    content.vb: Public Sub DrawBitmap(x As Integer, y As Integer, width As Integer, height As Integer, bitmap As Byte(), color As Color)
  overload: Meadow.Foundation.Displays.GraphicsLibrary.DrawBitmap*
  nameWithType.vb: GraphicsLibrary.DrawBitmap(Int32, Int32, Int32, Int32, Byte(), Color)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Foundation.Displays.GraphicsLibrary.DrawBitmap(System.Int32, System.Int32, System.Int32, System.Int32, System.Byte(), Color)
  name.vb: DrawBitmap(Int32, Int32, Int32, Int32, Byte(), Color)
references:
- uid: Meadow.Foundation.Displays
  commentId: N:Meadow.Foundation.Displays
  name: Meadow.Foundation.Displays
  nameWithType: Meadow.Foundation.Displays
  fullName: Meadow.Foundation.Displays
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Meadow.Foundation.Displays.GraphicsLibrary.CurrentFont*
  commentId: Overload:Meadow.Foundation.Displays.GraphicsLibrary.CurrentFont
  name: CurrentFont
  nameWithType: GraphicsLibrary.CurrentFont
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.CurrentFont
- uid: Meadow.Foundation.Displays.FontBase
  commentId: T:Meadow.Foundation.Displays.FontBase
  parent: Meadow.Foundation.Displays
  name: FontBase
  nameWithType: FontBase
  fullName: Meadow.Foundation.Displays.FontBase
- uid: Meadow.Foundation.Displays.GraphicsLibrary.#ctor*
  commentId: Overload:Meadow.Foundation.Displays.GraphicsLibrary.#ctor
  name: GraphicsLibrary
  nameWithType: GraphicsLibrary.GraphicsLibrary
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.GraphicsLibrary
- uid: Meadow.Foundation.Displays.DisplayBase
  commentId: T:Meadow.Foundation.Displays.DisplayBase
  parent: Meadow.Foundation.Displays
  name: DisplayBase
  nameWithType: DisplayBase
  fullName: Meadow.Foundation.Displays.DisplayBase
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawPixel*
  commentId: Overload:Meadow.Foundation.Displays.GraphicsLibrary.DrawPixel
  name: DrawPixel
  nameWithType: GraphicsLibrary.DrawPixel
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawPixel
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Color
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawLine*
  commentId: Overload:Meadow.Foundation.Displays.GraphicsLibrary.DrawLine
  name: DrawLine
  nameWithType: GraphicsLibrary.DrawLine
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawLine
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawHorizontalLine*
  commentId: Overload:Meadow.Foundation.Displays.GraphicsLibrary.DrawHorizontalLine
  name: DrawHorizontalLine
  nameWithType: GraphicsLibrary.DrawHorizontalLine
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawHorizontalLine
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawVerticalLine*
  commentId: Overload:Meadow.Foundation.Displays.GraphicsLibrary.DrawVerticalLine
  name: DrawVerticalLine
  nameWithType: GraphicsLibrary.DrawVerticalLine
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawVerticalLine
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawCircle*
  commentId: Overload:Meadow.Foundation.Displays.GraphicsLibrary.DrawCircle
  name: DrawCircle
  nameWithType: GraphicsLibrary.DrawCircle
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawCircle
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawRectangle*
  commentId: Overload:Meadow.Foundation.Displays.GraphicsLibrary.DrawRectangle
  name: DrawRectangle
  nameWithType: GraphicsLibrary.DrawRectangle
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawRectangle
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawText*
  commentId: Overload:Meadow.Foundation.Displays.GraphicsLibrary.DrawText
  name: DrawText
  nameWithType: GraphicsLibrary.DrawText
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawText
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Meadow.Foundation.Displays.GraphicsLibrary.Show*
  commentId: Overload:Meadow.Foundation.Displays.GraphicsLibrary.Show
  name: Show
  nameWithType: GraphicsLibrary.Show
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.Show
- uid: Meadow.Foundation.Displays.GraphicsLibrary.Clear*
  commentId: Overload:Meadow.Foundation.Displays.GraphicsLibrary.Clear
  name: Clear
  nameWithType: GraphicsLibrary.Clear
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.Clear
- uid: Meadow.Foundation.Displays.GraphicsLibrary.DrawBitmap*
  commentId: Overload:Meadow.Foundation.Displays.GraphicsLibrary.DrawBitmap
  name: DrawBitmap
  nameWithType: GraphicsLibrary.DrawBitmap
  fullName: Meadow.Foundation.Displays.GraphicsLibrary.DrawBitmap
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Meadow.Foundation.Displays.DisplayBase.BitmapMode
  commentId: T:Meadow.Foundation.Displays.DisplayBase.BitmapMode
  parent: Meadow.Foundation.Displays
  name: DisplayBase.BitmapMode
  nameWithType: DisplayBase.BitmapMode
  fullName: Meadow.Foundation.Displays.DisplayBase.BitmapMode
