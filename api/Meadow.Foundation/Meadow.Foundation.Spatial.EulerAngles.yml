### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Spatial.EulerAngles
  commentId: T:Meadow.Foundation.Spatial.EulerAngles
  id: EulerAngles
  parent: Meadow.Foundation.Spatial
  children:
  - Meadow.Foundation.Spatial.EulerAngles.#ctor(System.Double,System.Double,System.Double)
  - Meadow.Foundation.Spatial.EulerAngles.Heading
  - Meadow.Foundation.Spatial.EulerAngles.Pitch
  - Meadow.Foundation.Spatial.EulerAngles.Roll
  langs:
  - csharp
  - vb
  name: EulerAngles
  nameWithType: EulerAngles
  fullName: Meadow.Foundation.Spatial.EulerAngles
  type: Class
  source:
    remote:
      path: Source/Meadow.Foundation/Sensors/Spatial/EulerAngles.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: EulerAngles
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Sensors/Spatial/EulerAngles.cs
    startLine: 5
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Spatial
  summary: "\nEuler angles to define the orientation.\n"
  example: []
  syntax:
    content: public class EulerAngles
    content.vb: Public Class EulerAngles
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Meadow.Foundation.Spatial.EulerAngles.Heading
  commentId: P:Meadow.Foundation.Spatial.EulerAngles.Heading
  id: Heading
  parent: Meadow.Foundation.Spatial.EulerAngles
  langs:
  - csharp
  - vb
  name: Heading
  nameWithType: EulerAngles.Heading
  fullName: Meadow.Foundation.Spatial.EulerAngles.Heading
  type: Property
  source:
    remote:
      path: Source/Meadow.Foundation/Sensors/Spatial/EulerAngles.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Heading
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Sensors/Spatial/EulerAngles.cs
    startLine: 10
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Spatial
  summary: "\nHeading.\n"
  example: []
  syntax:
    content: public double Heading { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Heading As Double
  overload: Meadow.Foundation.Spatial.EulerAngles.Heading*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Spatial.EulerAngles.Roll
  commentId: P:Meadow.Foundation.Spatial.EulerAngles.Roll
  id: Roll
  parent: Meadow.Foundation.Spatial.EulerAngles
  langs:
  - csharp
  - vb
  name: Roll
  nameWithType: EulerAngles.Roll
  fullName: Meadow.Foundation.Spatial.EulerAngles.Roll
  type: Property
  source:
    remote:
      path: Source/Meadow.Foundation/Sensors/Spatial/EulerAngles.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Roll
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Sensors/Spatial/EulerAngles.cs
    startLine: 15
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Spatial
  summary: "\nRoll angle.\n"
  example: []
  syntax:
    content: public double Roll { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Roll As Double
  overload: Meadow.Foundation.Spatial.EulerAngles.Roll*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Spatial.EulerAngles.Pitch
  commentId: P:Meadow.Foundation.Spatial.EulerAngles.Pitch
  id: Pitch
  parent: Meadow.Foundation.Spatial.EulerAngles
  langs:
  - csharp
  - vb
  name: Pitch
  nameWithType: EulerAngles.Pitch
  fullName: Meadow.Foundation.Spatial.EulerAngles.Pitch
  type: Property
  source:
    remote:
      path: Source/Meadow.Foundation/Sensors/Spatial/EulerAngles.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Pitch
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Sensors/Spatial/EulerAngles.cs
    startLine: 20
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Spatial
  summary: "\nPitch angle.\n"
  example: []
  syntax:
    content: public double Pitch { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Pitch As Double
  overload: Meadow.Foundation.Spatial.EulerAngles.Pitch*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Spatial.EulerAngles.#ctor(System.Double,System.Double,System.Double)
  commentId: M:Meadow.Foundation.Spatial.EulerAngles.#ctor(System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double)'
  parent: Meadow.Foundation.Spatial.EulerAngles
  langs:
  - csharp
  - vb
  name: EulerAngles(Double, Double, Double)
  nameWithType: EulerAngles.EulerAngles(Double, Double, Double)
  fullName: Meadow.Foundation.Spatial.EulerAngles.EulerAngles(System.Double, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: Source/Meadow.Foundation/Sensors/Spatial/EulerAngles.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: .ctor
    path: ../Meadow.Foundation/Source/Meadow.Foundation/Sensors/Spatial/EulerAngles.cs
    startLine: 28
  assemblies:
  - Meadow.Foundation
  namespace: Meadow.Foundation.Spatial
  summary: "\nCreate a new EulerAngles object.\n"
  example: []
  syntax:
    content: public EulerAngles(double heading, double roll, double pitch)
    parameters:
    - id: heading
      type: System.Double
      description: Heading reading.
    - id: roll
      type: System.Double
      description: Roll angle.
    - id: pitch
      type: System.Double
      description: Pitch angle.
    content.vb: Public Sub New(heading As Double, roll As Double, pitch As Double)
  overload: Meadow.Foundation.Spatial.EulerAngles.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Meadow.Foundation.Spatial
  commentId: N:Meadow.Foundation.Spatial
  name: Meadow.Foundation.Spatial
  nameWithType: Meadow.Foundation.Spatial
  fullName: Meadow.Foundation.Spatial
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Meadow.Foundation.Spatial.EulerAngles.Heading*
  commentId: Overload:Meadow.Foundation.Spatial.EulerAngles.Heading
  name: Heading
  nameWithType: EulerAngles.Heading
  fullName: Meadow.Foundation.Spatial.EulerAngles.Heading
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Meadow.Foundation.Spatial.EulerAngles.Roll*
  commentId: Overload:Meadow.Foundation.Spatial.EulerAngles.Roll
  name: Roll
  nameWithType: EulerAngles.Roll
  fullName: Meadow.Foundation.Spatial.EulerAngles.Roll
- uid: Meadow.Foundation.Spatial.EulerAngles.Pitch*
  commentId: Overload:Meadow.Foundation.Spatial.EulerAngles.Pitch
  name: Pitch
  nameWithType: EulerAngles.Pitch
  fullName: Meadow.Foundation.Spatial.EulerAngles.Pitch
- uid: Meadow.Foundation.Spatial.EulerAngles.#ctor*
  commentId: Overload:Meadow.Foundation.Spatial.EulerAngles.#ctor
  name: EulerAngles
  nameWithType: EulerAngles.EulerAngles
  fullName: Meadow.Foundation.Spatial.EulerAngles.EulerAngles
