### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask
  commentId: T:Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask
  id: ADXL362.ActivityInactivityControlMask
  parent: Meadow.Foundation.Sensors.Motion
  children:
  - Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.ActivityEnable
  - Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.ActivityMode
  - Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.DefaultMode
  - Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.InactivityEnable
  - Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.Inactivitymode
  - Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.LinkedMode
  - Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.LoopMode
  langs:
  - csharp
  - vb
  name: ADXL362.ActivityInactivityControlMask
  nameWithType: ADXL362.ActivityInactivityControlMask
  fullName: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask
  type: Class
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: ActivityInactivityControlMask
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
    startLine: 514
  assemblies:
  - Sensors.Motion.ADXL362
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nControl bits determining how the activity / inactivity functionality is configured.\n"
  example: []
  syntax:
    content: protected static class ActivityInactivityControlMask
    content.vb: Protected Module ActivityInactivityControlMask
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - protected
  - static
  - class
  modifiers.vb:
  - Protected
  - Module
- uid: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.ActivityEnable
  commentId: F:Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.ActivityEnable
  id: ActivityEnable
  parent: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask
  langs:
  - csharp
  - vb
  name: ActivityEnable
  nameWithType: ADXL362.ActivityInactivityControlMask.ActivityEnable
  fullName: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.ActivityEnable
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: ActivityEnable
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
    startLine: 519
  assemblies:
  - Sensors.Motion.ADXL362
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nDetermine if the activity functionality is enabled (1) or disabled (0).\n"
  example: []
  syntax:
    content: public const byte ActivityEnable = 1
    return:
      type: System.Byte
    content.vb: Public Const ActivityEnable As Byte = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.ActivityMode
  commentId: F:Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.ActivityMode
  id: ActivityMode
  parent: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask
  langs:
  - csharp
  - vb
  name: ActivityMode
  nameWithType: ADXL362.ActivityInactivityControlMask.ActivityMode
  fullName: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.ActivityMode
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: ActivityMode
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
    startLine: 524
  assemblies:
  - Sensors.Motion.ADXL362
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nDetermine is activity mode is in reference (1) or absolute mode (0).\n"
  example: []
  syntax:
    content: public const byte ActivityMode = 2
    return:
      type: System.Byte
    content.vb: Public Const ActivityMode As Byte = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.InactivityEnable
  commentId: F:Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.InactivityEnable
  id: InactivityEnable
  parent: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask
  langs:
  - csharp
  - vb
  name: InactivityEnable
  nameWithType: ADXL362.ActivityInactivityControlMask.InactivityEnable
  fullName: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.InactivityEnable
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: InactivityEnable
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
    startLine: 529
  assemblies:
  - Sensors.Motion.ADXL362
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nDetermine if inactivity mode is enabled (1) or disabled (0).\n"
  example: []
  syntax:
    content: public const byte InactivityEnable = 4
    return:
      type: System.Byte
    content.vb: Public Const InactivityEnable As Byte = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.Inactivitymode
  commentId: F:Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.Inactivitymode
  id: Inactivitymode
  parent: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask
  langs:
  - csharp
  - vb
  name: Inactivitymode
  nameWithType: ADXL362.ActivityInactivityControlMask.Inactivitymode
  fullName: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.Inactivitymode
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Inactivitymode
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
    startLine: 534
  assemblies:
  - Sensors.Motion.ADXL362
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nDetermine is inactivity mode is in reference (1) or absolute mode (0).\n"
  example: []
  syntax:
    content: public const byte Inactivitymode = 8
    return:
      type: System.Byte
    content.vb: Public Const Inactivitymode As Byte = 8
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.DefaultMode
  commentId: F:Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.DefaultMode
  id: DefaultMode
  parent: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask
  langs:
  - csharp
  - vb
  name: DefaultMode
  nameWithType: ADXL362.ActivityInactivityControlMask.DefaultMode
  fullName: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.DefaultMode
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DefaultMode
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
    startLine: 545
  assemblies:
  - Sensors.Motion.ADXL362
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nDefault mode.\n"
  remarks: "\nActivity and inactivity detection are both enabled, and their interrupts\n(if mapped) must be acknowledged by the host processor by reading the STATUS\nregister. Auto-sleep is disabled in this mode. Use this mode for free fall\ndetection applications.\n"
  example: []
  syntax:
    content: public const byte DefaultMode = 0
    return:
      type: System.Byte
    content.vb: Public Const DefaultMode As Byte = 0
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.LinkedMode
  commentId: F:Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.LinkedMode
  id: LinkedMode
  parent: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask
  langs:
  - csharp
  - vb
  name: LinkedMode
  nameWithType: ADXL362.ActivityInactivityControlMask.LinkedMode
  fullName: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.LinkedMode
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: LinkedMode
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
    startLine: 555
  assemblies:
  - Sensors.Motion.ADXL362
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nLink activity and inactivity.\n"
  remarks: "\nActivity and inactivity detection are linked sequentially such that only one\nis enabled at a time. Their interrupts (if mapped) must be acknowledged by\nthe host processor by reading the STATUS register.\n"
  example: []
  syntax:
    content: public const byte LinkedMode = 16
    return:
      type: System.Byte
    content.vb: Public Const LinkedMode As Byte = 16
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.LoopMode
  commentId: F:Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.LoopMode
  id: LoopMode
  parent: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask
  langs:
  - csharp
  - vb
  name: LoopMode
  nameWithType: ADXL362.ActivityInactivityControlMask.LoopMode
  fullName: Meadow.Foundation.Sensors.Motion.ADXL362.ActivityInactivityControlMask.LoopMode
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: LoopMode
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
    startLine: 567
  assemblies:
  - Sensors.Motion.ADXL362
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\n"
  remarks: "\nActivity and inactivity detection are linked sequentially such that only one is\nenabled at a time, and their interrupts are internally acknowledged (do not\nneed to be serviced by the host processor).\nTo use either linked or looped mode, both ACT_EN (Bit 0) and INACT_EN (Bit 2)\nmust be set to 1; otherwise, the default mode is used. For additional information,\nrefer to the Linking Activity and Inactivity Detection section.\n"
  example: []
  syntax:
    content: public const byte LoopMode = 48
    return:
      type: System.Byte
    content.vb: Public Const LoopMode As Byte = 48
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Meadow.Foundation.Sensors.Motion
  commentId: N:Meadow.Foundation.Sensors.Motion
  name: Meadow.Foundation.Sensors.Motion
  nameWithType: Meadow.Foundation.Sensors.Motion
  fullName: Meadow.Foundation.Sensors.Motion
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
