### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.DataLoggers.AdafruitIO
  commentId: T:Meadow.Foundation.DataLoggers.AdafruitIO
  id: AdafruitIO
  parent: Meadow.Foundation.DataLoggers
  children:
  - Meadow.Foundation.DataLoggers.AdafruitIO.#ctor(System.String)
  - Meadow.Foundation.DataLoggers.AdafruitIO.PostValue(Meadow.Foundation.DataLoggers.SensorReading)
  - Meadow.Foundation.DataLoggers.AdafruitIO.PostValues(Meadow.Foundation.DataLoggers.SensorReading[])
  - Meadow.Foundation.DataLoggers.AdafruitIO.URI
  - Meadow.Foundation.DataLoggers.AdafruitIO.WriteKey
  langs:
  - csharp
  - vb
  name: AdafruitIO
  nameWithType: AdafruitIO
  fullName: Meadow.Foundation.DataLoggers.AdafruitIO
  type: Class
  source:
    remote:
      path: Source/Peripheral_Libs/DataLoggers.AdafruitIO/AdafruitIO.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: AdafruitIO
    path: ../Meadow.Foundation/Source/Peripheral_Libs/DataLoggers.AdafruitIO/AdafruitIO.cs
    startLine: 8
  assemblies:
  - DataLoggers.AdafruitIO
  namespace: Meadow.Foundation.DataLoggers
  syntax:
    content: public class AdafruitIO
    content.vb: Public Class AdafruitIO
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Meadow.Foundation.DataLoggers.AdafruitIO.WriteKey
  commentId: P:Meadow.Foundation.DataLoggers.AdafruitIO.WriteKey
  id: WriteKey
  parent: Meadow.Foundation.DataLoggers.AdafruitIO
  langs:
  - csharp
  - vb
  name: WriteKey
  nameWithType: AdafruitIO.WriteKey
  fullName: Meadow.Foundation.DataLoggers.AdafruitIO.WriteKey
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/DataLoggers.AdafruitIO/AdafruitIO.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: WriteKey
    path: ../Meadow.Foundation/Source/Peripheral_Libs/DataLoggers.AdafruitIO/AdafruitIO.cs
    startLine: 16
  assemblies:
  - DataLoggers.AdafruitIO
  namespace: Meadow.Foundation.DataLoggers
  summary: "\nGet or set the AdafruitIO AIO key.  This key allows this class to identify itself \nwith AdafruitIO and log data with the service.\n"
  example: []
  syntax:
    content: public string WriteKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property WriteKey As String
  overload: Meadow.Foundation.DataLoggers.AdafruitIO.WriteKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.DataLoggers.AdafruitIO.URI
  commentId: P:Meadow.Foundation.DataLoggers.AdafruitIO.URI
  id: URI
  parent: Meadow.Foundation.DataLoggers.AdafruitIO
  langs:
  - csharp
  - vb
  name: URI
  nameWithType: AdafruitIO.URI
  fullName: Meadow.Foundation.DataLoggers.AdafruitIO.URI
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/DataLoggers.AdafruitIO/AdafruitIO.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: URI
    path: ../Meadow.Foundation/Source/Peripheral_Libs/DataLoggers.AdafruitIO/AdafruitIO.cs
    startLine: 21
  assemblies:
  - DataLoggers.AdafruitIO
  namespace: Meadow.Foundation.DataLoggers
  summary: "\nURI of the AdafruitIO api.\n"
  example: []
  syntax:
    content: public string URI { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property URI As String
  overload: Meadow.Foundation.DataLoggers.AdafruitIO.URI*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.DataLoggers.AdafruitIO.#ctor(System.String)
  commentId: M:Meadow.Foundation.DataLoggers.AdafruitIO.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Meadow.Foundation.DataLoggers.AdafruitIO
  langs:
  - csharp
  - vb
  name: AdafruitIO(String)
  nameWithType: AdafruitIO.AdafruitIO(String)
  fullName: Meadow.Foundation.DataLoggers.AdafruitIO.AdafruitIO(System.String)
  type: Constructor
  source:
    remote:
      path: Source/Peripheral_Libs/DataLoggers.AdafruitIO/AdafruitIO.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: .ctor
    path: ../Meadow.Foundation/Source/Peripheral_Libs/DataLoggers.AdafruitIO/AdafruitIO.cs
    startLine: 31
  assemblies:
  - DataLoggers.AdafruitIO
  namespace: Meadow.Foundation.DataLoggers
  summary: "\nCreate a new AdafruitIO object.\n"
  example: []
  syntax:
    content: public AdafruitIO(string writeKey)
    parameters:
    - id: writeKey
      type: System.String
      description: Write key.
    content.vb: Public Sub New(writeKey As String)
  overload: Meadow.Foundation.DataLoggers.AdafruitIO.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.DataLoggers.AdafruitIO.PostValue(Meadow.Foundation.DataLoggers.SensorReading)
  commentId: M:Meadow.Foundation.DataLoggers.AdafruitIO.PostValue(Meadow.Foundation.DataLoggers.SensorReading)
  id: PostValue(Meadow.Foundation.DataLoggers.SensorReading)
  parent: Meadow.Foundation.DataLoggers.AdafruitIO
  langs:
  - csharp
  - vb
  name: PostValue(SensorReading)
  nameWithType: AdafruitIO.PostValue(SensorReading)
  fullName: Meadow.Foundation.DataLoggers.AdafruitIO.PostValue(Meadow.Foundation.DataLoggers.SensorReading)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/DataLoggers.AdafruitIO/AdafruitIO.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: PostValue
    path: ../Meadow.Foundation/Source/Peripheral_Libs/DataLoggers.AdafruitIO/AdafruitIO.cs
    startLine: 45
  assemblies:
  - DataLoggers.AdafruitIO
  namespace: Meadow.Foundation.DataLoggers
  summary: "\nSend a single value to AdafruitIO\n"
  example: []
  syntax:
    content: public void PostValue(SensorReading value)
    parameters:
    - id: value
      type: Meadow.Foundation.DataLoggers.SensorReading
      description: Value to send to AdafruitIO.
    content.vb: Public Sub PostValue(value As SensorReading)
  overload: Meadow.Foundation.DataLoggers.AdafruitIO.PostValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.DataLoggers.AdafruitIO.PostValues(Meadow.Foundation.DataLoggers.SensorReading[])
  commentId: M:Meadow.Foundation.DataLoggers.AdafruitIO.PostValues(Meadow.Foundation.DataLoggers.SensorReading[])
  id: PostValues(Meadow.Foundation.DataLoggers.SensorReading[])
  parent: Meadow.Foundation.DataLoggers.AdafruitIO
  langs:
  - csharp
  - vb
  name: PostValues(SensorReading[])
  nameWithType: AdafruitIO.PostValues(SensorReading[])
  fullName: Meadow.Foundation.DataLoggers.AdafruitIO.PostValues(Meadow.Foundation.DataLoggers.SensorReading[])
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/DataLoggers.AdafruitIO/AdafruitIO.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: PostValues
    path: ../Meadow.Foundation/Source/Peripheral_Libs/DataLoggers.AdafruitIO/AdafruitIO.cs
    startLine: 54
  assemblies:
  - DataLoggers.AdafruitIO
  namespace: Meadow.Foundation.DataLoggers
  summary: "\nPost a series of values to AdafruitIO.\n"
  example: []
  syntax:
    content: public void PostValues(params SensorReading[] values)
    parameters:
    - id: values
      type: Meadow.Foundation.DataLoggers.SensorReading[]
      description: Array of values to send to AdafruitIO.
    content.vb: Public Sub PostValues(ParamArray values As SensorReading())
  overload: Meadow.Foundation.DataLoggers.AdafruitIO.PostValues*
  nameWithType.vb: AdafruitIO.PostValues(SensorReading())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Foundation.DataLoggers.AdafruitIO.PostValues(Meadow.Foundation.DataLoggers.SensorReading())
  name.vb: PostValues(SensorReading())
references:
- uid: Meadow.Foundation.DataLoggers
  commentId: N:Meadow.Foundation.DataLoggers
  name: Meadow.Foundation.DataLoggers
  nameWithType: Meadow.Foundation.DataLoggers
  fullName: Meadow.Foundation.DataLoggers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Meadow.Foundation.DataLoggers.AdafruitIO.WriteKey*
  commentId: Overload:Meadow.Foundation.DataLoggers.AdafruitIO.WriteKey
  name: WriteKey
  nameWithType: AdafruitIO.WriteKey
  fullName: Meadow.Foundation.DataLoggers.AdafruitIO.WriteKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Meadow.Foundation.DataLoggers.AdafruitIO.URI*
  commentId: Overload:Meadow.Foundation.DataLoggers.AdafruitIO.URI
  name: URI
  nameWithType: AdafruitIO.URI
  fullName: Meadow.Foundation.DataLoggers.AdafruitIO.URI
- uid: Meadow.Foundation.DataLoggers.AdafruitIO.#ctor*
  commentId: Overload:Meadow.Foundation.DataLoggers.AdafruitIO.#ctor
  name: AdafruitIO
  nameWithType: AdafruitIO.AdafruitIO
  fullName: Meadow.Foundation.DataLoggers.AdafruitIO.AdafruitIO
- uid: Meadow.Foundation.DataLoggers.AdafruitIO.PostValue*
  commentId: Overload:Meadow.Foundation.DataLoggers.AdafruitIO.PostValue
  name: PostValue
  nameWithType: AdafruitIO.PostValue
  fullName: Meadow.Foundation.DataLoggers.AdafruitIO.PostValue
- uid: Meadow.Foundation.DataLoggers.SensorReading
  commentId: T:Meadow.Foundation.DataLoggers.SensorReading
  parent: Meadow.Foundation.DataLoggers
  name: SensorReading
  nameWithType: SensorReading
  fullName: Meadow.Foundation.DataLoggers.SensorReading
- uid: Meadow.Foundation.DataLoggers.AdafruitIO.PostValues*
  commentId: Overload:Meadow.Foundation.DataLoggers.AdafruitIO.PostValues
  name: PostValues
  nameWithType: AdafruitIO.PostValues
  fullName: Meadow.Foundation.DataLoggers.AdafruitIO.PostValues
- uid: Meadow.Foundation.DataLoggers.SensorReading[]
  isExternal: true
  name: SensorReading[]
  nameWithType: SensorReading[]
  fullName: Meadow.Foundation.DataLoggers.SensorReading[]
  nameWithType.vb: SensorReading()
  fullName.vb: Meadow.Foundation.DataLoggers.SensorReading()
  name.vb: SensorReading()
  spec.csharp:
  - uid: Meadow.Foundation.DataLoggers.SensorReading
    name: SensorReading
    nameWithType: SensorReading
    fullName: Meadow.Foundation.DataLoggers.SensorReading
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Meadow.Foundation.DataLoggers.SensorReading
    name: SensorReading
    nameWithType: SensorReading
    fullName: Meadow.Foundation.DataLoggers.SensorReading
  - name: ()
    nameWithType: ()
    fullName: ()
