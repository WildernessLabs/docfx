### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Displays.SerialLCD
  commentId: T:Meadow.Foundation.Displays.SerialLCD
  id: SerialLCD
  parent: Meadow.Foundation.Displays
  children:
  - Meadow.Foundation.Displays.SerialLCD.#ctor(Meadow.Foundation.Displays.TextDisplayConfig,System.String,System.Int32,Parity,System.Int32,StopBits)
  - Meadow.Foundation.Displays.SerialLCD._lock
  - Meadow.Foundation.Displays.SerialLCD.Clear
  - Meadow.Foundation.Displays.SerialLCD.ClearLine(System.Byte)
  - Meadow.Foundation.Displays.SerialLCD.DisplayConfig
  - Meadow.Foundation.Displays.SerialLCD.DisplayText(System.String)
  - Meadow.Foundation.Displays.SerialLCD.Dispose
  - Meadow.Foundation.Displays.SerialLCD.MoveCursor(Meadow.Foundation.Displays.SerialLCD.Direction)
  - Meadow.Foundation.Displays.SerialLCD.SaveCustomCharacter(System.Byte[],System.Byte)
  - Meadow.Foundation.Displays.SerialLCD.ScrollDisplay(Meadow.Foundation.Displays.SerialLCD.Direction)
  - Meadow.Foundation.Displays.SerialLCD.SetBaudRate(Meadow.Foundation.Displays.SerialLCD.LCDBaudRate)
  - Meadow.Foundation.Displays.SerialLCD.SetBrightness(System.Single)
  - Meadow.Foundation.Displays.SerialLCD.SetCursorPosition(System.Byte,System.Byte)
  - Meadow.Foundation.Displays.SerialLCD.SetCursorStyle(Meadow.Foundation.Displays.SerialLCD.CursorStyle)
  - Meadow.Foundation.Displays.SerialLCD.SetDisplayVisualState(Meadow.Foundation.Displays.SerialLCD.DisplayPowerState)
  - Meadow.Foundation.Displays.SerialLCD.SetSplashScreen(System.String,System.String)
  - Meadow.Foundation.Displays.SerialLCD.ToggleSplashScreen
  - Meadow.Foundation.Displays.SerialLCD.Write(System.Byte[])
  - Meadow.Foundation.Displays.SerialLCD.Write(System.String)
  - Meadow.Foundation.Displays.SerialLCD.WriteLine(System.String,System.Byte)
  langs:
  - csharp
  - vb
  name: SerialLCD
  nameWithType: SerialLCD
  fullName: Meadow.Foundation.Displays.SerialLCD
  type: Class
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: SerialLCD
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 16
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nEncapsulate the functionality required to control the Sparkfun serial LCD display.\n"
  example: []
  syntax:
    content: 'public class SerialLCD : IDisposable, ITextDisplay'
    content.vb: >-
      Public Class SerialLCD

          Inherits IDisposable

          Implements ITextDisplay
  inheritance:
  - System.Object
  implements:
  - Meadow.Foundation.Displays.ITextDisplay
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Meadow.Foundation.Displays.SerialLCD.DisplayConfig
  commentId: P:Meadow.Foundation.Displays.SerialLCD.DisplayConfig
  id: DisplayConfig
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: DisplayConfig
  nameWithType: SerialLCD.DisplayConfig
  fullName: Meadow.Foundation.Displays.SerialLCD.DisplayConfig
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DisplayConfig
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 23
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nDisplay configuration (width and height).\n"
  example: []
  syntax:
    content: public TextDisplayConfig DisplayConfig { get; }
    parameters: []
    return:
      type: Meadow.Foundation.Displays.TextDisplayConfig
    content.vb: Public ReadOnly Property DisplayConfig As TextDisplayConfig
  overload: Meadow.Foundation.Displays.SerialLCD.DisplayConfig*
  implements:
  - Meadow.Foundation.Displays.ITextDisplay.DisplayConfig
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Foundation.Displays.SerialLCD._lock
  commentId: F:Meadow.Foundation.Displays.SerialLCD._lock
  id: _lock
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: _lock
  nameWithType: SerialLCD._lock
  fullName: Meadow.Foundation.Displays.SerialLCD._lock
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: _lock
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 113
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nobject for using lock() to do thread synch\n"
  example: []
  syntax:
    content: protected object _lock
    return:
      type: System.Object
    content.vb: Protected _lock As Object
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Displays.SerialLCD.#ctor(Meadow.Foundation.Displays.TextDisplayConfig,System.String,System.Int32,Parity,System.Int32,StopBits)
  commentId: M:Meadow.Foundation.Displays.SerialLCD.#ctor(Meadow.Foundation.Displays.TextDisplayConfig,System.String,System.Int32,Parity,System.Int32,StopBits)
  id: '#ctor(Meadow.Foundation.Displays.TextDisplayConfig,System.String,System.Int32,Parity,System.Int32,StopBits)'
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: SerialLCD(TextDisplayConfig, String, Int32, Parity, Int32, StopBits)
  nameWithType: SerialLCD.SerialLCD(TextDisplayConfig, String, Int32, Parity, Int32, StopBits)
  fullName: Meadow.Foundation.Displays.SerialLCD.SerialLCD(Meadow.Foundation.Displays.TextDisplayConfig, System.String, System.Int32, Parity, System.Int32, StopBits)
  type: Constructor
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: .ctor
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 135
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nCreate a new SerialLCD object.\n"
  example: []
  syntax:
    content: public SerialLCD(TextDisplayConfig config = null, string port = "COM1", int baudRate = 9600, Parity parity = null, int dataBits = 8, StopBits stopBits = null)
    parameters:
    - id: config
      type: Meadow.Foundation.Displays.TextDisplayConfig
      description: TextDisplayConfig object defining the LCD dimension (null will default to 16x2).
    - id: port
      type: System.String
      description: Com port the display is connected to.
    - id: baudRate
      type: System.Int32
      description: Baud rate to use (default = 9600).
    - id: parity
      type: Parity
      description: Parity to use (default is None).
    - id: dataBits
      type: System.Int32
      description: Number of data bits (default is 8 data bits).
    - id: stopBits
      type: StopBits
      description: Number of stop bits (default is one stop bit).
    content.vb: Public Sub New(config As TextDisplayConfig = Nothing, port As String = "COM1", baudRate As Integer = 9600, parity As Parity = Nothing, dataBits As Integer = 8, stopBits As StopBits = Nothing)
  overload: Meadow.Foundation.Displays.SerialLCD.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.Dispose
  commentId: M:Meadow.Foundation.Displays.SerialLCD.Dispose
  id: Dispose
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SerialLCD.Dispose()
  fullName: Meadow.Foundation.Displays.SerialLCD.Dispose()
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Dispose
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 187
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nImplement IDisposable.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Meadow.Foundation.Displays.SerialLCD.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.ToggleSplashScreen
  commentId: M:Meadow.Foundation.Displays.SerialLCD.ToggleSplashScreen
  id: ToggleSplashScreen
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: ToggleSplashScreen()
  nameWithType: SerialLCD.ToggleSplashScreen()
  fullName: Meadow.Foundation.Displays.SerialLCD.ToggleSplashScreen()
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: ToggleSplashScreen
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 236
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nToggle the splash screen.\n"
  example: []
  syntax:
    content: public void ToggleSplashScreen()
    content.vb: Public Sub ToggleSplashScreen
  overload: Meadow.Foundation.Displays.SerialLCD.ToggleSplashScreen*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.SetSplashScreen(System.String,System.String)
  commentId: M:Meadow.Foundation.Displays.SerialLCD.SetSplashScreen(System.String,System.String)
  id: SetSplashScreen(System.String,System.String)
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: SetSplashScreen(String, String)
  nameWithType: SerialLCD.SetSplashScreen(String, String)
  fullName: Meadow.Foundation.Displays.SerialLCD.SetSplashScreen(System.String, System.String)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: SetSplashScreen
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 244
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nSet up the splash screen.\n"
  example: []
  syntax:
    content: public void SetSplashScreen(string line1, string line2)
    parameters:
    - id: line1
      type: System.String
    - id: line2
      type: System.String
    content.vb: Public Sub SetSplashScreen(line1 As String, line2 As String)
  overload: Meadow.Foundation.Displays.SerialLCD.SetSplashScreen*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.SetBaudRate(Meadow.Foundation.Displays.SerialLCD.LCDBaudRate)
  commentId: M:Meadow.Foundation.Displays.SerialLCD.SetBaudRate(Meadow.Foundation.Displays.SerialLCD.LCDBaudRate)
  id: SetBaudRate(Meadow.Foundation.Displays.SerialLCD.LCDBaudRate)
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: SetBaudRate(SerialLCD.LCDBaudRate)
  nameWithType: SerialLCD.SetBaudRate(SerialLCD.LCDBaudRate)
  fullName: Meadow.Foundation.Displays.SerialLCD.SetBaudRate(Meadow.Foundation.Displays.SerialLCD.LCDBaudRate)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: SetBaudRate
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 254
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nChange the baud rate of the display using the command interface.\n"
  example: []
  syntax:
    content: public void SetBaudRate(SerialLCD.LCDBaudRate baudRate)
    parameters:
    - id: baudRate
      type: Meadow.Foundation.Displays.SerialLCD.LCDBaudRate
    content.vb: Public Sub SetBaudRate(baudRate As SerialLCD.LCDBaudRate)
  overload: Meadow.Foundation.Displays.SerialLCD.SetBaudRate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.Clear
  commentId: M:Meadow.Foundation.Displays.SerialLCD.Clear
  id: Clear
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: SerialLCD.Clear()
  fullName: Meadow.Foundation.Displays.SerialLCD.Clear()
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Clear
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 262
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nClear the display.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Meadow.Foundation.Displays.SerialLCD.Clear*
  implements:
  - Meadow.Foundation.Displays.ITextDisplay.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.SetCursorPosition(System.Byte,System.Byte)
  commentId: M:Meadow.Foundation.Displays.SerialLCD.SetCursorPosition(System.Byte,System.Byte)
  id: SetCursorPosition(System.Byte,System.Byte)
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: SetCursorPosition(Byte, Byte)
  nameWithType: SerialLCD.SetCursorPosition(Byte, Byte)
  fullName: Meadow.Foundation.Displays.SerialLCD.SetCursorPosition(System.Byte, System.Byte)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: SetCursorPosition
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 273
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nSet the cursor position on the display to the specified column and line.\n"
  example: []
  syntax:
    content: public void SetCursorPosition(byte column, byte line)
    parameters:
    - id: column
      type: System.Byte
      description: Column on the display to move the cursor to (0-15 or 0-19).
    - id: line
      type: System.Byte
      description: Line on the display to move the cursor to (0-3).
    content.vb: Public Sub SetCursorPosition(column As Byte, line As Byte)
  overload: Meadow.Foundation.Displays.SerialLCD.SetCursorPosition*
  implements:
  - Meadow.Foundation.Displays.ITextDisplay.SetCursorPosition(System.Byte,System.Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.MoveCursor(Meadow.Foundation.Displays.SerialLCD.Direction)
  commentId: M:Meadow.Foundation.Displays.SerialLCD.MoveCursor(Meadow.Foundation.Displays.SerialLCD.Direction)
  id: MoveCursor(Meadow.Foundation.Displays.SerialLCD.Direction)
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: MoveCursor(SerialLCD.Direction)
  nameWithType: SerialLCD.MoveCursor(SerialLCD.Direction)
  fullName: Meadow.Foundation.Displays.SerialLCD.MoveCursor(Meadow.Foundation.Displays.SerialLCD.Direction)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: MoveCursor
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 309
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nMove the cursor either right or left on the display.\n"
  example: []
  syntax:
    content: public void MoveCursor(SerialLCD.Direction direction)
    parameters:
    - id: direction
      type: Meadow.Foundation.Displays.SerialLCD.Direction
      description: Direction to move the cursor, left or right.
    content.vb: Public Sub MoveCursor(direction As SerialLCD.Direction)
  overload: Meadow.Foundation.Displays.SerialLCD.MoveCursor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.ScrollDisplay(Meadow.Foundation.Displays.SerialLCD.Direction)
  commentId: M:Meadow.Foundation.Displays.SerialLCD.ScrollDisplay(Meadow.Foundation.Displays.SerialLCD.Direction)
  id: ScrollDisplay(Meadow.Foundation.Displays.SerialLCD.Direction)
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: ScrollDisplay(SerialLCD.Direction)
  nameWithType: SerialLCD.ScrollDisplay(SerialLCD.Direction)
  fullName: Meadow.Foundation.Displays.SerialLCD.ScrollDisplay(Meadow.Foundation.Displays.SerialLCD.Direction)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: ScrollDisplay
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 325
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nScroll the contents of the display one character in the specified direction.\n"
  example: []
  syntax:
    content: public void ScrollDisplay(SerialLCD.Direction direction)
    parameters:
    - id: direction
      type: Meadow.Foundation.Displays.SerialLCD.Direction
      description: Direction to scroll the display, left or right.
    content.vb: Public Sub ScrollDisplay(direction As SerialLCD.Direction)
  overload: Meadow.Foundation.Displays.SerialLCD.ScrollDisplay*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.SetCursorStyle(Meadow.Foundation.Displays.SerialLCD.CursorStyle)
  commentId: M:Meadow.Foundation.Displays.SerialLCD.SetCursorStyle(Meadow.Foundation.Displays.SerialLCD.CursorStyle)
  id: SetCursorStyle(Meadow.Foundation.Displays.SerialLCD.CursorStyle)
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: SetCursorStyle(SerialLCD.CursorStyle)
  nameWithType: SerialLCD.SetCursorStyle(SerialLCD.CursorStyle)
  fullName: Meadow.Foundation.Displays.SerialLCD.SetCursorStyle(Meadow.Foundation.Displays.SerialLCD.CursorStyle)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: SetCursorStyle
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 341
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nSet the cursor style to underline or block.  The cursor can also be blinking or solid.\n"
  example: []
  syntax:
    content: public void SetCursorStyle(SerialLCD.CursorStyle style)
    parameters:
    - id: style
      type: Meadow.Foundation.Displays.SerialLCD.CursorStyle
      description: New cursor style (Block/Underline, Blinking/Solid).
    content.vb: Public Sub SetCursorStyle(style As SerialLCD.CursorStyle)
  overload: Meadow.Foundation.Displays.SerialLCD.SetCursorStyle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.DisplayText(System.String)
  commentId: M:Meadow.Foundation.Displays.SerialLCD.DisplayText(System.String)
  id: DisplayText(System.String)
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: DisplayText(String)
  nameWithType: SerialLCD.DisplayText(String)
  fullName: Meadow.Foundation.Displays.SerialLCD.DisplayText(System.String)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: DisplayText
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 350
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nDisplay the text at the current cursor position.\n"
  example: []
  syntax:
    content: public void DisplayText(string text)
    parameters:
    - id: text
      type: System.String
      description: Text to display.
    content.vb: Public Sub DisplayText(text As String)
  overload: Meadow.Foundation.Displays.SerialLCD.DisplayText*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.Write(System.String)
  commentId: M:Meadow.Foundation.Displays.SerialLCD.Write(System.String)
  id: Write(System.String)
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: Write(String)
  nameWithType: SerialLCD.Write(String)
  fullName: Meadow.Foundation.Displays.SerialLCD.Write(System.String)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Write
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 360
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nDisplay the text at the current cursor position.\n"
  example: []
  syntax:
    content: public void Write(string text)
    parameters:
    - id: text
      type: System.String
      description: Text to display.
    content.vb: Public Sub Write(text As String)
  overload: Meadow.Foundation.Displays.SerialLCD.Write*
  implements:
  - Meadow.Foundation.Displays.ITextDisplay.Write(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.Write(System.Byte[])
  commentId: M:Meadow.Foundation.Displays.SerialLCD.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: Write(Byte[])
  nameWithType: SerialLCD.Write(Byte[])
  fullName: Meadow.Foundation.Displays.SerialLCD.Write(System.Byte[])
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Write
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 385
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nDisplays the characters at the current cursor position. \nUnlike the `string text` overload, this assumes the text\nhas already been encoded to characters. Can be useful in \nsending pre-encoded characters, or accessing custom a \ncustom character saved in the 0 slot.\n"
  example: []
  syntax:
    content: public void Write(byte[] chars)
    parameters:
    - id: chars
      type: System.Byte[]
      description: ''
    content.vb: Public Sub Write(chars As Byte())
  overload: Meadow.Foundation.Displays.SerialLCD.Write*
  nameWithType.vb: SerialLCD.Write(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Foundation.Displays.SerialLCD.Write(System.Byte())
  name.vb: Write(Byte())
- uid: Meadow.Foundation.Displays.SerialLCD.WriteLine(System.String,System.Byte)
  commentId: M:Meadow.Foundation.Displays.SerialLCD.WriteLine(System.String,System.Byte)
  id: WriteLine(System.String,System.Byte)
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: WriteLine(String, Byte)
  nameWithType: SerialLCD.WriteLine(String, Byte)
  fullName: Meadow.Foundation.Displays.SerialLCD.WriteLine(System.String, System.Byte)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: WriteLine
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 395
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nWrites the specified text to the specified line.\n"
  example: []
  syntax:
    content: public void WriteLine(string text, byte lineNumber)
    parameters:
    - id: text
      type: System.String
      description: Text to display.
    - id: lineNumber
      type: System.Byte
      description: Line to write the text on (0-3).
    content.vb: Public Sub WriteLine(text As String, lineNumber As Byte)
  overload: Meadow.Foundation.Displays.SerialLCD.WriteLine*
  implements:
  - Meadow.Foundation.Displays.ITextDisplay.WriteLine(System.String,System.Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.ClearLine(System.Byte)
  commentId: M:Meadow.Foundation.Displays.SerialLCD.ClearLine(System.Byte)
  id: ClearLine(System.Byte)
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: ClearLine(Byte)
  nameWithType: SerialLCD.ClearLine(Byte)
  fullName: Meadow.Foundation.Displays.SerialLCD.ClearLine(System.Byte)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: ClearLine
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 420
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nClears the specified line by writing a string of empty characters\nto it.\n"
  example: []
  syntax:
    content: public void ClearLine(byte lineNumber)
    parameters:
    - id: lineNumber
      type: System.Byte
      description: Line to clear (0-3)
    content.vb: Public Sub ClearLine(lineNumber As Byte)
  overload: Meadow.Foundation.Displays.SerialLCD.ClearLine*
  implements:
  - Meadow.Foundation.Displays.ITextDisplay.ClearLine(System.Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.SetDisplayVisualState(Meadow.Foundation.Displays.SerialLCD.DisplayPowerState)
  commentId: M:Meadow.Foundation.Displays.SerialLCD.SetDisplayVisualState(Meadow.Foundation.Displays.SerialLCD.DisplayPowerState)
  id: SetDisplayVisualState(Meadow.Foundation.Displays.SerialLCD.DisplayPowerState)
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: SetDisplayVisualState(SerialLCD.DisplayPowerState)
  nameWithType: SerialLCD.SetDisplayVisualState(SerialLCD.DisplayPowerState)
  fullName: Meadow.Foundation.Displays.SerialLCD.SetDisplayVisualState(Meadow.Foundation.Displays.SerialLCD.DisplayPowerState)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: SetDisplayVisualState
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 437
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nTurn the display on or off.\n"
  example: []
  syntax:
    content: public void SetDisplayVisualState(SerialLCD.DisplayPowerState state)
    parameters:
    - id: state
      type: Meadow.Foundation.Displays.SerialLCD.DisplayPowerState
      description: New power state for the display.
    content.vb: Public Sub SetDisplayVisualState(state As SerialLCD.DisplayPowerState)
  overload: Meadow.Foundation.Displays.SerialLCD.SetDisplayVisualState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.SetBrightness(System.Single)
  commentId: M:Meadow.Foundation.Displays.SerialLCD.SetBrightness(System.Single)
  id: SetBrightness(System.Single)
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: SetBrightness(Single)
  nameWithType: SerialLCD.SetBrightness(Single)
  fullName: Meadow.Foundation.Displays.SerialLCD.SetBrightness(System.Single)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: SetBrightness
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 452
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nSets the backlight brightness of the LCD. Valid values\nare 0 through 1. Sleeps for 125milliseconds after setting\nto let the display settle.\n\n0 = Off\n0.5 = 50%\n1 = 100%\n"
  example: []
  syntax:
    content: public void SetBrightness(float brightness = 0.75F)
    parameters:
    - id: brightness
      type: System.Single
      description: ''
    content.vb: Public Sub SetBrightness(brightness As Single = 0.75F)
  overload: Meadow.Foundation.Displays.SerialLCD.SetBrightness*
  implements:
  - Meadow.Foundation.Displays.ITextDisplay.SetBrightness(System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.SerialLCD.SaveCustomCharacter(System.Byte[],System.Byte)
  commentId: M:Meadow.Foundation.Displays.SerialLCD.SaveCustomCharacter(System.Byte[],System.Byte)
  id: SaveCustomCharacter(System.Byte[],System.Byte)
  parent: Meadow.Foundation.Displays.SerialLCD
  langs:
  - csharp
  - vb
  name: SaveCustomCharacter(Byte[], Byte)
  nameWithType: SerialLCD.SaveCustomCharacter(Byte[], Byte)
  fullName: Meadow.Foundation.Displays.SerialLCD.SaveCustomCharacter(System.Byte[], System.Byte)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: SaveCustomCharacter
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.SerialLCD/SerialLCD.cs
    startLine: 487
  assemblies:
  - Displays.SerialLCD
  namespace: Meadow.Foundation.Displays
  summary: "\nSaves a custom character to one of 8 slots in the CGRAM. \nCustom characters are defined as charater maps and can \nbe created using online graphical tools such as the one\nfound at:\nhttp://maxpromer.github.io/LCD-Character-Creator/\n\n**Note:** due to .Net&apos;s underlying string implementation,\nslot 0 is unusable unless you decode the string yourself \nand use the `Write(byte[] chars)` method. Otherwise, \nwhen the string is created, .Net treats the `0` character\nas a string terminator. \n\n"
  example: []
  syntax:
    content: public void SaveCustomCharacter(byte[] characterMap, byte address)
    parameters:
    - id: characterMap
      type: System.Byte[]
      description: Character map defining the 5x8 character.
    - id: address
      type: System.Byte
      description: 0-7
    content.vb: Public Sub SaveCustomCharacter(characterMap As Byte(), address As Byte)
  overload: Meadow.Foundation.Displays.SerialLCD.SaveCustomCharacter*
  implements:
  - Meadow.Foundation.Displays.ITextDisplay.SaveCustomCharacter(System.Byte[],System.Byte)
  nameWithType.vb: SerialLCD.SaveCustomCharacter(Byte(), Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Foundation.Displays.SerialLCD.SaveCustomCharacter(System.Byte(), System.Byte)
  name.vb: SaveCustomCharacter(Byte(), Byte)
references:
- uid: Meadow.Foundation.Displays
  commentId: N:Meadow.Foundation.Displays
  name: Meadow.Foundation.Displays
  nameWithType: Meadow.Foundation.Displays
  fullName: Meadow.Foundation.Displays
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Meadow.Foundation.Displays.ITextDisplay
  commentId: T:Meadow.Foundation.Displays.ITextDisplay
  parent: Meadow.Foundation.Displays
  name: ITextDisplay
  nameWithType: ITextDisplay
  fullName: Meadow.Foundation.Displays.ITextDisplay
- uid: Meadow.Foundation.Displays.SerialLCD.DisplayConfig*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.DisplayConfig
  name: DisplayConfig
  nameWithType: SerialLCD.DisplayConfig
  fullName: Meadow.Foundation.Displays.SerialLCD.DisplayConfig
- uid: Meadow.Foundation.Displays.ITextDisplay.DisplayConfig
  commentId: P:Meadow.Foundation.Displays.ITextDisplay.DisplayConfig
  parent: Meadow.Foundation.Displays.ITextDisplay
  name: DisplayConfig
  nameWithType: ITextDisplay.DisplayConfig
  fullName: Meadow.Foundation.Displays.ITextDisplay.DisplayConfig
- uid: Meadow.Foundation.Displays.TextDisplayConfig
  commentId: T:Meadow.Foundation.Displays.TextDisplayConfig
  parent: Meadow.Foundation.Displays
  name: TextDisplayConfig
  nameWithType: TextDisplayConfig
  fullName: Meadow.Foundation.Displays.TextDisplayConfig
- uid: Meadow.Foundation.Displays.SerialLCD.#ctor*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.#ctor
  name: SerialLCD
  nameWithType: SerialLCD.SerialLCD
  fullName: Meadow.Foundation.Displays.SerialLCD.SerialLCD
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Parity
  commentId: '!:Parity'
  isExternal: true
  name: Parity
  nameWithType: Parity
  fullName: Parity
- uid: StopBits
  commentId: '!:StopBits'
  isExternal: true
  name: StopBits
  nameWithType: StopBits
  fullName: StopBits
- uid: Meadow.Foundation.Displays.SerialLCD.Dispose*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.Dispose
  name: Dispose
  nameWithType: SerialLCD.Dispose
  fullName: Meadow.Foundation.Displays.SerialLCD.Dispose
- uid: Meadow.Foundation.Displays.SerialLCD.ToggleSplashScreen*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.ToggleSplashScreen
  name: ToggleSplashScreen
  nameWithType: SerialLCD.ToggleSplashScreen
  fullName: Meadow.Foundation.Displays.SerialLCD.ToggleSplashScreen
- uid: Meadow.Foundation.Displays.SerialLCD.SetSplashScreen*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.SetSplashScreen
  name: SetSplashScreen
  nameWithType: SerialLCD.SetSplashScreen
  fullName: Meadow.Foundation.Displays.SerialLCD.SetSplashScreen
- uid: Meadow.Foundation.Displays.SerialLCD.SetBaudRate*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.SetBaudRate
  name: SetBaudRate
  nameWithType: SerialLCD.SetBaudRate
  fullName: Meadow.Foundation.Displays.SerialLCD.SetBaudRate
- uid: Meadow.Foundation.Displays.SerialLCD.LCDBaudRate
  commentId: T:Meadow.Foundation.Displays.SerialLCD.LCDBaudRate
  parent: Meadow.Foundation.Displays
  name: SerialLCD.LCDBaudRate
  nameWithType: SerialLCD.LCDBaudRate
  fullName: Meadow.Foundation.Displays.SerialLCD.LCDBaudRate
- uid: Meadow.Foundation.Displays.SerialLCD.Clear*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.Clear
  name: Clear
  nameWithType: SerialLCD.Clear
  fullName: Meadow.Foundation.Displays.SerialLCD.Clear
- uid: Meadow.Foundation.Displays.ITextDisplay.Clear
  commentId: M:Meadow.Foundation.Displays.ITextDisplay.Clear
  parent: Meadow.Foundation.Displays.ITextDisplay
  name: Clear()
  nameWithType: ITextDisplay.Clear()
  fullName: Meadow.Foundation.Displays.ITextDisplay.Clear()
  spec.csharp:
  - uid: Meadow.Foundation.Displays.ITextDisplay.Clear
    name: Clear
    nameWithType: ITextDisplay.Clear
    fullName: Meadow.Foundation.Displays.ITextDisplay.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Foundation.Displays.ITextDisplay.Clear
    name: Clear
    nameWithType: ITextDisplay.Clear
    fullName: Meadow.Foundation.Displays.ITextDisplay.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Foundation.Displays.SerialLCD.SetCursorPosition*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.SetCursorPosition
  name: SetCursorPosition
  nameWithType: SerialLCD.SetCursorPosition
  fullName: Meadow.Foundation.Displays.SerialLCD.SetCursorPosition
- uid: Meadow.Foundation.Displays.ITextDisplay.SetCursorPosition(System.Byte,System.Byte)
  commentId: M:Meadow.Foundation.Displays.ITextDisplay.SetCursorPosition(System.Byte,System.Byte)
  parent: Meadow.Foundation.Displays.ITextDisplay
  isExternal: true
  name: SetCursorPosition(Byte, Byte)
  nameWithType: ITextDisplay.SetCursorPosition(Byte, Byte)
  fullName: Meadow.Foundation.Displays.ITextDisplay.SetCursorPosition(System.Byte, System.Byte)
  spec.csharp:
  - uid: Meadow.Foundation.Displays.ITextDisplay.SetCursorPosition(System.Byte,System.Byte)
    name: SetCursorPosition
    nameWithType: ITextDisplay.SetCursorPosition
    fullName: Meadow.Foundation.Displays.ITextDisplay.SetCursorPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Foundation.Displays.ITextDisplay.SetCursorPosition(System.Byte,System.Byte)
    name: SetCursorPosition
    nameWithType: ITextDisplay.SetCursorPosition
    fullName: Meadow.Foundation.Displays.ITextDisplay.SetCursorPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Meadow.Foundation.Displays.SerialLCD.MoveCursor*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.MoveCursor
  name: MoveCursor
  nameWithType: SerialLCD.MoveCursor
  fullName: Meadow.Foundation.Displays.SerialLCD.MoveCursor
- uid: Meadow.Foundation.Displays.SerialLCD.Direction
  commentId: T:Meadow.Foundation.Displays.SerialLCD.Direction
  parent: Meadow.Foundation.Displays
  name: SerialLCD.Direction
  nameWithType: SerialLCD.Direction
  fullName: Meadow.Foundation.Displays.SerialLCD.Direction
- uid: Meadow.Foundation.Displays.SerialLCD.ScrollDisplay*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.ScrollDisplay
  name: ScrollDisplay
  nameWithType: SerialLCD.ScrollDisplay
  fullName: Meadow.Foundation.Displays.SerialLCD.ScrollDisplay
- uid: Meadow.Foundation.Displays.SerialLCD.SetCursorStyle*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.SetCursorStyle
  name: SetCursorStyle
  nameWithType: SerialLCD.SetCursorStyle
  fullName: Meadow.Foundation.Displays.SerialLCD.SetCursorStyle
- uid: Meadow.Foundation.Displays.SerialLCD.CursorStyle
  commentId: T:Meadow.Foundation.Displays.SerialLCD.CursorStyle
  parent: Meadow.Foundation.Displays
  name: SerialLCD.CursorStyle
  nameWithType: SerialLCD.CursorStyle
  fullName: Meadow.Foundation.Displays.SerialLCD.CursorStyle
- uid: Meadow.Foundation.Displays.SerialLCD.DisplayText*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.DisplayText
  name: DisplayText
  nameWithType: SerialLCD.DisplayText
  fullName: Meadow.Foundation.Displays.SerialLCD.DisplayText
- uid: Meadow.Foundation.Displays.SerialLCD.Write*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.Write
  name: Write
  nameWithType: SerialLCD.Write
  fullName: Meadow.Foundation.Displays.SerialLCD.Write
- uid: Meadow.Foundation.Displays.ITextDisplay.Write(System.String)
  commentId: M:Meadow.Foundation.Displays.ITextDisplay.Write(System.String)
  parent: Meadow.Foundation.Displays.ITextDisplay
  isExternal: true
  name: Write(String)
  nameWithType: ITextDisplay.Write(String)
  fullName: Meadow.Foundation.Displays.ITextDisplay.Write(System.String)
  spec.csharp:
  - uid: Meadow.Foundation.Displays.ITextDisplay.Write(System.String)
    name: Write
    nameWithType: ITextDisplay.Write
    fullName: Meadow.Foundation.Displays.ITextDisplay.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Foundation.Displays.ITextDisplay.Write(System.String)
    name: Write
    nameWithType: ITextDisplay.Write
    fullName: Meadow.Foundation.Displays.ITextDisplay.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Meadow.Foundation.Displays.SerialLCD.WriteLine*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.WriteLine
  name: WriteLine
  nameWithType: SerialLCD.WriteLine
  fullName: Meadow.Foundation.Displays.SerialLCD.WriteLine
- uid: Meadow.Foundation.Displays.ITextDisplay.WriteLine(System.String,System.Byte)
  commentId: M:Meadow.Foundation.Displays.ITextDisplay.WriteLine(System.String,System.Byte)
  parent: Meadow.Foundation.Displays.ITextDisplay
  isExternal: true
  name: WriteLine(String, Byte)
  nameWithType: ITextDisplay.WriteLine(String, Byte)
  fullName: Meadow.Foundation.Displays.ITextDisplay.WriteLine(System.String, System.Byte)
  spec.csharp:
  - uid: Meadow.Foundation.Displays.ITextDisplay.WriteLine(System.String,System.Byte)
    name: WriteLine
    nameWithType: ITextDisplay.WriteLine
    fullName: Meadow.Foundation.Displays.ITextDisplay.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Foundation.Displays.ITextDisplay.WriteLine(System.String,System.Byte)
    name: WriteLine
    nameWithType: ITextDisplay.WriteLine
    fullName: Meadow.Foundation.Displays.ITextDisplay.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Foundation.Displays.SerialLCD.ClearLine*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.ClearLine
  name: ClearLine
  nameWithType: SerialLCD.ClearLine
  fullName: Meadow.Foundation.Displays.SerialLCD.ClearLine
- uid: Meadow.Foundation.Displays.ITextDisplay.ClearLine(System.Byte)
  commentId: M:Meadow.Foundation.Displays.ITextDisplay.ClearLine(System.Byte)
  parent: Meadow.Foundation.Displays.ITextDisplay
  isExternal: true
  name: ClearLine(Byte)
  nameWithType: ITextDisplay.ClearLine(Byte)
  fullName: Meadow.Foundation.Displays.ITextDisplay.ClearLine(System.Byte)
  spec.csharp:
  - uid: Meadow.Foundation.Displays.ITextDisplay.ClearLine(System.Byte)
    name: ClearLine
    nameWithType: ITextDisplay.ClearLine
    fullName: Meadow.Foundation.Displays.ITextDisplay.ClearLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Foundation.Displays.ITextDisplay.ClearLine(System.Byte)
    name: ClearLine
    nameWithType: ITextDisplay.ClearLine
    fullName: Meadow.Foundation.Displays.ITextDisplay.ClearLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Foundation.Displays.SerialLCD.SetDisplayVisualState*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.SetDisplayVisualState
  name: SetDisplayVisualState
  nameWithType: SerialLCD.SetDisplayVisualState
  fullName: Meadow.Foundation.Displays.SerialLCD.SetDisplayVisualState
- uid: Meadow.Foundation.Displays.SerialLCD.DisplayPowerState
  commentId: T:Meadow.Foundation.Displays.SerialLCD.DisplayPowerState
  parent: Meadow.Foundation.Displays
  name: SerialLCD.DisplayPowerState
  nameWithType: SerialLCD.DisplayPowerState
  fullName: Meadow.Foundation.Displays.SerialLCD.DisplayPowerState
- uid: Meadow.Foundation.Displays.SerialLCD.SetBrightness*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.SetBrightness
  name: SetBrightness
  nameWithType: SerialLCD.SetBrightness
  fullName: Meadow.Foundation.Displays.SerialLCD.SetBrightness
- uid: Meadow.Foundation.Displays.ITextDisplay.SetBrightness(System.Single)
  commentId: M:Meadow.Foundation.Displays.ITextDisplay.SetBrightness(System.Single)
  parent: Meadow.Foundation.Displays.ITextDisplay
  isExternal: true
  name: SetBrightness(Single)
  nameWithType: ITextDisplay.SetBrightness(Single)
  fullName: Meadow.Foundation.Displays.ITextDisplay.SetBrightness(System.Single)
  spec.csharp:
  - uid: Meadow.Foundation.Displays.ITextDisplay.SetBrightness(System.Single)
    name: SetBrightness
    nameWithType: ITextDisplay.SetBrightness
    fullName: Meadow.Foundation.Displays.ITextDisplay.SetBrightness
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Foundation.Displays.ITextDisplay.SetBrightness(System.Single)
    name: SetBrightness
    nameWithType: ITextDisplay.SetBrightness
    fullName: Meadow.Foundation.Displays.ITextDisplay.SetBrightness
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Meadow.Foundation.Displays.SerialLCD.SaveCustomCharacter*
  commentId: Overload:Meadow.Foundation.Displays.SerialLCD.SaveCustomCharacter
  name: SaveCustomCharacter
  nameWithType: SerialLCD.SaveCustomCharacter
  fullName: Meadow.Foundation.Displays.SerialLCD.SaveCustomCharacter
- uid: Meadow.Foundation.Displays.ITextDisplay.SaveCustomCharacter(System.Byte[],System.Byte)
  commentId: M:Meadow.Foundation.Displays.ITextDisplay.SaveCustomCharacter(System.Byte[],System.Byte)
  parent: Meadow.Foundation.Displays.ITextDisplay
  isExternal: true
  name: SaveCustomCharacter(Byte[], Byte)
  nameWithType: ITextDisplay.SaveCustomCharacter(Byte[], Byte)
  fullName: Meadow.Foundation.Displays.ITextDisplay.SaveCustomCharacter(System.Byte[], System.Byte)
  nameWithType.vb: ITextDisplay.SaveCustomCharacter(Byte(), Byte)
  fullName.vb: Meadow.Foundation.Displays.ITextDisplay.SaveCustomCharacter(System.Byte(), System.Byte)
  name.vb: SaveCustomCharacter(Byte(), Byte)
  spec.csharp:
  - uid: Meadow.Foundation.Displays.ITextDisplay.SaveCustomCharacter(System.Byte[],System.Byte)
    name: SaveCustomCharacter
    nameWithType: ITextDisplay.SaveCustomCharacter
    fullName: Meadow.Foundation.Displays.ITextDisplay.SaveCustomCharacter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Foundation.Displays.ITextDisplay.SaveCustomCharacter(System.Byte[],System.Byte)
    name: SaveCustomCharacter
    nameWithType: ITextDisplay.SaveCustomCharacter
    fullName: Meadow.Foundation.Displays.ITextDisplay.SaveCustomCharacter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
