### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Sensors.Motion.ADXL362.Command
  commentId: T:Meadow.Foundation.Sensors.Motion.ADXL362.Command
  id: ADXL362.Command
  parent: Meadow.Foundation.Sensors.Motion
  children:
  - Meadow.Foundation.Sensors.Motion.ADXL362.Command.Readegister
  - Meadow.Foundation.Sensors.Motion.ADXL362.Command.ReadFIFO
  - Meadow.Foundation.Sensors.Motion.ADXL362.Command.WriteRegister
  langs:
  - csharp
  - vb
  name: ADXL362.Command
  nameWithType: ADXL362.Command
  fullName: Meadow.Foundation.Sensors.Motion.ADXL362.Command
  type: Class
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Command
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
    startLine: 51
  assemblies:
  - Sensors.Motion.ADXL362
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nCommand byte (first byte in any communication).\n"
  example: []
  syntax:
    content: protected static class Command
    content.vb: Protected Module Command
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - protected
  - static
  - class
  modifiers.vb:
  - Protected
  - Module
- uid: Meadow.Foundation.Sensors.Motion.ADXL362.Command.WriteRegister
  commentId: F:Meadow.Foundation.Sensors.Motion.ADXL362.Command.WriteRegister
  id: WriteRegister
  parent: Meadow.Foundation.Sensors.Motion.ADXL362.Command
  langs:
  - csharp
  - vb
  name: WriteRegister
  nameWithType: ADXL362.Command.WriteRegister
  fullName: Meadow.Foundation.Sensors.Motion.ADXL362.Command.WriteRegister
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: WriteRegister
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
    startLine: 56
  assemblies:
  - Sensors.Motion.ADXL362
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nWrite to one or more registers.\n"
  example: []
  syntax:
    content: public const byte WriteRegister = 10
    return:
      type: System.Byte
    content.vb: Public Const WriteRegister As Byte = 10
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Foundation.Sensors.Motion.ADXL362.Command.Readegister
  commentId: F:Meadow.Foundation.Sensors.Motion.ADXL362.Command.Readegister
  id: Readegister
  parent: Meadow.Foundation.Sensors.Motion.ADXL362.Command
  langs:
  - csharp
  - vb
  name: Readegister
  nameWithType: ADXL362.Command.Readegister
  fullName: Meadow.Foundation.Sensors.Motion.ADXL362.Command.Readegister
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Readegister
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
    startLine: 61
  assemblies:
  - Sensors.Motion.ADXL362
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nRead the contents of one or more registers.\n"
  example: []
  syntax:
    content: public const byte Readegister = 11
    return:
      type: System.Byte
    content.vb: Public Const Readegister As Byte = 11
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Foundation.Sensors.Motion.ADXL362.Command.ReadFIFO
  commentId: F:Meadow.Foundation.Sensors.Motion.ADXL362.Command.ReadFIFO
  id: ReadFIFO
  parent: Meadow.Foundation.Sensors.Motion.ADXL362.Command
  langs:
  - csharp
  - vb
  name: ReadFIFO
  nameWithType: ADXL362.Command.ReadFIFO
  fullName: Meadow.Foundation.Sensors.Motion.ADXL362.Command.ReadFIFO
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: ReadFIFO
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.ADXL362/ADXL362.cs
    startLine: 66
  assemblies:
  - Sensors.Motion.ADXL362
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nRead the FIFO buffer.\n"
  example: []
  syntax:
    content: public const byte ReadFIFO = 13
    return:
      type: System.Byte
    content.vb: Public Const ReadFIFO As Byte = 13
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Meadow.Foundation.Sensors.Motion
  commentId: N:Meadow.Foundation.Sensors.Motion
  name: Meadow.Foundation.Sensors.Motion
  nameWithType: Meadow.Foundation.Sensors.Motion
  fullName: Meadow.Foundation.Sensors.Motion
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
