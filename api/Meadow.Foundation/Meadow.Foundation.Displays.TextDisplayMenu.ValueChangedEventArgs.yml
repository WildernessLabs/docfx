### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs
  commentId: T:Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs
  id: ValueChangedEventArgs
  parent: Meadow.Foundation.Displays.TextDisplayMenu
  children:
  - Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.#ctor(System.String,System.Object)
  - Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.ItemID
  - Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.Value
  langs:
  - csharp
  - vb
  name: ValueChangedEventArgs
  nameWithType: ValueChangedEventArgs
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs
  type: Class
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/EventHandlers.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: ValueChangedEventArgs
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/EventHandlers.cs
    startLine: 19
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu
  syntax:
    content: 'public class ValueChangedEventArgs : EventArgs'
    content.vb: >-
      Public Class ValueChangedEventArgs

          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.#ctor(System.String,System.Object)
  commentId: M:Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs
  langs:
  - csharp
  - vb
  name: ValueChangedEventArgs(String, Object)
  nameWithType: ValueChangedEventArgs.ValueChangedEventArgs(String, Object)
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.ValueChangedEventArgs(System.String, System.Object)
  type: Constructor
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/EventHandlers.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: .ctor
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/EventHandlers.cs
    startLine: 23
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu
  syntax:
    content: public ValueChangedEventArgs(string id, object value)
    parameters:
    - id: id
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Sub New(id As String, value As Object)
  overload: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.ItemID
  commentId: P:Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.ItemID
  id: ItemID
  parent: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs
  langs:
  - csharp
  - vb
  name: ItemID
  nameWithType: ValueChangedEventArgs.ItemID
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.ItemID
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/EventHandlers.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: ItemID
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/EventHandlers.cs
    startLine: 29
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu
  syntax:
    content: public string ItemID { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ItemID As String
  overload: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.ItemID*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.Value
  commentId: P:Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.Value
  id: Value
  parent: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ValueChangedEventArgs.Value
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.Value
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Displays.TextDisplayMenu/EventHandlers.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Value
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Displays.TextDisplayMenu/EventHandlers.cs
    startLine: 34
  assemblies:
  - Displays.TextDisplayMenu
  namespace: Meadow.Foundation.Displays.TextDisplayMenu
  syntax:
    content: public object Value { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Value As Object
  overload: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Meadow.Foundation.Displays.TextDisplayMenu
  commentId: N:Meadow.Foundation.Displays.TextDisplayMenu
  name: Meadow.Foundation.Displays.TextDisplayMenu
  nameWithType: Meadow.Foundation.Displays.TextDisplayMenu
  fullName: Meadow.Foundation.Displays.TextDisplayMenu
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.#ctor*
  commentId: Overload:Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.#ctor
  name: ValueChangedEventArgs
  nameWithType: ValueChangedEventArgs.ValueChangedEventArgs
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.ValueChangedEventArgs
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.ItemID*
  commentId: Overload:Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.ItemID
  name: ItemID
  nameWithType: ValueChangedEventArgs.ItemID
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.ItemID
- uid: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.Value*
  commentId: Overload:Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.Value
  name: Value
  nameWithType: ValueChangedEventArgs.Value
  fullName: Meadow.Foundation.Displays.TextDisplayMenu.ValueChangedEventArgs.Value
