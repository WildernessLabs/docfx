### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Servos.ServoBase
  commentId: T:Meadow.Foundation.Servos.ServoBase
  id: ServoBase
  parent: Meadow.Foundation.Servos
  children:
  - Meadow.Foundation.Servos.ServoBase.#ctor(Meadow.Hardware.IPwmPort,Meadow.Foundation.Servos.ServoConfig)
  - Meadow.Foundation.Servos.ServoBase._angle
  - Meadow.Foundation.Servos.ServoBase._config
  - Meadow.Foundation.Servos.ServoBase._pwm
  - Meadow.Foundation.Servos.ServoBase.Angle
  - Meadow.Foundation.Servos.ServoBase.CalculateDutyCycle(System.Double)
  - Meadow.Foundation.Servos.ServoBase.CalculatePulseDuration(System.Int32)
  - Meadow.Foundation.Servos.ServoBase.Config
  - Meadow.Foundation.Servos.ServoBase.RotateTo(System.Int32)
  - Meadow.Foundation.Servos.ServoBase.SendCommandPulse(System.Double)
  - Meadow.Foundation.Servos.ServoBase.Stop
  langs:
  - csharp
  - vb
  name: ServoBase
  nameWithType: ServoBase
  fullName: Meadow.Foundation.Servos.ServoBase
  type: Class
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: ServoBase
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
    startLine: 5
  assemblies:
  - Sensors.Servo.Core
  namespace: Meadow.Foundation.Servos
  syntax:
    content: 'public abstract class ServoBase : object, IServo'
    content.vb: >-
      Public MustInherit Class ServoBase
          Inherits Object
          Implements IServo
  inheritance:
  - System.Object
  derivedClasses:
  - Meadow.Foundation.Servos.Servo
  implements:
  - Meadow.Foundation.Servos.IServo
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Meadow.Foundation.Servos.ServoBase._pwm
  commentId: F:Meadow.Foundation.Servos.ServoBase._pwm
  id: _pwm
  parent: Meadow.Foundation.Servos.ServoBase
  langs:
  - csharp
  - vb
  name: _pwm
  nameWithType: ServoBase._pwm
  fullName: Meadow.Foundation.Servos.ServoBase._pwm
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: _pwm
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
    startLine: 7
  assemblies:
  - Sensors.Servo.Core
  namespace: Meadow.Foundation.Servos
  syntax:
    content: protected IPwmPort _pwm
    return:
      type: Meadow.Hardware.IPwmPort
    content.vb: Protected _pwm As IPwmPort
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Servos.ServoBase.Config
  commentId: P:Meadow.Foundation.Servos.ServoBase.Config
  id: Config
  parent: Meadow.Foundation.Servos.ServoBase
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: ServoBase.Config
  fullName: Meadow.Foundation.Servos.ServoBase.Config
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Config
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
    startLine: 12
  assemblies:
  - Sensors.Servo.Core
  namespace: Meadow.Foundation.Servos
  summary: "\nGets the ServoConfig that describes this servo.\n"
  example: []
  syntax:
    content: public ServoConfig Config { get; }
    parameters: []
    return:
      type: Meadow.Foundation.Servos.ServoConfig
    content.vb: Public ReadOnly Property Config As ServoConfig
  overload: Meadow.Foundation.Servos.ServoBase.Config*
  implements:
  - Meadow.Foundation.Servos.IServo.Config
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Foundation.Servos.ServoBase._config
  commentId: F:Meadow.Foundation.Servos.ServoBase._config
  id: _config
  parent: Meadow.Foundation.Servos.ServoBase
  langs:
  - csharp
  - vb
  name: _config
  nameWithType: ServoBase._config
  fullName: Meadow.Foundation.Servos.ServoBase._config
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: _config
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
    startLine: 16
  assemblies:
  - Sensors.Servo.Core
  namespace: Meadow.Foundation.Servos
  syntax:
    content: protected ServoConfig _config
    return:
      type: Meadow.Foundation.Servos.ServoConfig
    content.vb: Protected _config As ServoConfig
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Servos.ServoBase.Angle
  commentId: P:Meadow.Foundation.Servos.ServoBase.Angle
  id: Angle
  parent: Meadow.Foundation.Servos.ServoBase
  langs:
  - csharp
  - vb
  name: Angle
  nameWithType: ServoBase.Angle
  fullName: Meadow.Foundation.Servos.ServoBase.Angle
  type: Property
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Angle
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
    startLine: 21
  assemblies:
  - Sensors.Servo.Core
  namespace: Meadow.Foundation.Servos
  summary: "\nReturns the current angle. Returns -1 if the angle is unknown.\n"
  example: []
  syntax:
    content: public int Angle { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Angle As Integer
  overload: Meadow.Foundation.Servos.ServoBase.Angle*
  implements:
  - Meadow.Foundation.Servos.IServo.Angle
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Foundation.Servos.ServoBase._angle
  commentId: F:Meadow.Foundation.Servos.ServoBase._angle
  id: _angle
  parent: Meadow.Foundation.Servos.ServoBase
  langs:
  - csharp
  - vb
  name: _angle
  nameWithType: ServoBase._angle
  fullName: Meadow.Foundation.Servos.ServoBase._angle
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: _angle
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
    startLine: 23
  assemblies:
  - Sensors.Servo.Core
  namespace: Meadow.Foundation.Servos
  syntax:
    content: protected int _angle
    return:
      type: System.Int32
    content.vb: Protected _angle As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Servos.ServoBase.#ctor(Meadow.Hardware.IPwmPort,Meadow.Foundation.Servos.ServoConfig)
  commentId: M:Meadow.Foundation.Servos.ServoBase.#ctor(Meadow.Hardware.IPwmPort,Meadow.Foundation.Servos.ServoConfig)
  id: '#ctor(Meadow.Hardware.IPwmPort,Meadow.Foundation.Servos.ServoConfig)'
  parent: Meadow.Foundation.Servos.ServoBase
  langs:
  - csharp
  - vb
  name: ServoBase(IPwmPort, ServoConfig)
  nameWithType: ServoBase.ServoBase(IPwmPort, ServoConfig)
  fullName: Meadow.Foundation.Servos.ServoBase.ServoBase(Meadow.Hardware.IPwmPort, Meadow.Foundation.Servos.ServoConfig)
  type: Constructor
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: .ctor
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
    startLine: 30
  assemblies:
  - Sensors.Servo.Core
  namespace: Meadow.Foundation.Servos
  summary: "\nInstantiates a new Servo on the specified PWM Pin with the specified config.\n"
  example: []
  syntax:
    content: public ServoBase(IPwmPort pwm, ServoConfig config)
    parameters:
    - id: pwm
      type: Meadow.Hardware.IPwmPort
    - id: config
      type: Meadow.Foundation.Servos.ServoConfig
      description: ''
    content.vb: Public Sub New(pwm As IPwmPort, config As ServoConfig)
  overload: Meadow.Foundation.Servos.ServoBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Servos.ServoBase.RotateTo(System.Int32)
  commentId: M:Meadow.Foundation.Servos.ServoBase.RotateTo(System.Int32)
  id: RotateTo(System.Int32)
  parent: Meadow.Foundation.Servos.ServoBase
  langs:
  - csharp
  - vb
  name: RotateTo(Int32)
  nameWithType: ServoBase.RotateTo(Int32)
  fullName: Meadow.Foundation.Servos.ServoBase.RotateTo(System.Int32)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: RotateTo
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
    startLine: 45
  assemblies:
  - Sensors.Servo.Core
  namespace: Meadow.Foundation.Servos
  summary: "\nRotates the servo to a given angle.\n"
  example: []
  syntax:
    content: public void RotateTo(int angle)
    parameters:
    - id: angle
      type: System.Int32
      description: The angle to rotate to.
    content.vb: Public Sub RotateTo(angle As Integer)
  overload: Meadow.Foundation.Servos.ServoBase.RotateTo*
  implements:
  - Meadow.Foundation.Servos.IServo.RotateTo(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Servos.ServoBase.Stop
  commentId: M:Meadow.Foundation.Servos.ServoBase.Stop
  id: Stop
  parent: Meadow.Foundation.Servos.ServoBase
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: ServoBase.Stop()
  fullName: Meadow.Foundation.Servos.ServoBase.Stop()
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Stop
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
    startLine: 71
  assemblies:
  - Sensors.Servo.Core
  namespace: Meadow.Foundation.Servos
  summary: "\nStops the signal that controls the servo angle. For many servos, this will \nreturn the servo to its nuetral position (usually 0º).\n"
  example: []
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: Meadow.Foundation.Servos.ServoBase.Stop*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Foundation.Servos.ServoBase.CalculatePulseDuration(System.Int32)
  commentId: M:Meadow.Foundation.Servos.ServoBase.CalculatePulseDuration(System.Int32)
  id: CalculatePulseDuration(System.Int32)
  parent: Meadow.Foundation.Servos.ServoBase
  langs:
  - csharp
  - vb
  name: CalculatePulseDuration(Int32)
  nameWithType: ServoBase.CalculatePulseDuration(Int32)
  fullName: Meadow.Foundation.Servos.ServoBase.CalculatePulseDuration(System.Int32)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: CalculatePulseDuration
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
    startLine: 77
  assemblies:
  - Sensors.Servo.Core
  namespace: Meadow.Foundation.Servos
  syntax:
    content: protected double CalculatePulseDuration(int angle)
    parameters:
    - id: angle
      type: System.Int32
    return:
      type: System.Double
    content.vb: Protected Function CalculatePulseDuration(angle As Integer) As Double
  overload: Meadow.Foundation.Servos.ServoBase.CalculatePulseDuration*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Servos.ServoBase.CalculateDutyCycle(System.Double)
  commentId: M:Meadow.Foundation.Servos.ServoBase.CalculateDutyCycle(System.Double)
  id: CalculateDutyCycle(System.Double)
  parent: Meadow.Foundation.Servos.ServoBase
  langs:
  - csharp
  - vb
  name: CalculateDutyCycle(Double)
  nameWithType: ServoBase.CalculateDutyCycle(Double)
  fullName: Meadow.Foundation.Servos.ServoBase.CalculateDutyCycle(System.Double)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: CalculateDutyCycle
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
    startLine: 87
  assemblies:
  - Sensors.Servo.Core
  namespace: Meadow.Foundation.Servos
  syntax:
    content: protected double CalculateDutyCycle(double pulseDuration)
    parameters:
    - id: pulseDuration
      type: System.Double
    return:
      type: System.Double
    content.vb: Protected Function CalculateDutyCycle(pulseDuration As Double) As Double
  overload: Meadow.Foundation.Servos.ServoBase.CalculateDutyCycle*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Foundation.Servos.ServoBase.SendCommandPulse(System.Double)
  commentId: M:Meadow.Foundation.Servos.ServoBase.SendCommandPulse(System.Double)
  id: SendCommandPulse(System.Double)
  parent: Meadow.Foundation.Servos.ServoBase
  langs:
  - csharp
  - vb
  name: SendCommandPulse(Double)
  nameWithType: ServoBase.SendCommandPulse(Double)
  fullName: Meadow.Foundation.Servos.ServoBase.SendCommandPulse(System.Double)
  type: Method
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: SendCommandPulse
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Servo.Core/ServoBase.cs
    startLine: 93
  assemblies:
  - Sensors.Servo.Core
  namespace: Meadow.Foundation.Servos
  syntax:
    content: protected void SendCommandPulse(double pulseDuration)
    parameters:
    - id: pulseDuration
      type: System.Double
    content.vb: Protected Sub SendCommandPulse(pulseDuration As Double)
  overload: Meadow.Foundation.Servos.ServoBase.SendCommandPulse*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Meadow.Foundation.Servos
  commentId: N:Meadow.Foundation.Servos
  name: Meadow.Foundation.Servos
  nameWithType: Meadow.Foundation.Servos
  fullName: Meadow.Foundation.Servos
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Meadow.Foundation.Servos.IServo
  commentId: T:Meadow.Foundation.Servos.IServo
  parent: Meadow.Foundation.Servos
  name: IServo
  nameWithType: IServo
  fullName: Meadow.Foundation.Servos.IServo
- uid: Meadow.Hardware.IPwmPort
  commentId: T:Meadow.Hardware.IPwmPort
  parent: Meadow.Hardware
  name: IPwmPort
  nameWithType: IPwmPort
  fullName: Meadow.Hardware.IPwmPort
- uid: Meadow.Hardware
  commentId: N:Meadow.Hardware
  name: Meadow.Hardware
  nameWithType: Meadow.Hardware
  fullName: Meadow.Hardware
- uid: Meadow.Foundation.Servos.ServoBase.Config*
  commentId: Overload:Meadow.Foundation.Servos.ServoBase.Config
  name: Config
  nameWithType: ServoBase.Config
  fullName: Meadow.Foundation.Servos.ServoBase.Config
- uid: Meadow.Foundation.Servos.IServo.Config
  commentId: P:Meadow.Foundation.Servos.IServo.Config
  parent: Meadow.Foundation.Servos.IServo
  name: Config
  nameWithType: IServo.Config
  fullName: Meadow.Foundation.Servos.IServo.Config
- uid: Meadow.Foundation.Servos.ServoConfig
  commentId: T:Meadow.Foundation.Servos.ServoConfig
  parent: Meadow.Foundation.Servos
  name: ServoConfig
  nameWithType: ServoConfig
  fullName: Meadow.Foundation.Servos.ServoConfig
- uid: Meadow.Foundation.Servos.ServoBase.Angle*
  commentId: Overload:Meadow.Foundation.Servos.ServoBase.Angle
  name: Angle
  nameWithType: ServoBase.Angle
  fullName: Meadow.Foundation.Servos.ServoBase.Angle
- uid: Meadow.Foundation.Servos.IServo.Angle
  commentId: P:Meadow.Foundation.Servos.IServo.Angle
  parent: Meadow.Foundation.Servos.IServo
  name: Angle
  nameWithType: IServo.Angle
  fullName: Meadow.Foundation.Servos.IServo.Angle
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Meadow.Foundation.Servos.ServoBase.#ctor*
  commentId: Overload:Meadow.Foundation.Servos.ServoBase.#ctor
  name: ServoBase
  nameWithType: ServoBase.ServoBase
  fullName: Meadow.Foundation.Servos.ServoBase.ServoBase
- uid: Meadow.Foundation.Servos.ServoBase.RotateTo*
  commentId: Overload:Meadow.Foundation.Servos.ServoBase.RotateTo
  name: RotateTo
  nameWithType: ServoBase.RotateTo
  fullName: Meadow.Foundation.Servos.ServoBase.RotateTo
- uid: Meadow.Foundation.Servos.IServo.RotateTo(System.Int32)
  commentId: M:Meadow.Foundation.Servos.IServo.RotateTo(System.Int32)
  parent: Meadow.Foundation.Servos.IServo
  isExternal: true
  name: RotateTo(Int32)
  nameWithType: IServo.RotateTo(Int32)
  fullName: Meadow.Foundation.Servos.IServo.RotateTo(System.Int32)
  spec.csharp:
  - uid: Meadow.Foundation.Servos.IServo.RotateTo(System.Int32)
    name: RotateTo
    nameWithType: IServo.RotateTo
    fullName: Meadow.Foundation.Servos.IServo.RotateTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Foundation.Servos.IServo.RotateTo(System.Int32)
    name: RotateTo
    nameWithType: IServo.RotateTo
    fullName: Meadow.Foundation.Servos.IServo.RotateTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Foundation.Servos.ServoBase.Stop*
  commentId: Overload:Meadow.Foundation.Servos.ServoBase.Stop
  name: Stop
  nameWithType: ServoBase.Stop
  fullName: Meadow.Foundation.Servos.ServoBase.Stop
- uid: Meadow.Foundation.Servos.ServoBase.CalculatePulseDuration*
  commentId: Overload:Meadow.Foundation.Servos.ServoBase.CalculatePulseDuration
  name: CalculatePulseDuration
  nameWithType: ServoBase.CalculatePulseDuration
  fullName: Meadow.Foundation.Servos.ServoBase.CalculatePulseDuration
- uid: System.Double
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Meadow.Foundation.Servos.ServoBase.CalculateDutyCycle*
  commentId: Overload:Meadow.Foundation.Servos.ServoBase.CalculateDutyCycle
  name: CalculateDutyCycle
  nameWithType: ServoBase.CalculateDutyCycle
  fullName: Meadow.Foundation.Servos.ServoBase.CalculateDutyCycle
- uid: Meadow.Foundation.Servos.ServoBase.SendCommandPulse*
  commentId: Overload:Meadow.Foundation.Servos.ServoBase.SendCommandPulse
  name: SendCommandPulse
  nameWithType: ServoBase.SendCommandPulse
  fullName: Meadow.Foundation.Servos.ServoBase.SendCommandPulse
