### YamlMime:ManagedReference
items:
- uid: Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask
  commentId: T:Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask
  id: BNO055.SelfTestResultMask
  parent: Meadow.Foundation.Sensors.Motion
  children:
  - Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Accelerometer
  - Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Gyroscope
  - Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Magnetometer
  - Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Microcontroller
  langs:
  - csharp
  - vb
  name: BNO055.SelfTestResultMask
  nameWithType: BNO055.SelfTestResultMask
  fullName: Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask
  type: Class
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: SelfTestResultMask
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
    startLine: 1295
  assemblies:
  - Sensors.Motion.BNO055
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nSelf test result bit mask.\n"
  example: []
  syntax:
    content: public static class SelfTestResultMask
    content.vb: Public Module SelfTestResultMask
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Accelerometer
  commentId: F:Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Accelerometer
  id: Accelerometer
  parent: Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask
  langs:
  - csharp
  - vb
  name: Accelerometer
  nameWithType: BNO055.SelfTestResultMask.Accelerometer
  fullName: Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Accelerometer
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Accelerometer
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
    startLine: 1300
  assemblies:
  - Sensors.Motion.BNO055
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nAccelerometer bit mask.\n"
  example: []
  syntax:
    content: public static readonly byte Accelerometer
    return:
      type: System.Byte
    content.vb: Public Shared ReadOnly Accelerometer As Byte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Magnetometer
  commentId: F:Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Magnetometer
  id: Magnetometer
  parent: Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask
  langs:
  - csharp
  - vb
  name: Magnetometer
  nameWithType: BNO055.SelfTestResultMask.Magnetometer
  fullName: Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Magnetometer
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Magnetometer
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
    startLine: 1305
  assemblies:
  - Sensors.Motion.BNO055
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nMagnetometer bit mask.\n"
  example: []
  syntax:
    content: public static readonly byte Magnetometer
    return:
      type: System.Byte
    content.vb: Public Shared ReadOnly Magnetometer As Byte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Gyroscope
  commentId: F:Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Gyroscope
  id: Gyroscope
  parent: Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask
  langs:
  - csharp
  - vb
  name: Gyroscope
  nameWithType: BNO055.SelfTestResultMask.Gyroscope
  fullName: Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Gyroscope
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Gyroscope
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
    startLine: 1310
  assemblies:
  - Sensors.Motion.BNO055
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nGyroscope bit mask.\n"
  example: []
  syntax:
    content: public static readonly byte Gyroscope
    return:
      type: System.Byte
    content.vb: Public Shared ReadOnly Gyroscope As Byte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Microcontroller
  commentId: F:Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Microcontroller
  id: Microcontroller
  parent: Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask
  langs:
  - csharp
  - vb
  name: Microcontroller
  nameWithType: BNO055.SelfTestResultMask.Microcontroller
  fullName: Meadow.Foundation.Sensors.Motion.BNO055.SelfTestResultMask.Microcontroller
  type: Field
  source:
    remote:
      path: Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Foundation.git
    id: Microcontroller
    path: ../Meadow.Foundation/Source/Peripheral_Libs/Sensors.Motion.BNO055/BNO055.cs
    startLine: 1315
  assemblies:
  - Sensors.Motion.BNO055
  namespace: Meadow.Foundation.Sensors.Motion
  summary: "\nMicrocontroller bit mask.\n"
  example: []
  syntax:
    content: public static readonly byte Microcontroller
    return:
      type: System.Byte
    content.vb: Public Shared ReadOnly Microcontroller As Byte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Meadow.Foundation.Sensors.Motion
  commentId: N:Meadow.Foundation.Sensors.Motion
  name: Meadow.Foundation.Sensors.Motion
  nameWithType: Meadow.Foundation.Sensors.Motion
  fullName: Meadow.Foundation.Sensors.Motion
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
