### YamlMime:ManagedReference
items:
- uid: Meadow.Hardware.IPort
  commentId: T:Meadow.Hardware.IPort
  id: IPort
  parent: Meadow.Hardware
  children:
  - Meadow.Hardware.IPort.DirectionType
  - Meadow.Hardware.IPort.SignalType
  langs:
  - csharp
  - vb
  name: IPort
  nameWithType: IPort
  fullName: Meadow.Hardware.IPort
  type: Interface
  source:
    remote:
      path: source/Meadow.Core/Hardware/Contracts/IPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: IPort
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Contracts/IPort.cs
    startLine: 3
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public interface IPort
    content.vb: Public Interface IPort
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Meadow.Hardware.IPort.DirectionType
  commentId: P:Meadow.Hardware.IPort.DirectionType
  id: DirectionType
  parent: Meadow.Hardware.IPort
  langs:
  - csharp
  - vb
  name: DirectionType
  nameWithType: IPort.DirectionType
  fullName: Meadow.Hardware.IPort.DirectionType
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/Contracts/IPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: DirectionType
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Contracts/IPort.cs
    startLine: 5
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: PortDirectionType DirectionType { get; }
    parameters: []
    return:
      type: Meadow.Hardware.PortDirectionType
    content.vb: ReadOnly Property DirectionType As PortDirectionType
  overload: Meadow.Hardware.IPort.DirectionType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Meadow.Hardware.IPort.SignalType
  commentId: P:Meadow.Hardware.IPort.SignalType
  id: SignalType
  parent: Meadow.Hardware.IPort
  langs:
  - csharp
  - vb
  name: SignalType
  nameWithType: IPort.SignalType
  fullName: Meadow.Hardware.IPort.SignalType
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/Contracts/IPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: SignalType
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Contracts/IPort.cs
    startLine: 6
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: SignalType SignalType { get; }
    parameters: []
    return:
      type: Meadow.Hardware.SignalType
    content.vb: ReadOnly Property SignalType As SignalType
  overload: Meadow.Hardware.IPort.SignalType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Meadow.Hardware
  commentId: N:Meadow.Hardware
  name: Meadow.Hardware
  nameWithType: Meadow.Hardware
  fullName: Meadow.Hardware
- uid: Meadow.Hardware.IPort.DirectionType*
  commentId: Overload:Meadow.Hardware.IPort.DirectionType
  name: DirectionType
  nameWithType: IPort.DirectionType
  fullName: Meadow.Hardware.IPort.DirectionType
- uid: Meadow.Hardware.PortDirectionType
  commentId: T:Meadow.Hardware.PortDirectionType
  parent: Meadow.Hardware
  name: PortDirectionType
  nameWithType: PortDirectionType
  fullName: Meadow.Hardware.PortDirectionType
- uid: Meadow.Hardware.IPort.SignalType*
  commentId: Overload:Meadow.Hardware.IPort.SignalType
  name: SignalType
  nameWithType: IPort.SignalType
  fullName: Meadow.Hardware.IPort.SignalType
- uid: Meadow.Hardware.SignalType
  commentId: T:Meadow.Hardware.SignalType
  parent: Meadow.Hardware
  name: SignalType
  nameWithType: SignalType
  fullName: Meadow.Hardware.SignalType
