### YamlMime:ManagedReference
items:
- uid: Meadow.Gateway.WiFi.NetworkEncryptionType
  commentId: T:Meadow.Gateway.WiFi.NetworkEncryptionType
  id: NetworkEncryptionType
  parent: Meadow.Gateway.WiFi
  children:
  - Meadow.Gateway.WiFi.NetworkEncryptionType.Ihv
  - Meadow.Gateway.WiFi.NetworkEncryptionType.None
  - Meadow.Gateway.WiFi.NetworkEncryptionType.Open80211
  - Meadow.Gateway.WiFi.NetworkEncryptionType.Rsna
  - Meadow.Gateway.WiFi.NetworkEncryptionType.RsnaPsk
  - Meadow.Gateway.WiFi.NetworkEncryptionType.SharedKey80211
  - Meadow.Gateway.WiFi.NetworkEncryptionType.Unknown
  - Meadow.Gateway.WiFi.NetworkEncryptionType.Wpa
  - Meadow.Gateway.WiFi.NetworkEncryptionType.WpaNone
  - Meadow.Gateway.WiFi.NetworkEncryptionType.WpaPsk
  langs:
  - csharp
  - vb
  name: NetworkEncryptionType
  nameWithType: NetworkEncryptionType
  fullName: Meadow.Gateway.WiFi.NetworkEncryptionType
  type: Enum
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: NetworkEncryptionType
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
    startLine: 6
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  summary: "\nDescribes the type of encryption employed by a WiFi network.\n"
  example: []
  syntax:
    content: 'public enum NetworkEncryptionType : int'
    content.vb: Public Enum NetworkEncryptionType As Integer
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Meadow.Gateway.WiFi.NetworkEncryptionType.None
  commentId: F:Meadow.Gateway.WiFi.NetworkEncryptionType.None
  id: None
  parent: Meadow.Gateway.WiFi.NetworkEncryptionType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: NetworkEncryptionType.None
  fullName: Meadow.Gateway.WiFi.NetworkEncryptionType.None
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: None
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
    startLine: 11
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  summary: "\nNo authentication enabled.\n"
  example: []
  syntax:
    content: None = null
    return:
      type: Meadow.Gateway.WiFi.NetworkEncryptionType
    content.vb: None = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Gateway.WiFi.NetworkEncryptionType.Unknown
  commentId: F:Meadow.Gateway.WiFi.NetworkEncryptionType.Unknown
  id: Unknown
  parent: Meadow.Gateway.WiFi.NetworkEncryptionType
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: NetworkEncryptionType.Unknown
  fullName: Meadow.Gateway.WiFi.NetworkEncryptionType.Unknown
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Unknown
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
    startLine: 16
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  summary: "\nUnknown authentication method.\n"
  example: []
  syntax:
    content: Unknown = null
    return:
      type: Meadow.Gateway.WiFi.NetworkEncryptionType
    content.vb: Unknown = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Gateway.WiFi.NetworkEncryptionType.Open80211
  commentId: F:Meadow.Gateway.WiFi.NetworkEncryptionType.Open80211
  id: Open80211
  parent: Meadow.Gateway.WiFi.NetworkEncryptionType
  langs:
  - csharp
  - vb
  name: Open80211
  nameWithType: NetworkEncryptionType.Open80211
  fullName: Meadow.Gateway.WiFi.NetworkEncryptionType.Open80211
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Open80211
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
    startLine: 21
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  summary: "\nOpen authentication over 802.11 wireless. Devices are authenticated and can connect to an access point, but communication with the network requires a matching Wired Equivalent Privacy (WEP) key.\n"
  example: []
  syntax:
    content: Open80211 = null
    return:
      type: Meadow.Gateway.WiFi.NetworkEncryptionType
    content.vb: Open80211 = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Gateway.WiFi.NetworkEncryptionType.SharedKey80211
  commentId: F:Meadow.Gateway.WiFi.NetworkEncryptionType.SharedKey80211
  id: SharedKey80211
  parent: Meadow.Gateway.WiFi.NetworkEncryptionType
  langs:
  - csharp
  - vb
  name: SharedKey80211
  nameWithType: NetworkEncryptionType.SharedKey80211
  fullName: Meadow.Gateway.WiFi.NetworkEncryptionType.SharedKey80211
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: SharedKey80211
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
    startLine: 26
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  summary: "\nSpecifies an IEEE 802.11 Shared Key authentication algorithm that requires the use of a pre-shared Wired Equivalent Privacy (WEP) key for the 802.11 authentication.\n"
  example: []
  syntax:
    content: SharedKey80211 = null
    return:
      type: Meadow.Gateway.WiFi.NetworkEncryptionType
    content.vb: SharedKey80211 = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Gateway.WiFi.NetworkEncryptionType.Wpa
  commentId: F:Meadow.Gateway.WiFi.NetworkEncryptionType.Wpa
  id: Wpa
  parent: Meadow.Gateway.WiFi.NetworkEncryptionType
  langs:
  - csharp
  - vb
  name: Wpa
  nameWithType: NetworkEncryptionType.Wpa
  fullName: Meadow.Gateway.WiFi.NetworkEncryptionType.Wpa
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Wpa
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
    startLine: 31
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  summary: "\nSpecifies a Wi-Fi Protected Access (WPA) algorithm. IEEE 802.1X port authorization is performed by the supplicant, authenticator, and authentication server. Cipher keys are dynamically derived through the authentication process.\n"
  example: []
  syntax:
    content: Wpa = null
    return:
      type: Meadow.Gateway.WiFi.NetworkEncryptionType
    content.vb: Wpa = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Gateway.WiFi.NetworkEncryptionType.WpaPsk
  commentId: F:Meadow.Gateway.WiFi.NetworkEncryptionType.WpaPsk
  id: WpaPsk
  parent: Meadow.Gateway.WiFi.NetworkEncryptionType
  langs:
  - csharp
  - vb
  name: WpaPsk
  nameWithType: NetworkEncryptionType.WpaPsk
  fullName: Meadow.Gateway.WiFi.NetworkEncryptionType.WpaPsk
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: WpaPsk
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
    startLine: 36
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  summary: "\nSpecifies a Wi-Fi Protected Access (WPA) algorithm that uses pre-shared keys (PSK). IEEE 802.1X port authorization is performed by the supplicant and authenticator. Cipher keys are dynamically derived through a pre-shared key that is used on both the supplicant and authenticator.\n"
  example: []
  syntax:
    content: WpaPsk = null
    return:
      type: Meadow.Gateway.WiFi.NetworkEncryptionType
    content.vb: WpaPsk = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Gateway.WiFi.NetworkEncryptionType.WpaNone
  commentId: F:Meadow.Gateway.WiFi.NetworkEncryptionType.WpaNone
  id: WpaNone
  parent: Meadow.Gateway.WiFi.NetworkEncryptionType
  langs:
  - csharp
  - vb
  name: WpaNone
  nameWithType: NetworkEncryptionType.WpaNone
  fullName: Meadow.Gateway.WiFi.NetworkEncryptionType.WpaNone
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: WpaNone
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
    startLine: 41
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  summary: "\nWi-Fi Protected Access.\n"
  example: []
  syntax:
    content: WpaNone = null
    return:
      type: Meadow.Gateway.WiFi.NetworkEncryptionType
    content.vb: WpaNone = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Gateway.WiFi.NetworkEncryptionType.Rsna
  commentId: F:Meadow.Gateway.WiFi.NetworkEncryptionType.Rsna
  id: Rsna
  parent: Meadow.Gateway.WiFi.NetworkEncryptionType
  langs:
  - csharp
  - vb
  name: Rsna
  nameWithType: NetworkEncryptionType.Rsna
  fullName: Meadow.Gateway.WiFi.NetworkEncryptionType.Rsna
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Rsna
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
    startLine: 46
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  summary: "\nSpecifies an IEEE 802.11i Robust Security Network Association (RSNA) algorithm. IEEE 802.1X port authorization is performed by the supplicant, authenticator, and authentication server. Cipher keys are dynamically derived through the authentication process.\n"
  example: []
  syntax:
    content: Rsna = null
    return:
      type: Meadow.Gateway.WiFi.NetworkEncryptionType
    content.vb: Rsna = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Gateway.WiFi.NetworkEncryptionType.RsnaPsk
  commentId: F:Meadow.Gateway.WiFi.NetworkEncryptionType.RsnaPsk
  id: RsnaPsk
  parent: Meadow.Gateway.WiFi.NetworkEncryptionType
  langs:
  - csharp
  - vb
  name: RsnaPsk
  nameWithType: NetworkEncryptionType.RsnaPsk
  fullName: Meadow.Gateway.WiFi.NetworkEncryptionType.RsnaPsk
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: RsnaPsk
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
    startLine: 51
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  summary: "\nSpecifies an IEEE 802.11i RSNA algorithm that uses PSK. IEEE 802.1X port authorization is performed by the supplicant and authenticator. Cipher keys are dynamically derived through a pre-shared key that is used on both the supplicant and authenticator.\n"
  example: []
  syntax:
    content: RsnaPsk = null
    return:
      type: Meadow.Gateway.WiFi.NetworkEncryptionType
    content.vb: RsnaPsk = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Meadow.Gateway.WiFi.NetworkEncryptionType.Ihv
  commentId: F:Meadow.Gateway.WiFi.NetworkEncryptionType.Ihv
  id: Ihv
  parent: Meadow.Gateway.WiFi.NetworkEncryptionType
  langs:
  - csharp
  - vb
  name: Ihv
  nameWithType: NetworkEncryptionType.Ihv
  fullName: Meadow.Gateway.WiFi.NetworkEncryptionType.Ihv
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Ihv
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/NetworkEncryptionType.cs
    startLine: 56
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  summary: "\nSpecifies an authentication type defined by an independent hardware vendor (IHV).\n"
  example: []
  syntax:
    content: Ihv = null
    return:
      type: Meadow.Gateway.WiFi.NetworkEncryptionType
    content.vb: Ihv = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Meadow.Gateway.WiFi
  commentId: N:Meadow.Gateway.WiFi
  name: Meadow.Gateway.WiFi
  nameWithType: Meadow.Gateway.WiFi
  fullName: Meadow.Gateway.WiFi
- uid: Meadow.Gateway.WiFi.NetworkEncryptionType
  commentId: T:Meadow.Gateway.WiFi.NetworkEncryptionType
  parent: Meadow.Gateway.WiFi
  name: NetworkEncryptionType
  nameWithType: NetworkEncryptionType
  fullName: Meadow.Gateway.WiFi.NetworkEncryptionType
