### YamlMime:ManagedReference
items:
- uid: Meadow.Hardware.Communications.SoftwareI2C
  commentId: T:Meadow.Hardware.Communications.SoftwareI2C
  id: SoftwareI2C
  parent: Meadow.Hardware.Communications
  children:
  - Meadow.Hardware.Communications.SoftwareI2C.#ctor(Meadow.Hardware.IDigitalPin,Meadow.Hardware.IDigitalPin)
  - Meadow.Hardware.Communications.SoftwareI2C.ReadByte(System.Boolean)
  - Meadow.Hardware.Communications.SoftwareI2C.ReadBytes(System.UInt16)
  - Meadow.Hardware.Communications.SoftwareI2C.ReadRegister(System.Byte)
  - Meadow.Hardware.Communications.SoftwareI2C.ReadRegisters(System.Byte,System.UInt16)
  - Meadow.Hardware.Communications.SoftwareI2C.ReadUShort(System.Byte,Meadow.ByteOrder)
  - Meadow.Hardware.Communications.SoftwareI2C.ReadUShorts(System.Byte,System.UInt16,Meadow.ByteOrder)
  - Meadow.Hardware.Communications.SoftwareI2C.Start(System.Byte)
  - Meadow.Hardware.Communications.SoftwareI2C.Stop
  - Meadow.Hardware.Communications.SoftwareI2C.WriteByte(System.Byte)
  - Meadow.Hardware.Communications.SoftwareI2C.WriteBytes(System.Byte[])
  - Meadow.Hardware.Communications.SoftwareI2C.WriteRead(System.Byte[],System.UInt16)
  - Meadow.Hardware.Communications.SoftwareI2C.WriteRegister(System.Byte,System.Byte)
  - Meadow.Hardware.Communications.SoftwareI2C.WriteRegisters(System.Byte,System.Byte[])
  - Meadow.Hardware.Communications.SoftwareI2C.WriteUShort(System.Byte,System.UInt16,Meadow.ByteOrder)
  - Meadow.Hardware.Communications.SoftwareI2C.WriteUShorts(System.Byte,System.UInt16[],Meadow.ByteOrder)
  langs:
  - csharp
  - vb
  name: SoftwareI2C
  nameWithType: SoftwareI2C
  fullName: Meadow.Hardware.Communications.SoftwareI2C
  type: Class
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: SoftwareI2C
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 7
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: 'public class SoftwareI2C : ICommunicationBus'
    content.vb: >-
      Public Class SoftwareI2C

          Implements ICommunicationBus
  inheritance:
  - System.Object
  implements:
  - Meadow.Hardware.Communications.ICommunicationBus
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Meadow.Hardware.Communications.SoftwareI2C.#ctor(Meadow.Hardware.IDigitalPin,Meadow.Hardware.IDigitalPin)
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.#ctor(Meadow.Hardware.IDigitalPin,Meadow.Hardware.IDigitalPin)
  id: '#ctor(Meadow.Hardware.IDigitalPin,Meadow.Hardware.IDigitalPin)'
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: SoftwareI2C(IDigitalPin, IDigitalPin)
  nameWithType: SoftwareI2C.SoftwareI2C(IDigitalPin, IDigitalPin)
  fullName: Meadow.Hardware.Communications.SoftwareI2C.SoftwareI2C(Meadow.Hardware.IDigitalPin, Meadow.Hardware.IDigitalPin)
  type: Constructor
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: .ctor
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 14
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public SoftwareI2C(IDigitalPin pinSda, IDigitalPin pinScl)
    parameters:
    - id: pinSda
      type: Meadow.Hardware.IDigitalPin
    - id: pinScl
      type: Meadow.Hardware.IDigitalPin
    content.vb: Public Sub New(pinSda As IDigitalPin, pinScl As IDigitalPin)
  overload: Meadow.Hardware.Communications.SoftwareI2C.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.Communications.SoftwareI2C.Start(System.Byte)
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.Start(System.Byte)
  id: Start(System.Byte)
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: Start(Byte)
  nameWithType: SoftwareI2C.Start(Byte)
  fullName: Meadow.Hardware.Communications.SoftwareI2C.Start(System.Byte)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: Start
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 40
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public void Start(byte address)
    parameters:
    - id: address
      type: System.Byte
    content.vb: Public Sub Start(address As Byte)
  overload: Meadow.Hardware.Communications.SoftwareI2C.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.Communications.SoftwareI2C.Stop
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.Stop
  id: Stop
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: SoftwareI2C.Stop()
  fullName: Meadow.Hardware.Communications.SoftwareI2C.Stop()
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: Stop
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 48
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: Meadow.Hardware.Communications.SoftwareI2C.Stop*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.Communications.SoftwareI2C.WriteByte(System.Byte)
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: WriteByte(Byte)
  nameWithType: SoftwareI2C.WriteByte(Byte)
  fullName: Meadow.Hardware.Communications.SoftwareI2C.WriteByte(System.Byte)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WriteByte
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 58
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public void WriteByte(byte value)
    parameters:
    - id: value
      type: System.Byte
    content.vb: Public Sub WriteByte(value As Byte)
  overload: Meadow.Hardware.Communications.SoftwareI2C.WriteByte*
  implements:
  - Meadow.Hardware.Communications.ICommunicationBus.WriteByte(System.Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.Communications.SoftwareI2C.ReadByte(System.Boolean)
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.ReadByte(System.Boolean)
  id: ReadByte(System.Boolean)
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: ReadByte(Boolean)
  nameWithType: SoftwareI2C.ReadByte(Boolean)
  fullName: Meadow.Hardware.Communications.SoftwareI2C.ReadByte(System.Boolean)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: ReadByte
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 82
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public byte ReadByte(bool last = false)
    parameters:
    - id: last
      type: System.Boolean
    return:
      type: System.Byte
    content.vb: Public Function ReadByte(last As Boolean = False) As Byte
  overload: Meadow.Hardware.Communications.SoftwareI2C.ReadByte*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.Communications.SoftwareI2C.WriteBytes(System.Byte[])
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.WriteBytes(System.Byte[])
  id: WriteBytes(System.Byte[])
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: WriteBytes(Byte[])
  nameWithType: SoftwareI2C.WriteBytes(Byte[])
  fullName: Meadow.Hardware.Communications.SoftwareI2C.WriteBytes(System.Byte[])
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WriteBytes
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 128
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public void WriteBytes(byte[] values)
    parameters:
    - id: values
      type: System.Byte[]
    content.vb: Public Sub WriteBytes(values As Byte())
  overload: Meadow.Hardware.Communications.SoftwareI2C.WriteBytes*
  implements:
  - Meadow.Hardware.Communications.ICommunicationBus.WriteBytes(System.Byte[])
  nameWithType.vb: SoftwareI2C.WriteBytes(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Hardware.Communications.SoftwareI2C.WriteBytes(System.Byte())
  name.vb: WriteBytes(Byte())
- uid: Meadow.Hardware.Communications.SoftwareI2C.WriteUShort(System.Byte,System.UInt16,Meadow.ByteOrder)
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.WriteUShort(System.Byte,System.UInt16,Meadow.ByteOrder)
  id: WriteUShort(System.Byte,System.UInt16,Meadow.ByteOrder)
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: WriteUShort(Byte, UInt16, ByteOrder)
  nameWithType: SoftwareI2C.WriteUShort(Byte, UInt16, ByteOrder)
  fullName: Meadow.Hardware.Communications.SoftwareI2C.WriteUShort(System.Byte, System.UInt16, Meadow.ByteOrder)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WriteUShort
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 136
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public void WriteUShort(byte address, ushort value, ByteOrder order = ByteOrder.LittleEndian)
    parameters:
    - id: address
      type: System.Byte
    - id: value
      type: System.UInt16
    - id: order
      type: Meadow.ByteOrder
    content.vb: Public Sub WriteUShort(address As Byte, value As UShort, order As ByteOrder = ByteOrder.LittleEndian)
  overload: Meadow.Hardware.Communications.SoftwareI2C.WriteUShort*
  implements:
  - Meadow.Hardware.Communications.ICommunicationBus.WriteUShort(System.Byte,System.UInt16,Meadow.ByteOrder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.Communications.SoftwareI2C.WriteUShorts(System.Byte,System.UInt16[],Meadow.ByteOrder)
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.WriteUShorts(System.Byte,System.UInt16[],Meadow.ByteOrder)
  id: WriteUShorts(System.Byte,System.UInt16[],Meadow.ByteOrder)
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: WriteUShorts(Byte, UInt16[], ByteOrder)
  nameWithType: SoftwareI2C.WriteUShorts(Byte, UInt16[], ByteOrder)
  fullName: Meadow.Hardware.Communications.SoftwareI2C.WriteUShorts(System.Byte, System.UInt16[], Meadow.ByteOrder)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WriteUShorts
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 141
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public void WriteUShorts(byte address, ushort[] values, ByteOrder order = ByteOrder.LittleEndian)
    parameters:
    - id: address
      type: System.Byte
    - id: values
      type: System.UInt16[]
    - id: order
      type: Meadow.ByteOrder
    content.vb: Public Sub WriteUShorts(address As Byte, values As UShort(), order As ByteOrder = ByteOrder.LittleEndian)
  overload: Meadow.Hardware.Communications.SoftwareI2C.WriteUShorts*
  implements:
  - Meadow.Hardware.Communications.ICommunicationBus.WriteUShorts(System.Byte,System.UInt16[],Meadow.ByteOrder)
  nameWithType.vb: SoftwareI2C.WriteUShorts(Byte, UInt16(), ByteOrder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Hardware.Communications.SoftwareI2C.WriteUShorts(System.Byte, System.UInt16(), Meadow.ByteOrder)
  name.vb: WriteUShorts(Byte, UInt16(), ByteOrder)
- uid: Meadow.Hardware.Communications.SoftwareI2C.WriteRegister(System.Byte,System.Byte)
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.WriteRegister(System.Byte,System.Byte)
  id: WriteRegister(System.Byte,System.Byte)
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: WriteRegister(Byte, Byte)
  nameWithType: SoftwareI2C.WriteRegister(Byte, Byte)
  fullName: Meadow.Hardware.Communications.SoftwareI2C.WriteRegister(System.Byte, System.Byte)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WriteRegister
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 146
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public void WriteRegister(byte address, byte value)
    parameters:
    - id: address
      type: System.Byte
    - id: value
      type: System.Byte
    content.vb: Public Sub WriteRegister(address As Byte, value As Byte)
  overload: Meadow.Hardware.Communications.SoftwareI2C.WriteRegister*
  implements:
  - Meadow.Hardware.Communications.ICommunicationBus.WriteRegister(System.Byte,System.Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.Communications.SoftwareI2C.WriteRegisters(System.Byte,System.Byte[])
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.WriteRegisters(System.Byte,System.Byte[])
  id: WriteRegisters(System.Byte,System.Byte[])
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: WriteRegisters(Byte, Byte[])
  nameWithType: SoftwareI2C.WriteRegisters(Byte, Byte[])
  fullName: Meadow.Hardware.Communications.SoftwareI2C.WriteRegisters(System.Byte, System.Byte[])
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WriteRegisters
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 151
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public void WriteRegisters(byte address, byte[] data)
    parameters:
    - id: address
      type: System.Byte
    - id: data
      type: System.Byte[]
    content.vb: Public Sub WriteRegisters(address As Byte, data As Byte())
  overload: Meadow.Hardware.Communications.SoftwareI2C.WriteRegisters*
  implements:
  - Meadow.Hardware.Communications.ICommunicationBus.WriteRegisters(System.Byte,System.Byte[])
  nameWithType.vb: SoftwareI2C.WriteRegisters(Byte, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Hardware.Communications.SoftwareI2C.WriteRegisters(System.Byte, System.Byte())
  name.vb: WriteRegisters(Byte, Byte())
- uid: Meadow.Hardware.Communications.SoftwareI2C.WriteRead(System.Byte[],System.UInt16)
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.WriteRead(System.Byte[],System.UInt16)
  id: WriteRead(System.Byte[],System.UInt16)
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: WriteRead(Byte[], UInt16)
  nameWithType: SoftwareI2C.WriteRead(Byte[], UInt16)
  fullName: Meadow.Hardware.Communications.SoftwareI2C.WriteRead(System.Byte[], System.UInt16)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WriteRead
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 156
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public byte[] WriteRead(byte[] write, ushort length)
    parameters:
    - id: write
      type: System.Byte[]
    - id: length
      type: System.UInt16
    return:
      type: System.Byte[]
    content.vb: Public Function WriteRead(write As Byte(), length As UShort) As Byte()
  overload: Meadow.Hardware.Communications.SoftwareI2C.WriteRead*
  implements:
  - Meadow.Hardware.Communications.ICommunicationBus.WriteRead(System.Byte[],System.UInt16)
  nameWithType.vb: SoftwareI2C.WriteRead(Byte(), UInt16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Hardware.Communications.SoftwareI2C.WriteRead(System.Byte(), System.UInt16)
  name.vb: WriteRead(Byte(), UInt16)
- uid: Meadow.Hardware.Communications.SoftwareI2C.ReadBytes(System.UInt16)
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.ReadBytes(System.UInt16)
  id: ReadBytes(System.UInt16)
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: ReadBytes(UInt16)
  nameWithType: SoftwareI2C.ReadBytes(UInt16)
  fullName: Meadow.Hardware.Communications.SoftwareI2C.ReadBytes(System.UInt16)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: ReadBytes
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 161
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public byte[] ReadBytes(ushort numberOfBytes)
    parameters:
    - id: numberOfBytes
      type: System.UInt16
    return:
      type: System.Byte[]
    content.vb: Public Function ReadBytes(numberOfBytes As UShort) As Byte()
  overload: Meadow.Hardware.Communications.SoftwareI2C.ReadBytes*
  implements:
  - Meadow.Hardware.Communications.ICommunicationBus.ReadBytes(System.UInt16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.Communications.SoftwareI2C.ReadRegister(System.Byte)
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.ReadRegister(System.Byte)
  id: ReadRegister(System.Byte)
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: ReadRegister(Byte)
  nameWithType: SoftwareI2C.ReadRegister(Byte)
  fullName: Meadow.Hardware.Communications.SoftwareI2C.ReadRegister(System.Byte)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: ReadRegister
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 172
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public byte ReadRegister(byte address)
    parameters:
    - id: address
      type: System.Byte
    return:
      type: System.Byte
    content.vb: Public Function ReadRegister(address As Byte) As Byte
  overload: Meadow.Hardware.Communications.SoftwareI2C.ReadRegister*
  implements:
  - Meadow.Hardware.Communications.ICommunicationBus.ReadRegister(System.Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.Communications.SoftwareI2C.ReadRegisters(System.Byte,System.UInt16)
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.ReadRegisters(System.Byte,System.UInt16)
  id: ReadRegisters(System.Byte,System.UInt16)
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: ReadRegisters(Byte, UInt16)
  nameWithType: SoftwareI2C.ReadRegisters(Byte, UInt16)
  fullName: Meadow.Hardware.Communications.SoftwareI2C.ReadRegisters(System.Byte, System.UInt16)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: ReadRegisters
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 177
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public byte[] ReadRegisters(byte address, ushort length)
    parameters:
    - id: address
      type: System.Byte
    - id: length
      type: System.UInt16
    return:
      type: System.Byte[]
    content.vb: Public Function ReadRegisters(address As Byte, length As UShort) As Byte()
  overload: Meadow.Hardware.Communications.SoftwareI2C.ReadRegisters*
  implements:
  - Meadow.Hardware.Communications.ICommunicationBus.ReadRegisters(System.Byte,System.UInt16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.Communications.SoftwareI2C.ReadUShort(System.Byte,Meadow.ByteOrder)
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.ReadUShort(System.Byte,Meadow.ByteOrder)
  id: ReadUShort(System.Byte,Meadow.ByteOrder)
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: ReadUShort(Byte, ByteOrder)
  nameWithType: SoftwareI2C.ReadUShort(Byte, ByteOrder)
  fullName: Meadow.Hardware.Communications.SoftwareI2C.ReadUShort(System.Byte, Meadow.ByteOrder)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: ReadUShort
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 182
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public ushort ReadUShort(byte address, ByteOrder order)
    parameters:
    - id: address
      type: System.Byte
    - id: order
      type: Meadow.ByteOrder
    return:
      type: System.UInt16
    content.vb: Public Function ReadUShort(address As Byte, order As ByteOrder) As UShort
  overload: Meadow.Hardware.Communications.SoftwareI2C.ReadUShort*
  implements:
  - Meadow.Hardware.Communications.ICommunicationBus.ReadUShort(System.Byte,Meadow.ByteOrder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.Communications.SoftwareI2C.ReadUShorts(System.Byte,System.UInt16,Meadow.ByteOrder)
  commentId: M:Meadow.Hardware.Communications.SoftwareI2C.ReadUShorts(System.Byte,System.UInt16,Meadow.ByteOrder)
  id: ReadUShorts(System.Byte,System.UInt16,Meadow.ByteOrder)
  parent: Meadow.Hardware.Communications.SoftwareI2C
  langs:
  - csharp
  - vb
  name: ReadUShorts(Byte, UInt16, ByteOrder)
  nameWithType: SoftwareI2C.ReadUShorts(Byte, UInt16, ByteOrder)
  fullName: Meadow.Hardware.Communications.SoftwareI2C.ReadUShorts(System.Byte, System.UInt16, Meadow.ByteOrder)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: ReadUShorts
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Communications/SoftwareI2C.cs
    startLine: 187
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware.Communications
  syntax:
    content: public ushort[] ReadUShorts(byte address, ushort number, ByteOrder order = ByteOrder.LittleEndian)
    parameters:
    - id: address
      type: System.Byte
    - id: number
      type: System.UInt16
    - id: order
      type: Meadow.ByteOrder
    return:
      type: System.UInt16[]
    content.vb: Public Function ReadUShorts(address As Byte, number As UShort, order As ByteOrder = ByteOrder.LittleEndian) As UShort()
  overload: Meadow.Hardware.Communications.SoftwareI2C.ReadUShorts*
  implements:
  - Meadow.Hardware.Communications.ICommunicationBus.ReadUShorts(System.Byte,System.UInt16,Meadow.ByteOrder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Meadow.Hardware.Communications
  commentId: N:Meadow.Hardware.Communications
  name: Meadow.Hardware.Communications
  nameWithType: Meadow.Hardware.Communications
  fullName: Meadow.Hardware.Communications
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Meadow.Hardware.Communications.ICommunicationBus
  commentId: T:Meadow.Hardware.Communications.ICommunicationBus
  parent: Meadow.Hardware.Communications
  name: ICommunicationBus
  nameWithType: ICommunicationBus
  fullName: Meadow.Hardware.Communications.ICommunicationBus
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Meadow.Hardware.Communications.SoftwareI2C.#ctor*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.#ctor
  name: SoftwareI2C
  nameWithType: SoftwareI2C.SoftwareI2C
  fullName: Meadow.Hardware.Communications.SoftwareI2C.SoftwareI2C
- uid: Meadow.Hardware.IDigitalPin
  commentId: T:Meadow.Hardware.IDigitalPin
  parent: Meadow.Hardware
  name: IDigitalPin
  nameWithType: IDigitalPin
  fullName: Meadow.Hardware.IDigitalPin
- uid: Meadow.Hardware
  commentId: N:Meadow.Hardware
  name: Meadow.Hardware
  nameWithType: Meadow.Hardware
  fullName: Meadow.Hardware
- uid: Meadow.Hardware.Communications.SoftwareI2C.Start*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.Start
  name: Start
  nameWithType: SoftwareI2C.Start
  fullName: Meadow.Hardware.Communications.SoftwareI2C.Start
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Meadow.Hardware.Communications.SoftwareI2C.Stop*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.Stop
  name: Stop
  nameWithType: SoftwareI2C.Stop
  fullName: Meadow.Hardware.Communications.SoftwareI2C.Stop
- uid: Meadow.Hardware.Communications.SoftwareI2C.WriteByte*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.WriteByte
  name: WriteByte
  nameWithType: SoftwareI2C.WriteByte
  fullName: Meadow.Hardware.Communications.SoftwareI2C.WriteByte
- uid: Meadow.Hardware.Communications.ICommunicationBus.WriteByte(System.Byte)
  commentId: M:Meadow.Hardware.Communications.ICommunicationBus.WriteByte(System.Byte)
  parent: Meadow.Hardware.Communications.ICommunicationBus
  isExternal: true
  name: WriteByte(Byte)
  nameWithType: ICommunicationBus.WriteByte(Byte)
  fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteByte(System.Byte)
  spec.csharp:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.WriteByte(System.Byte)
    name: WriteByte
    nameWithType: ICommunicationBus.WriteByte
    fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.WriteByte(System.Byte)
    name: WriteByte
    nameWithType: ICommunicationBus.WriteByte
    fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Hardware.Communications.SoftwareI2C.ReadByte*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.ReadByte
  name: ReadByte
  nameWithType: SoftwareI2C.ReadByte
  fullName: Meadow.Hardware.Communications.SoftwareI2C.ReadByte
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Meadow.Hardware.Communications.SoftwareI2C.WriteBytes*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.WriteBytes
  name: WriteBytes
  nameWithType: SoftwareI2C.WriteBytes
  fullName: Meadow.Hardware.Communications.SoftwareI2C.WriteBytes
- uid: Meadow.Hardware.Communications.ICommunicationBus.WriteBytes(System.Byte[])
  commentId: M:Meadow.Hardware.Communications.ICommunicationBus.WriteBytes(System.Byte[])
  parent: Meadow.Hardware.Communications.ICommunicationBus
  isExternal: true
  name: WriteBytes(Byte[])
  nameWithType: ICommunicationBus.WriteBytes(Byte[])
  fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteBytes(System.Byte[])
  nameWithType.vb: ICommunicationBus.WriteBytes(Byte())
  fullName.vb: Meadow.Hardware.Communications.ICommunicationBus.WriteBytes(System.Byte())
  name.vb: WriteBytes(Byte())
  spec.csharp:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.WriteBytes(System.Byte[])
    name: WriteBytes
    nameWithType: ICommunicationBus.WriteBytes
    fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.WriteBytes(System.Byte[])
    name: WriteBytes
    nameWithType: ICommunicationBus.WriteBytes
    fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Meadow.Hardware.Communications.SoftwareI2C.WriteUShort*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.WriteUShort
  name: WriteUShort
  nameWithType: SoftwareI2C.WriteUShort
  fullName: Meadow.Hardware.Communications.SoftwareI2C.WriteUShort
- uid: Meadow.Hardware.Communications.ICommunicationBus.WriteUShort(System.Byte,System.UInt16,Meadow.ByteOrder)
  commentId: M:Meadow.Hardware.Communications.ICommunicationBus.WriteUShort(System.Byte,System.UInt16,Meadow.ByteOrder)
  parent: Meadow.Hardware.Communications.ICommunicationBus
  isExternal: true
  name: WriteUShort(Byte, UInt16, ByteOrder)
  nameWithType: ICommunicationBus.WriteUShort(Byte, UInt16, ByteOrder)
  fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteUShort(System.Byte, System.UInt16, Meadow.ByteOrder)
  spec.csharp:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.WriteUShort(System.Byte,System.UInt16,Meadow.ByteOrder)
    name: WriteUShort
    nameWithType: ICommunicationBus.WriteUShort
    fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteUShort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.ByteOrder
    name: ByteOrder
    nameWithType: ByteOrder
    fullName: Meadow.ByteOrder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.WriteUShort(System.Byte,System.UInt16,Meadow.ByteOrder)
    name: WriteUShort
    nameWithType: ICommunicationBus.WriteUShort
    fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteUShort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.ByteOrder
    name: ByteOrder
    nameWithType: ByteOrder
    fullName: Meadow.ByteOrder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Meadow.ByteOrder
  commentId: T:Meadow.ByteOrder
  parent: Meadow
  name: ByteOrder
  nameWithType: ByteOrder
  fullName: Meadow.ByteOrder
- uid: Meadow
  commentId: N:Meadow
  name: Meadow
  nameWithType: Meadow
  fullName: Meadow
- uid: Meadow.Hardware.Communications.SoftwareI2C.WriteUShorts*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.WriteUShorts
  name: WriteUShorts
  nameWithType: SoftwareI2C.WriteUShorts
  fullName: Meadow.Hardware.Communications.SoftwareI2C.WriteUShorts
- uid: Meadow.Hardware.Communications.ICommunicationBus.WriteUShorts(System.Byte,System.UInt16[],Meadow.ByteOrder)
  commentId: M:Meadow.Hardware.Communications.ICommunicationBus.WriteUShorts(System.Byte,System.UInt16[],Meadow.ByteOrder)
  parent: Meadow.Hardware.Communications.ICommunicationBus
  isExternal: true
  name: WriteUShorts(Byte, UInt16[], ByteOrder)
  nameWithType: ICommunicationBus.WriteUShorts(Byte, UInt16[], ByteOrder)
  fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteUShorts(System.Byte, System.UInt16[], Meadow.ByteOrder)
  nameWithType.vb: ICommunicationBus.WriteUShorts(Byte, UInt16(), ByteOrder)
  fullName.vb: Meadow.Hardware.Communications.ICommunicationBus.WriteUShorts(System.Byte, System.UInt16(), Meadow.ByteOrder)
  name.vb: WriteUShorts(Byte, UInt16(), ByteOrder)
  spec.csharp:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.WriteUShorts(System.Byte,System.UInt16[],Meadow.ByteOrder)
    name: WriteUShorts
    nameWithType: ICommunicationBus.WriteUShorts
    fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteUShorts
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.ByteOrder
    name: ByteOrder
    nameWithType: ByteOrder
    fullName: Meadow.ByteOrder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.WriteUShorts(System.Byte,System.UInt16[],Meadow.ByteOrder)
    name: WriteUShorts
    nameWithType: ICommunicationBus.WriteUShorts
    fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteUShorts
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.ByteOrder
    name: ByteOrder
    nameWithType: ByteOrder
    fullName: Meadow.ByteOrder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt16[]
  isExternal: true
  name: UInt16[]
  nameWithType: UInt16[]
  fullName: System.UInt16[]
  nameWithType.vb: UInt16()
  fullName.vb: System.UInt16()
  name.vb: UInt16()
  spec.csharp:
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Meadow.Hardware.Communications.SoftwareI2C.WriteRegister*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.WriteRegister
  name: WriteRegister
  nameWithType: SoftwareI2C.WriteRegister
  fullName: Meadow.Hardware.Communications.SoftwareI2C.WriteRegister
- uid: Meadow.Hardware.Communications.ICommunicationBus.WriteRegister(System.Byte,System.Byte)
  commentId: M:Meadow.Hardware.Communications.ICommunicationBus.WriteRegister(System.Byte,System.Byte)
  parent: Meadow.Hardware.Communications.ICommunicationBus
  isExternal: true
  name: WriteRegister(Byte, Byte)
  nameWithType: ICommunicationBus.WriteRegister(Byte, Byte)
  fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteRegister(System.Byte, System.Byte)
  spec.csharp:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.WriteRegister(System.Byte,System.Byte)
    name: WriteRegister
    nameWithType: ICommunicationBus.WriteRegister
    fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteRegister
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.WriteRegister(System.Byte,System.Byte)
    name: WriteRegister
    nameWithType: ICommunicationBus.WriteRegister
    fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteRegister
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Hardware.Communications.SoftwareI2C.WriteRegisters*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.WriteRegisters
  name: WriteRegisters
  nameWithType: SoftwareI2C.WriteRegisters
  fullName: Meadow.Hardware.Communications.SoftwareI2C.WriteRegisters
- uid: Meadow.Hardware.Communications.ICommunicationBus.WriteRegisters(System.Byte,System.Byte[])
  commentId: M:Meadow.Hardware.Communications.ICommunicationBus.WriteRegisters(System.Byte,System.Byte[])
  parent: Meadow.Hardware.Communications.ICommunicationBus
  isExternal: true
  name: WriteRegisters(Byte, Byte[])
  nameWithType: ICommunicationBus.WriteRegisters(Byte, Byte[])
  fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteRegisters(System.Byte, System.Byte[])
  nameWithType.vb: ICommunicationBus.WriteRegisters(Byte, Byte())
  fullName.vb: Meadow.Hardware.Communications.ICommunicationBus.WriteRegisters(System.Byte, System.Byte())
  name.vb: WriteRegisters(Byte, Byte())
  spec.csharp:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.WriteRegisters(System.Byte,System.Byte[])
    name: WriteRegisters
    nameWithType: ICommunicationBus.WriteRegisters
    fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteRegisters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.WriteRegisters(System.Byte,System.Byte[])
    name: WriteRegisters
    nameWithType: ICommunicationBus.WriteRegisters
    fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteRegisters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Hardware.Communications.SoftwareI2C.WriteRead*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.WriteRead
  name: WriteRead
  nameWithType: SoftwareI2C.WriteRead
  fullName: Meadow.Hardware.Communications.SoftwareI2C.WriteRead
- uid: Meadow.Hardware.Communications.ICommunicationBus.WriteRead(System.Byte[],System.UInt16)
  commentId: M:Meadow.Hardware.Communications.ICommunicationBus.WriteRead(System.Byte[],System.UInt16)
  parent: Meadow.Hardware.Communications.ICommunicationBus
  isExternal: true
  name: WriteRead(Byte[], UInt16)
  nameWithType: ICommunicationBus.WriteRead(Byte[], UInt16)
  fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteRead(System.Byte[], System.UInt16)
  nameWithType.vb: ICommunicationBus.WriteRead(Byte(), UInt16)
  fullName.vb: Meadow.Hardware.Communications.ICommunicationBus.WriteRead(System.Byte(), System.UInt16)
  name.vb: WriteRead(Byte(), UInt16)
  spec.csharp:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.WriteRead(System.Byte[],System.UInt16)
    name: WriteRead
    nameWithType: ICommunicationBus.WriteRead
    fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteRead
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.WriteRead(System.Byte[],System.UInt16)
    name: WriteRead
    nameWithType: ICommunicationBus.WriteRead
    fullName: Meadow.Hardware.Communications.ICommunicationBus.WriteRead
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Hardware.Communications.SoftwareI2C.ReadBytes*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.ReadBytes
  name: ReadBytes
  nameWithType: SoftwareI2C.ReadBytes
  fullName: Meadow.Hardware.Communications.SoftwareI2C.ReadBytes
- uid: Meadow.Hardware.Communications.ICommunicationBus.ReadBytes(System.UInt16)
  commentId: M:Meadow.Hardware.Communications.ICommunicationBus.ReadBytes(System.UInt16)
  parent: Meadow.Hardware.Communications.ICommunicationBus
  isExternal: true
  name: ReadBytes(UInt16)
  nameWithType: ICommunicationBus.ReadBytes(UInt16)
  fullName: Meadow.Hardware.Communications.ICommunicationBus.ReadBytes(System.UInt16)
  spec.csharp:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.ReadBytes(System.UInt16)
    name: ReadBytes
    nameWithType: ICommunicationBus.ReadBytes
    fullName: Meadow.Hardware.Communications.ICommunicationBus.ReadBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.ReadBytes(System.UInt16)
    name: ReadBytes
    nameWithType: ICommunicationBus.ReadBytes
    fullName: Meadow.Hardware.Communications.ICommunicationBus.ReadBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Hardware.Communications.SoftwareI2C.ReadRegister*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.ReadRegister
  name: ReadRegister
  nameWithType: SoftwareI2C.ReadRegister
  fullName: Meadow.Hardware.Communications.SoftwareI2C.ReadRegister
- uid: Meadow.Hardware.Communications.ICommunicationBus.ReadRegister(System.Byte)
  commentId: M:Meadow.Hardware.Communications.ICommunicationBus.ReadRegister(System.Byte)
  parent: Meadow.Hardware.Communications.ICommunicationBus
  isExternal: true
  name: ReadRegister(Byte)
  nameWithType: ICommunicationBus.ReadRegister(Byte)
  fullName: Meadow.Hardware.Communications.ICommunicationBus.ReadRegister(System.Byte)
  spec.csharp:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.ReadRegister(System.Byte)
    name: ReadRegister
    nameWithType: ICommunicationBus.ReadRegister
    fullName: Meadow.Hardware.Communications.ICommunicationBus.ReadRegister
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.ReadRegister(System.Byte)
    name: ReadRegister
    nameWithType: ICommunicationBus.ReadRegister
    fullName: Meadow.Hardware.Communications.ICommunicationBus.ReadRegister
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Hardware.Communications.SoftwareI2C.ReadRegisters*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.ReadRegisters
  name: ReadRegisters
  nameWithType: SoftwareI2C.ReadRegisters
  fullName: Meadow.Hardware.Communications.SoftwareI2C.ReadRegisters
- uid: Meadow.Hardware.Communications.ICommunicationBus.ReadRegisters(System.Byte,System.UInt16)
  commentId: M:Meadow.Hardware.Communications.ICommunicationBus.ReadRegisters(System.Byte,System.UInt16)
  parent: Meadow.Hardware.Communications.ICommunicationBus
  isExternal: true
  name: ReadRegisters(Byte, UInt16)
  nameWithType: ICommunicationBus.ReadRegisters(Byte, UInt16)
  fullName: Meadow.Hardware.Communications.ICommunicationBus.ReadRegisters(System.Byte, System.UInt16)
  spec.csharp:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.ReadRegisters(System.Byte,System.UInt16)
    name: ReadRegisters
    nameWithType: ICommunicationBus.ReadRegisters
    fullName: Meadow.Hardware.Communications.ICommunicationBus.ReadRegisters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.ReadRegisters(System.Byte,System.UInt16)
    name: ReadRegisters
    nameWithType: ICommunicationBus.ReadRegisters
    fullName: Meadow.Hardware.Communications.ICommunicationBus.ReadRegisters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Hardware.Communications.SoftwareI2C.ReadUShort*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.ReadUShort
  name: ReadUShort
  nameWithType: SoftwareI2C.ReadUShort
  fullName: Meadow.Hardware.Communications.SoftwareI2C.ReadUShort
- uid: Meadow.Hardware.Communications.ICommunicationBus.ReadUShort(System.Byte,Meadow.ByteOrder)
  commentId: M:Meadow.Hardware.Communications.ICommunicationBus.ReadUShort(System.Byte,Meadow.ByteOrder)
  parent: Meadow.Hardware.Communications.ICommunicationBus
  isExternal: true
  name: ReadUShort(Byte, ByteOrder)
  nameWithType: ICommunicationBus.ReadUShort(Byte, ByteOrder)
  fullName: Meadow.Hardware.Communications.ICommunicationBus.ReadUShort(System.Byte, Meadow.ByteOrder)
  spec.csharp:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.ReadUShort(System.Byte,Meadow.ByteOrder)
    name: ReadUShort
    nameWithType: ICommunicationBus.ReadUShort
    fullName: Meadow.Hardware.Communications.ICommunicationBus.ReadUShort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.ByteOrder
    name: ByteOrder
    nameWithType: ByteOrder
    fullName: Meadow.ByteOrder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.ReadUShort(System.Byte,Meadow.ByteOrder)
    name: ReadUShort
    nameWithType: ICommunicationBus.ReadUShort
    fullName: Meadow.Hardware.Communications.ICommunicationBus.ReadUShort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.ByteOrder
    name: ByteOrder
    nameWithType: ByteOrder
    fullName: Meadow.ByteOrder
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Hardware.Communications.SoftwareI2C.ReadUShorts*
  commentId: Overload:Meadow.Hardware.Communications.SoftwareI2C.ReadUShorts
  name: ReadUShorts
  nameWithType: SoftwareI2C.ReadUShorts
  fullName: Meadow.Hardware.Communications.SoftwareI2C.ReadUShorts
- uid: Meadow.Hardware.Communications.ICommunicationBus.ReadUShorts(System.Byte,System.UInt16,Meadow.ByteOrder)
  commentId: M:Meadow.Hardware.Communications.ICommunicationBus.ReadUShorts(System.Byte,System.UInt16,Meadow.ByteOrder)
  parent: Meadow.Hardware.Communications.ICommunicationBus
  isExternal: true
  name: ReadUShorts(Byte, UInt16, ByteOrder)
  nameWithType: ICommunicationBus.ReadUShorts(Byte, UInt16, ByteOrder)
  fullName: Meadow.Hardware.Communications.ICommunicationBus.ReadUShorts(System.Byte, System.UInt16, Meadow.ByteOrder)
  spec.csharp:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.ReadUShorts(System.Byte,System.UInt16,Meadow.ByteOrder)
    name: ReadUShorts
    nameWithType: ICommunicationBus.ReadUShorts
    fullName: Meadow.Hardware.Communications.ICommunicationBus.ReadUShorts
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.ByteOrder
    name: ByteOrder
    nameWithType: ByteOrder
    fullName: Meadow.ByteOrder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Meadow.Hardware.Communications.ICommunicationBus.ReadUShorts(System.Byte,System.UInt16,Meadow.ByteOrder)
    name: ReadUShorts
    nameWithType: ICommunicationBus.ReadUShorts
    fullName: Meadow.Hardware.Communications.ICommunicationBus.ReadUShorts
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Meadow.ByteOrder
    name: ByteOrder
    nameWithType: ByteOrder
    fullName: Meadow.ByteOrder
  - name: )
    nameWithType: )
    fullName: )
