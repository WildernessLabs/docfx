### YamlMime:ManagedReference
items:
- uid: Meadow.WakeUpOptions
  commentId: T:Meadow.WakeUpOptions
  id: WakeUpOptions
  parent: Meadow
  children:
  - Meadow.WakeUpOptions.#ctor
  - Meadow.WakeUpOptions.SleepDuration
  - Meadow.WakeUpOptions.SleepUntil
  - Meadow.WakeUpOptions.WakeOnInterruptPorts
  - Meadow.WakeUpOptions.WakeOnNetwork
  langs:
  - csharp
  - vb
  name: WakeUpOptions
  nameWithType: WakeUpOptions
  fullName: Meadow.WakeUpOptions
  type: Class
  source:
    remote:
      path: source/Meadow.Core/WakeUpOptions.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WakeUpOptions
    path: ../Meadow.Core/source/Meadow.Core/WakeUpOptions.cs
    startLine: 6
  assemblies:
  - Meadow.Core
  namespace: Meadow
  syntax:
    content: public class WakeUpOptions
    content.vb: Public Class WakeUpOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Meadow.WakeUpOptions.SleepUntil
  commentId: P:Meadow.WakeUpOptions.SleepUntil
  id: SleepUntil
  parent: Meadow.WakeUpOptions
  langs:
  - csharp
  - vb
  name: SleepUntil
  nameWithType: WakeUpOptions.SleepUntil
  fullName: Meadow.WakeUpOptions.SleepUntil
  type: Property
  source:
    remote:
      path: source/Meadow.Core/WakeUpOptions.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: SleepUntil
    path: ../Meadow.Core/source/Meadow.Core/WakeUpOptions.cs
    startLine: 8
  assemblies:
  - Meadow.Core
  namespace: Meadow
  syntax:
    content: public DateTime SleepUntil { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property SleepUntil As Date
  overload: Meadow.WakeUpOptions.SleepUntil*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.WakeUpOptions.SleepDuration
  commentId: P:Meadow.WakeUpOptions.SleepDuration
  id: SleepDuration
  parent: Meadow.WakeUpOptions
  langs:
  - csharp
  - vb
  name: SleepDuration
  nameWithType: WakeUpOptions.SleepDuration
  fullName: Meadow.WakeUpOptions.SleepDuration
  type: Property
  source:
    remote:
      path: source/Meadow.Core/WakeUpOptions.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: SleepDuration
    path: ../Meadow.Core/source/Meadow.Core/WakeUpOptions.cs
    startLine: 9
  assemblies:
  - Meadow.Core
  namespace: Meadow
  syntax:
    content: public TimeSpan SleepDuration { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property SleepDuration As TimeSpan
  overload: Meadow.WakeUpOptions.SleepDuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.WakeUpOptions.WakeOnNetwork
  commentId: P:Meadow.WakeUpOptions.WakeOnNetwork
  id: WakeOnNetwork
  parent: Meadow.WakeUpOptions
  langs:
  - csharp
  - vb
  name: WakeOnNetwork
  nameWithType: WakeUpOptions.WakeOnNetwork
  fullName: Meadow.WakeUpOptions.WakeOnNetwork
  type: Property
  source:
    remote:
      path: source/Meadow.Core/WakeUpOptions.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WakeOnNetwork
    path: ../Meadow.Core/source/Meadow.Core/WakeUpOptions.cs
    startLine: 10
  assemblies:
  - Meadow.Core
  namespace: Meadow
  syntax:
    content: public bool WakeOnNetwork { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property WakeOnNetwork As Boolean
  overload: Meadow.WakeUpOptions.WakeOnNetwork*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.WakeUpOptions.WakeOnInterruptPorts
  commentId: P:Meadow.WakeUpOptions.WakeOnInterruptPorts
  id: WakeOnInterruptPorts
  parent: Meadow.WakeUpOptions
  langs:
  - csharp
  - vb
  name: WakeOnInterruptPorts
  nameWithType: WakeUpOptions.WakeOnInterruptPorts
  fullName: Meadow.WakeUpOptions.WakeOnInterruptPorts
  type: Property
  source:
    remote:
      path: source/Meadow.Core/WakeUpOptions.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WakeOnInterruptPorts
    path: ../Meadow.Core/source/Meadow.Core/WakeUpOptions.cs
    startLine: 11
  assemblies:
  - Meadow.Core
  namespace: Meadow
  syntax:
    content: public List<IDigitalInterruptPort> WakeOnInterruptPorts { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Meadow.Hardware.IDigitalInterruptPort}
    content.vb: Public ReadOnly Property WakeOnInterruptPorts As List(Of IDigitalInterruptPort)
  overload: Meadow.WakeUpOptions.WakeOnInterruptPorts*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.WakeUpOptions.#ctor
  commentId: M:Meadow.WakeUpOptions.#ctor
  id: '#ctor'
  parent: Meadow.WakeUpOptions
  langs:
  - csharp
  - vb
  name: WakeUpOptions()
  nameWithType: WakeUpOptions.WakeUpOptions()
  fullName: Meadow.WakeUpOptions.WakeUpOptions()
  type: Constructor
  source:
    remote:
      path: source/Meadow.Core/WakeUpOptions.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: .ctor
    path: ../Meadow.Core/source/Meadow.Core/WakeUpOptions.cs
    startLine: 13
  assemblies:
  - Meadow.Core
  namespace: Meadow
  syntax:
    content: public WakeUpOptions()
    content.vb: Public Sub New
  overload: Meadow.WakeUpOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Meadow
  commentId: N:Meadow
  name: Meadow
  nameWithType: Meadow
  fullName: Meadow
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Meadow.WakeUpOptions.SleepUntil*
  commentId: Overload:Meadow.WakeUpOptions.SleepUntil
  name: SleepUntil
  nameWithType: WakeUpOptions.SleepUntil
  fullName: Meadow.WakeUpOptions.SleepUntil
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Meadow.WakeUpOptions.SleepDuration*
  commentId: Overload:Meadow.WakeUpOptions.SleepDuration
  name: SleepDuration
  nameWithType: WakeUpOptions.SleepDuration
  fullName: Meadow.WakeUpOptions.SleepDuration
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Meadow.WakeUpOptions.WakeOnNetwork*
  commentId: Overload:Meadow.WakeUpOptions.WakeOnNetwork
  name: WakeOnNetwork
  nameWithType: WakeUpOptions.WakeOnNetwork
  fullName: Meadow.WakeUpOptions.WakeOnNetwork
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Meadow.WakeUpOptions.WakeOnInterruptPorts*
  commentId: Overload:Meadow.WakeUpOptions.WakeOnInterruptPorts
  name: WakeOnInterruptPorts
  nameWithType: WakeUpOptions.WakeOnInterruptPorts
  fullName: Meadow.WakeUpOptions.WakeOnInterruptPorts
- uid: System.Collections.Generic.List{Meadow.Hardware.IDigitalInterruptPort}
  commentId: T:System.Collections.Generic.List{Meadow.Hardware.IDigitalInterruptPort}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IDigitalInterruptPort>
  nameWithType: List<IDigitalInterruptPort>
  fullName: System.Collections.Generic.List<Meadow.Hardware.IDigitalInterruptPort>
  nameWithType.vb: List(Of IDigitalInterruptPort)
  fullName.vb: System.Collections.Generic.List(Of Meadow.Hardware.IDigitalInterruptPort)
  name.vb: List(Of IDigitalInterruptPort)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Meadow.Hardware.IDigitalInterruptPort
    name: IDigitalInterruptPort
    nameWithType: IDigitalInterruptPort
    fullName: Meadow.Hardware.IDigitalInterruptPort
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Meadow.Hardware.IDigitalInterruptPort
    name: IDigitalInterruptPort
    nameWithType: IDigitalInterruptPort
    fullName: Meadow.Hardware.IDigitalInterruptPort
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Meadow.WakeUpOptions.#ctor*
  commentId: Overload:Meadow.WakeUpOptions.#ctor
  name: WakeUpOptions
  nameWithType: WakeUpOptions.WakeUpOptions
  fullName: Meadow.WakeUpOptions.WakeUpOptions
