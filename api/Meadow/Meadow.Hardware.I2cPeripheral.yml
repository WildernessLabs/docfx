### YamlMime:ManagedReference
items:
- uid: Meadow.Hardware.I2cPeripheral
  commentId: T:Meadow.Hardware.I2cPeripheral
  id: I2cPeripheral
  parent: Meadow.Hardware
  children:
  - Meadow.Hardware.I2cPeripheral.#ctor(Meadow.Hardware.I2cPeripheral.Configuration)
  - Meadow.Hardware.I2cPeripheral.Config
  - Meadow.Hardware.I2cPeripheral.CreateReadTransaction(System.Byte[])
  - Meadow.Hardware.I2cPeripheral.CreateWriteTransaction(System.Byte[])
  - Meadow.Hardware.I2cPeripheral.Dispose
  - Meadow.Hardware.I2cPeripheral.Execute(Meadow.Hardware.I2cPeripheral.I2CTransaction[],System.Int32)
  - Meadow.Hardware.I2cPeripheral.Finalize
  - Meadow.Hardware.I2cPeripheral.m_disposed
  langs:
  - csharp
  - vb
  name: I2cPeripheral
  nameWithType: I2cPeripheral
  fullName: Meadow.Hardware.I2cPeripheral
  type: Class
  source:
    remote:
      path: source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: I2cPeripheral
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
    startLine: 8
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  summary: "\nDefines a contract for a peripheral that communicates via the IIC/I2C \nprotocol.\n"
  example: []
  syntax:
    content: 'public class I2cPeripheral : IDisposable'
    content.vb: >-
      Public Class I2cPeripheral

          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Meadow.Hardware.I2cPeripheral.Config
  commentId: F:Meadow.Hardware.I2cPeripheral.Config
  id: Config
  parent: Meadow.Hardware.I2cPeripheral
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: I2cPeripheral.Config
  fullName: Meadow.Hardware.I2cPeripheral.Config
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: Config
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
    startLine: 10
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public I2cPeripheral.Configuration Config
    return:
      type: Meadow.Hardware.I2cPeripheral.Configuration
    content.vb: Public Config As I2cPeripheral.Configuration
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.I2cPeripheral.m_disposed
  commentId: F:Meadow.Hardware.I2cPeripheral.m_disposed
  id: m_disposed
  parent: Meadow.Hardware.I2cPeripheral
  langs:
  - csharp
  - vb
  name: m_disposed
  nameWithType: I2cPeripheral.m_disposed
  fullName: Meadow.Hardware.I2cPeripheral.m_disposed
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: m_disposed
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
    startLine: 11
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: protected bool m_disposed
    return:
      type: System.Boolean
    content.vb: Protected m_disposed As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Hardware.I2cPeripheral.#ctor(Meadow.Hardware.I2cPeripheral.Configuration)
  commentId: M:Meadow.Hardware.I2cPeripheral.#ctor(Meadow.Hardware.I2cPeripheral.Configuration)
  id: '#ctor(Meadow.Hardware.I2cPeripheral.Configuration)'
  parent: Meadow.Hardware.I2cPeripheral
  langs:
  - csharp
  - vb
  name: I2cPeripheral(I2cPeripheral.Configuration)
  nameWithType: I2cPeripheral.I2cPeripheral(I2cPeripheral.Configuration)
  fullName: Meadow.Hardware.I2cPeripheral.I2cPeripheral(Meadow.Hardware.I2cPeripheral.Configuration)
  type: Constructor
  source:
    remote:
      path: source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: .ctor
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
    startLine: 13
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public I2cPeripheral(I2cPeripheral.Configuration config)
    parameters:
    - id: config
      type: Meadow.Hardware.I2cPeripheral.Configuration
    content.vb: Public Sub New(config As I2cPeripheral.Configuration)
  overload: Meadow.Hardware.I2cPeripheral.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.I2cPeripheral.Finalize
  commentId: M:Meadow.Hardware.I2cPeripheral.Finalize
  id: Finalize
  parent: Meadow.Hardware.I2cPeripheral
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: I2cPeripheral.Finalize()
  fullName: Meadow.Hardware.I2cPeripheral.Finalize()
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: Finalize
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
    startLine: 15
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Meadow.Hardware.I2cPeripheral.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Hardware.I2cPeripheral.CreateReadTransaction(System.Byte[])
  commentId: M:Meadow.Hardware.I2cPeripheral.CreateReadTransaction(System.Byte[])
  id: CreateReadTransaction(System.Byte[])
  parent: Meadow.Hardware.I2cPeripheral
  langs:
  - csharp
  - vb
  name: CreateReadTransaction(Byte[])
  nameWithType: I2cPeripheral.CreateReadTransaction(Byte[])
  fullName: Meadow.Hardware.I2cPeripheral.CreateReadTransaction(System.Byte[])
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: CreateReadTransaction
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
    startLine: 17
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public static I2cPeripheral.I2CReadTransaction CreateReadTransaction(byte[] buffer)
    parameters:
    - id: buffer
      type: System.Byte[]
    return:
      type: Meadow.Hardware.I2cPeripheral.I2CReadTransaction
    content.vb: Public Shared Function CreateReadTransaction(buffer As Byte()) As I2cPeripheral.I2CReadTransaction
  overload: Meadow.Hardware.I2cPeripheral.CreateReadTransaction*
  nameWithType.vb: I2cPeripheral.CreateReadTransaction(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Meadow.Hardware.I2cPeripheral.CreateReadTransaction(System.Byte())
  name.vb: CreateReadTransaction(Byte())
- uid: Meadow.Hardware.I2cPeripheral.CreateWriteTransaction(System.Byte[])
  commentId: M:Meadow.Hardware.I2cPeripheral.CreateWriteTransaction(System.Byte[])
  id: CreateWriteTransaction(System.Byte[])
  parent: Meadow.Hardware.I2cPeripheral
  langs:
  - csharp
  - vb
  name: CreateWriteTransaction(Byte[])
  nameWithType: I2cPeripheral.CreateWriteTransaction(Byte[])
  fullName: Meadow.Hardware.I2cPeripheral.CreateWriteTransaction(System.Byte[])
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: CreateWriteTransaction
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
    startLine: 18
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public static I2cPeripheral.I2CWriteTransaction CreateWriteTransaction(byte[] buffer)
    parameters:
    - id: buffer
      type: System.Byte[]
    return:
      type: Meadow.Hardware.I2cPeripheral.I2CWriteTransaction
    content.vb: Public Shared Function CreateWriteTransaction(buffer As Byte()) As I2cPeripheral.I2CWriteTransaction
  overload: Meadow.Hardware.I2cPeripheral.CreateWriteTransaction*
  nameWithType.vb: I2cPeripheral.CreateWriteTransaction(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Meadow.Hardware.I2cPeripheral.CreateWriteTransaction(System.Byte())
  name.vb: CreateWriteTransaction(Byte())
- uid: Meadow.Hardware.I2cPeripheral.Dispose
  commentId: M:Meadow.Hardware.I2cPeripheral.Dispose
  id: Dispose
  parent: Meadow.Hardware.I2cPeripheral
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: I2cPeripheral.Dispose()
  fullName: Meadow.Hardware.I2cPeripheral.Dispose()
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: Dispose
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
    startLine: 19
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Meadow.Hardware.I2cPeripheral.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.I2cPeripheral.Execute(Meadow.Hardware.I2cPeripheral.I2CTransaction[],System.Int32)
  commentId: M:Meadow.Hardware.I2cPeripheral.Execute(Meadow.Hardware.I2cPeripheral.I2CTransaction[],System.Int32)
  id: Execute(Meadow.Hardware.I2cPeripheral.I2CTransaction[],System.Int32)
  parent: Meadow.Hardware.I2cPeripheral
  langs:
  - csharp
  - vb
  name: Execute(I2cPeripheral.I2CTransaction[], Int32)
  nameWithType: I2cPeripheral.Execute(I2cPeripheral.I2CTransaction[], Int32)
  fullName: Meadow.Hardware.I2cPeripheral.Execute(Meadow.Hardware.I2cPeripheral.I2CTransaction[], System.Int32)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: Execute
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Contracts/I2cPeripheral.cs
    startLine: 20
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public int Execute(I2cPeripheral.I2CTransaction[] xActions, int timeout)
    parameters:
    - id: xActions
      type: Meadow.Hardware.I2cPeripheral.I2CTransaction[]
    - id: timeout
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Function Execute(xActions As I2cPeripheral.I2CTransaction(), timeout As Integer) As Integer
  overload: Meadow.Hardware.I2cPeripheral.Execute*
  nameWithType.vb: I2cPeripheral.Execute(I2cPeripheral.I2CTransaction(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Hardware.I2cPeripheral.Execute(Meadow.Hardware.I2cPeripheral.I2CTransaction(), System.Int32)
  name.vb: Execute(I2cPeripheral.I2CTransaction(), Int32)
references:
- uid: Meadow.Hardware
  commentId: N:Meadow.Hardware
  name: Meadow.Hardware
  nameWithType: Meadow.Hardware
  fullName: Meadow.Hardware
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Meadow.Hardware.I2cPeripheral.Configuration
  commentId: T:Meadow.Hardware.I2cPeripheral.Configuration
  parent: Meadow.Hardware
  name: I2cPeripheral.Configuration
  nameWithType: I2cPeripheral.Configuration
  fullName: Meadow.Hardware.I2cPeripheral.Configuration
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Meadow.Hardware.I2cPeripheral.#ctor*
  commentId: Overload:Meadow.Hardware.I2cPeripheral.#ctor
  name: I2cPeripheral
  nameWithType: I2cPeripheral.I2cPeripheral
  fullName: Meadow.Hardware.I2cPeripheral.I2cPeripheral
- uid: Meadow.Hardware.I2cPeripheral.Finalize*
  commentId: Overload:Meadow.Hardware.I2cPeripheral.Finalize
  name: Finalize
  nameWithType: I2cPeripheral.Finalize
  fullName: Meadow.Hardware.I2cPeripheral.Finalize
- uid: Meadow.Hardware.I2cPeripheral.CreateReadTransaction*
  commentId: Overload:Meadow.Hardware.I2cPeripheral.CreateReadTransaction
  name: CreateReadTransaction
  nameWithType: I2cPeripheral.CreateReadTransaction
  fullName: Meadow.Hardware.I2cPeripheral.CreateReadTransaction
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Meadow.Hardware.I2cPeripheral.I2CReadTransaction
  commentId: T:Meadow.Hardware.I2cPeripheral.I2CReadTransaction
  parent: Meadow.Hardware
  name: I2cPeripheral.I2CReadTransaction
  nameWithType: I2cPeripheral.I2CReadTransaction
  fullName: Meadow.Hardware.I2cPeripheral.I2CReadTransaction
- uid: Meadow.Hardware.I2cPeripheral.CreateWriteTransaction*
  commentId: Overload:Meadow.Hardware.I2cPeripheral.CreateWriteTransaction
  name: CreateWriteTransaction
  nameWithType: I2cPeripheral.CreateWriteTransaction
  fullName: Meadow.Hardware.I2cPeripheral.CreateWriteTransaction
- uid: Meadow.Hardware.I2cPeripheral.I2CWriteTransaction
  commentId: T:Meadow.Hardware.I2cPeripheral.I2CWriteTransaction
  parent: Meadow.Hardware
  name: I2cPeripheral.I2CWriteTransaction
  nameWithType: I2cPeripheral.I2CWriteTransaction
  fullName: Meadow.Hardware.I2cPeripheral.I2CWriteTransaction
- uid: Meadow.Hardware.I2cPeripheral.Dispose*
  commentId: Overload:Meadow.Hardware.I2cPeripheral.Dispose
  name: Dispose
  nameWithType: I2cPeripheral.Dispose
  fullName: Meadow.Hardware.I2cPeripheral.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Hardware.I2cPeripheral.Execute*
  commentId: Overload:Meadow.Hardware.I2cPeripheral.Execute
  name: Execute
  nameWithType: I2cPeripheral.Execute
  fullName: Meadow.Hardware.I2cPeripheral.Execute
- uid: Meadow.Hardware.I2cPeripheral.I2CTransaction[]
  isExternal: true
  name: I2cPeripheral.I2CTransaction[]
  nameWithType: I2cPeripheral.I2CTransaction[]
  fullName: Meadow.Hardware.I2cPeripheral.I2CTransaction[]
  nameWithType.vb: I2cPeripheral.I2CTransaction()
  fullName.vb: Meadow.Hardware.I2cPeripheral.I2CTransaction()
  name.vb: I2cPeripheral.I2CTransaction()
  spec.csharp:
  - uid: Meadow.Hardware.I2cPeripheral.I2CTransaction
    name: I2cPeripheral.I2CTransaction
    nameWithType: I2cPeripheral.I2CTransaction
    fullName: Meadow.Hardware.I2cPeripheral.I2CTransaction
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Meadow.Hardware.I2cPeripheral.I2CTransaction
    name: I2cPeripheral.I2CTransaction
    nameWithType: I2cPeripheral.I2CTransaction
    fullName: Meadow.Hardware.I2cPeripheral.I2CTransaction
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
