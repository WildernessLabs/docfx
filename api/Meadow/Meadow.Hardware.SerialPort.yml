### YamlMime:ManagedReference
items:
- uid: Meadow.Hardware.SerialPort
  commentId: T:Meadow.Hardware.SerialPort
  id: SerialPort
  parent: Meadow.Hardware
  children:
  - Meadow.Hardware.SerialPort.#ctor(System.String)
  - Meadow.Hardware.SerialPort.#ctor(System.String,System.Int32)
  - Meadow.Hardware.SerialPort.#ctor(System.String,System.Int32,Meadow.Hardware.Parity)
  - Meadow.Hardware.SerialPort.#ctor(System.String,System.Int32,Meadow.Hardware.Parity,System.Int32)
  - Meadow.Hardware.SerialPort.#ctor(System.String,System.Int32,Meadow.Hardware.Parity,System.Int32,Meadow.Hardware.StopBits)
  - Meadow.Hardware.SerialPort.BaseStream
  - Meadow.Hardware.SerialPort.BaudRate
  - Meadow.Hardware.SerialPort.BytesToRead
  - Meadow.Hardware.SerialPort.BytesToWrite
  - Meadow.Hardware.SerialPort.CanRead
  - Meadow.Hardware.SerialPort.CanSeek
  - Meadow.Hardware.SerialPort.CanWrite
  - Meadow.Hardware.SerialPort.DataBits
  - Meadow.Hardware.SerialPort.DataReceived
  - Meadow.Hardware.SerialPort.DiscardInBuffer
  - Meadow.Hardware.SerialPort.DiscardOutBuffer
  - Meadow.Hardware.SerialPort.ErrorReceived
  - Meadow.Hardware.SerialPort.Flush
  - Meadow.Hardware.SerialPort.Handshake
  - Meadow.Hardware.SerialPort.IsOpen
  - Meadow.Hardware.SerialPort.Length
  - Meadow.Hardware.SerialPort.Open
  - Meadow.Hardware.SerialPort.Parity
  - Meadow.Hardware.SerialPort.PortName
  - Meadow.Hardware.SerialPort.Position
  - Meadow.Hardware.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  - Meadow.Hardware.SerialPort.Seek(System.Int64,System.IO.SeekOrigin)
  - Meadow.Hardware.SerialPort.SetLength(System.Int64)
  - Meadow.Hardware.SerialPort.StopBits
  - Meadow.Hardware.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  - Meadow.Hardware.SerialPort.WriteTimeout
  langs:
  - csharp
  - vb
  name: SerialPort
  nameWithType: SerialPort
  fullName: Meadow.Hardware.SerialPort
  type: Class
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: SerialPort
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 31
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: 'public class SerialPort : Stream, IDisposable'
    content.vb: >-
      Public Class SerialPort
          Inherits Stream
          Implements IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.IO.Stream
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IO.Stream.Null
  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Stream.Close
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.CreateWaitHandle
  - System.IO.Stream.Dispose
  - System.IO.Stream.Dispose(System.Boolean)
  - System.IO.Stream.EndRead(System.IAsyncResult)
  - System.IO.Stream.EndWrite(System.IAsyncResult)
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.Stream.ObjectInvariant
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.ReadByte
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.WriteByte(System.Byte)
  - System.IO.Stream.CanTimeout
  - System.IO.Stream.ReadTimeout
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Meadow.Hardware.SerialPort.BaseStream
  commentId: P:Meadow.Hardware.SerialPort.BaseStream
  id: BaseStream
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: BaseStream
  nameWithType: SerialPort.BaseStream
  fullName: Meadow.Hardware.SerialPort.BaseStream
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: BaseStream
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 33
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public Stream BaseStream { get; }
    parameters: []
    return:
      type: System.IO.Stream
    content.vb: Public ReadOnly Property BaseStream As Stream
  overload: Meadow.Hardware.SerialPort.BaseStream*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Hardware.SerialPort.BaudRate
  commentId: P:Meadow.Hardware.SerialPort.BaudRate
  id: BaudRate
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: BaudRate
  nameWithType: SerialPort.BaudRate
  fullName: Meadow.Hardware.SerialPort.BaudRate
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: BaudRate
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 34
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public int BaudRate { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property BaudRate As Integer
  overload: Meadow.Hardware.SerialPort.BaudRate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.SerialPort.BytesToRead
  commentId: P:Meadow.Hardware.SerialPort.BytesToRead
  id: BytesToRead
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
  fullName: Meadow.Hardware.SerialPort.BytesToRead
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: BytesToRead
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 35
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public int BytesToRead { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BytesToRead As Integer
  overload: Meadow.Hardware.SerialPort.BytesToRead*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Hardware.SerialPort.BytesToWrite
  commentId: P:Meadow.Hardware.SerialPort.BytesToWrite
  id: BytesToWrite
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
  fullName: Meadow.Hardware.SerialPort.BytesToWrite
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: BytesToWrite
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 36
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public int BytesToWrite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BytesToWrite As Integer
  overload: Meadow.Hardware.SerialPort.BytesToWrite*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Hardware.SerialPort.DataBits
  commentId: P:Meadow.Hardware.SerialPort.DataBits
  id: DataBits
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: DataBits
  nameWithType: SerialPort.DataBits
  fullName: Meadow.Hardware.SerialPort.DataBits
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: DataBits
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 37
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public int DataBits { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property DataBits As Integer
  overload: Meadow.Hardware.SerialPort.DataBits*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.SerialPort.Handshake
  commentId: P:Meadow.Hardware.SerialPort.Handshake
  id: Handshake
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: Handshake
  nameWithType: SerialPort.Handshake
  fullName: Meadow.Hardware.SerialPort.Handshake
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Handshake
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 38
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public Handshake Handshake { get; set; }
    parameters: []
    return:
      type: Meadow.Hardware.Handshake
    content.vb: Public Property Handshake As Handshake
  overload: Meadow.Hardware.SerialPort.Handshake*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.SerialPort.IsOpen
  commentId: P:Meadow.Hardware.SerialPort.IsOpen
  id: IsOpen
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: IsOpen
  nameWithType: SerialPort.IsOpen
  fullName: Meadow.Hardware.SerialPort.IsOpen
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: IsOpen
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 39
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public bool IsOpen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOpen As Boolean
  overload: Meadow.Hardware.SerialPort.IsOpen*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Hardware.SerialPort.Parity
  commentId: P:Meadow.Hardware.SerialPort.Parity
  id: Parity
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: Parity
  nameWithType: SerialPort.Parity
  fullName: Meadow.Hardware.SerialPort.Parity
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Parity
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 40
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public Parity Parity { get; set; }
    parameters: []
    return:
      type: Meadow.Hardware.Parity
    content.vb: Public Property Parity As Parity
  overload: Meadow.Hardware.SerialPort.Parity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.SerialPort.PortName
  commentId: P:Meadow.Hardware.SerialPort.PortName
  id: PortName
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: PortName
  nameWithType: SerialPort.PortName
  fullName: Meadow.Hardware.SerialPort.PortName
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: PortName
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 41
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public string PortName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PortName As String
  overload: Meadow.Hardware.SerialPort.PortName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Hardware.SerialPort.StopBits
  commentId: P:Meadow.Hardware.SerialPort.StopBits
  id: StopBits
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: StopBits
  nameWithType: SerialPort.StopBits
  fullName: Meadow.Hardware.SerialPort.StopBits
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: StopBits
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 42
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public StopBits StopBits { get; set; }
    parameters: []
    return:
      type: Meadow.Hardware.StopBits
    content.vb: Public Property StopBits As StopBits
  overload: Meadow.Hardware.SerialPort.StopBits*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.SerialPort.CanRead
  commentId: P:Meadow.Hardware.SerialPort.CanRead
  id: CanRead
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: SerialPort.CanRead
  fullName: Meadow.Hardware.SerialPort.CanRead
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: CanRead
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 44
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public override bool CanRead { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
  overridden: System.IO.Stream.CanRead
  overload: Meadow.Hardware.SerialPort.CanRead*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Meadow.Hardware.SerialPort.CanSeek
  commentId: P:Meadow.Hardware.SerialPort.CanSeek
  id: CanSeek
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: CanSeek
  nameWithType: SerialPort.CanSeek
  fullName: Meadow.Hardware.SerialPort.CanSeek
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: CanSeek
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 46
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public override bool CanSeek { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean
  overridden: System.IO.Stream.CanSeek
  overload: Meadow.Hardware.SerialPort.CanSeek*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Meadow.Hardware.SerialPort.CanWrite
  commentId: P:Meadow.Hardware.SerialPort.CanWrite
  id: CanWrite
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: CanWrite
  nameWithType: SerialPort.CanWrite
  fullName: Meadow.Hardware.SerialPort.CanWrite
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: CanWrite
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 48
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public override bool CanWrite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
  overridden: System.IO.Stream.CanWrite
  overload: Meadow.Hardware.SerialPort.CanWrite*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Meadow.Hardware.SerialPort.Length
  commentId: P:Meadow.Hardware.SerialPort.Length
  id: Length
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: SerialPort.Length
  fullName: Meadow.Hardware.SerialPort.Length
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Length
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 50
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public override long Length { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overrides ReadOnly Property Length As Long
  overridden: System.IO.Stream.Length
  overload: Meadow.Hardware.SerialPort.Length*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Meadow.Hardware.SerialPort.Position
  commentId: P:Meadow.Hardware.SerialPort.Position
  id: Position
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: SerialPort.Position
  fullName: Meadow.Hardware.SerialPort.Position
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Position
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 52
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public override long Position { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overrides Property Position As Long
  overridden: System.IO.Stream.Position
  overload: Meadow.Hardware.SerialPort.Position*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Meadow.Hardware.SerialPort.WriteTimeout
  commentId: P:Meadow.Hardware.SerialPort.WriteTimeout
  id: WriteTimeout
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
  fullName: Meadow.Hardware.SerialPort.WriteTimeout
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: WriteTimeout
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 54
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public override int WriteTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides Property WriteTimeout As Integer
  overridden: System.IO.Stream.WriteTimeout
  overload: Meadow.Hardware.SerialPort.WriteTimeout*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Meadow.Hardware.SerialPort.DataReceived
  commentId: E:Meadow.Hardware.SerialPort.DataReceived
  id: DataReceived
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: DataReceived
  nameWithType: SerialPort.DataReceived
  fullName: Meadow.Hardware.SerialPort.DataReceived
  type: Event
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: DataReceived
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 59
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public event SerialPort.SerialDataReceivedEventHandler DataReceived
    return:
      type: Meadow.Hardware.SerialPort.SerialDataReceivedEventHandler
    content.vb: Public Event DataReceived As SerialPort.SerialDataReceivedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.SerialPort.ErrorReceived
  commentId: E:Meadow.Hardware.SerialPort.ErrorReceived
  id: ErrorReceived
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: ErrorReceived
  nameWithType: SerialPort.ErrorReceived
  fullName: Meadow.Hardware.SerialPort.ErrorReceived
  type: Event
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: ErrorReceived
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 60
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public event SerialPort.SerialErrorReceivedEventHandler ErrorReceived
    return:
      type: Meadow.Hardware.SerialPort.SerialErrorReceivedEventHandler
    content.vb: Public Event ErrorReceived As SerialPort.SerialErrorReceivedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.SerialPort.#ctor(System.String)
  commentId: M:Meadow.Hardware.SerialPort.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: SerialPort(String)
  nameWithType: SerialPort.SerialPort(String)
  fullName: Meadow.Hardware.SerialPort.SerialPort(System.String)
  type: Constructor
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: .ctor
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 62
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public SerialPort(string portName)
    parameters:
    - id: portName
      type: System.String
    content.vb: Public Sub New(portName As String)
  overload: Meadow.Hardware.SerialPort.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.SerialPort.#ctor(System.String,System.Int32)
  commentId: M:Meadow.Hardware.SerialPort.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: SerialPort(String, Int32)
  nameWithType: SerialPort.SerialPort(String, Int32)
  fullName: Meadow.Hardware.SerialPort.SerialPort(System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: .ctor
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 63
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public SerialPort(string portName, int baudRate)
    parameters:
    - id: portName
      type: System.String
    - id: baudRate
      type: System.Int32
    content.vb: Public Sub New(portName As String, baudRate As Integer)
  overload: Meadow.Hardware.SerialPort.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.SerialPort.#ctor(System.String,System.Int32,Meadow.Hardware.Parity)
  commentId: M:Meadow.Hardware.SerialPort.#ctor(System.String,System.Int32,Meadow.Hardware.Parity)
  id: '#ctor(System.String,System.Int32,Meadow.Hardware.Parity)'
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: SerialPort(String, Int32, Parity)
  nameWithType: SerialPort.SerialPort(String, Int32, Parity)
  fullName: Meadow.Hardware.SerialPort.SerialPort(System.String, System.Int32, Meadow.Hardware.Parity)
  type: Constructor
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: .ctor
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 64
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public SerialPort(string portName, int baudRate, Parity parity)
    parameters:
    - id: portName
      type: System.String
    - id: baudRate
      type: System.Int32
    - id: parity
      type: Meadow.Hardware.Parity
    content.vb: Public Sub New(portName As String, baudRate As Integer, parity As Parity)
  overload: Meadow.Hardware.SerialPort.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.SerialPort.#ctor(System.String,System.Int32,Meadow.Hardware.Parity,System.Int32)
  commentId: M:Meadow.Hardware.SerialPort.#ctor(System.String,System.Int32,Meadow.Hardware.Parity,System.Int32)
  id: '#ctor(System.String,System.Int32,Meadow.Hardware.Parity,System.Int32)'
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: SerialPort(String, Int32, Parity, Int32)
  nameWithType: SerialPort.SerialPort(String, Int32, Parity, Int32)
  fullName: Meadow.Hardware.SerialPort.SerialPort(System.String, System.Int32, Meadow.Hardware.Parity, System.Int32)
  type: Constructor
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: .ctor
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 65
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public SerialPort(string portName, int baudRate, Parity parity, int dataBits)
    parameters:
    - id: portName
      type: System.String
    - id: baudRate
      type: System.Int32
    - id: parity
      type: Meadow.Hardware.Parity
    - id: dataBits
      type: System.Int32
    content.vb: Public Sub New(portName As String, baudRate As Integer, parity As Parity, dataBits As Integer)
  overload: Meadow.Hardware.SerialPort.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.SerialPort.#ctor(System.String,System.Int32,Meadow.Hardware.Parity,System.Int32,Meadow.Hardware.StopBits)
  commentId: M:Meadow.Hardware.SerialPort.#ctor(System.String,System.Int32,Meadow.Hardware.Parity,System.Int32,Meadow.Hardware.StopBits)
  id: '#ctor(System.String,System.Int32,Meadow.Hardware.Parity,System.Int32,Meadow.Hardware.StopBits)'
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: SerialPort(String, Int32, Parity, Int32, StopBits)
  nameWithType: SerialPort.SerialPort(String, Int32, Parity, Int32, StopBits)
  fullName: Meadow.Hardware.SerialPort.SerialPort(System.String, System.Int32, Meadow.Hardware.Parity, System.Int32, Meadow.Hardware.StopBits)
  type: Constructor
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: .ctor
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 66
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public SerialPort(string portName, int baudRate, Parity parity, int dataBits, StopBits stopBits)
    parameters:
    - id: portName
      type: System.String
    - id: baudRate
      type: System.Int32
    - id: parity
      type: Meadow.Hardware.Parity
    - id: dataBits
      type: System.Int32
    - id: stopBits
      type: Meadow.Hardware.StopBits
    content.vb: Public Sub New(portName As String, baudRate As Integer, parity As Parity, dataBits As Integer, stopBits As StopBits)
  overload: Meadow.Hardware.SerialPort.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.SerialPort.DiscardInBuffer
  commentId: M:Meadow.Hardware.SerialPort.DiscardInBuffer
  id: DiscardInBuffer
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: DiscardInBuffer()
  nameWithType: SerialPort.DiscardInBuffer()
  fullName: Meadow.Hardware.SerialPort.DiscardInBuffer()
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: DiscardInBuffer
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 68
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public void DiscardInBuffer()
    content.vb: Public Sub DiscardInBuffer
  overload: Meadow.Hardware.SerialPort.DiscardInBuffer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.SerialPort.DiscardOutBuffer
  commentId: M:Meadow.Hardware.SerialPort.DiscardOutBuffer
  id: DiscardOutBuffer
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: DiscardOutBuffer()
  nameWithType: SerialPort.DiscardOutBuffer()
  fullName: Meadow.Hardware.SerialPort.DiscardOutBuffer()
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: DiscardOutBuffer
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 69
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public void DiscardOutBuffer()
    content.vb: Public Sub DiscardOutBuffer
  overload: Meadow.Hardware.SerialPort.DiscardOutBuffer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.SerialPort.Open
  commentId: M:Meadow.Hardware.SerialPort.Open
  id: Open
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: Open()
  nameWithType: SerialPort.Open()
  fullName: Meadow.Hardware.SerialPort.Open()
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Open
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 71
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public void Open()
    content.vb: Public Sub Open
  overload: Meadow.Hardware.SerialPort.Open*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.SerialPort.Flush
  commentId: M:Meadow.Hardware.SerialPort.Flush
  id: Flush
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: SerialPort.Flush()
  fullName: Meadow.Hardware.SerialPort.Flush()
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Flush
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 73
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush
  overridden: System.IO.Stream.Flush
  overload: Meadow.Hardware.SerialPort.Flush*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Meadow.Hardware.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:Meadow.Hardware.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: Read(Byte[], Int32, Int32)
  nameWithType: SerialPort.Read(Byte[], Int32, Int32)
  fullName: Meadow.Hardware.SerialPort.Read(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Read
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 78
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public override int Read(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer
  overridden: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  overload: Meadow.Hardware.SerialPort.Read*
  nameWithType.vb: SerialPort.Read(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Meadow.Hardware.SerialPort.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
- uid: Meadow.Hardware.SerialPort.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:Meadow.Hardware.SerialPort.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: Seek(Int64, SeekOrigin)
  nameWithType: SerialPort.Seek(Int64, SeekOrigin)
  fullName: Meadow.Hardware.SerialPort.Seek(System.Int64, System.IO.SeekOrigin)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Seek
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 83
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public override long Seek(long offset, SeekOrigin origin)
    parameters:
    - id: offset
      type: System.Int64
    - id: origin
      type: System.IO.SeekOrigin
    return:
      type: System.Int64
    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long
  overridden: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  overload: Meadow.Hardware.SerialPort.Seek*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Meadow.Hardware.SerialPort.SetLength(System.Int64)
  commentId: M:Meadow.Hardware.SerialPort.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: SetLength(Int64)
  nameWithType: SerialPort.SetLength(Int64)
  fullName: Meadow.Hardware.SerialPort.SetLength(System.Int64)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: SetLength
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 88
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public override void SetLength(long value)
    parameters:
    - id: value
      type: System.Int64
    content.vb: Public Overrides Sub SetLength(value As Long)
  overridden: System.IO.Stream.SetLength(System.Int64)
  overload: Meadow.Hardware.SerialPort.SetLength*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Meadow.Hardware.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:Meadow.Hardware.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: Meadow.Hardware.SerialPort
  langs:
  - csharp
  - vb
  name: Write(Byte[], Int32, Int32)
  nameWithType: SerialPort.Write(Byte[], Int32, Int32)
  fullName: Meadow.Hardware.SerialPort.Write(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/SerialPort.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Write
    path: ../Meadow.Core/source/Meadow.Core/Hardware/SerialPort.cs
    startLine: 93
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public override void Write(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    content.vb: Public Overrides Sub Write(buffer As Byte(), offset As Integer, count As Integer)
  overridden: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  overload: Meadow.Hardware.SerialPort.Write*
  nameWithType.vb: SerialPort.Write(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Meadow.Hardware.SerialPort.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
references:
- uid: Meadow.Hardware
  commentId: N:Meadow.Hardware
  name: Meadow.Hardware
  nameWithType: Meadow.Hardware
  fullName: Meadow.Hardware
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IO.Stream.Null
  commentId: F:System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: true
  name: "Null"
  nameWithType: Stream.Null
  fullName: System.IO.Stream.Null
- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  nameWithType.vb: Stream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  fullName.vb: System.IO.Stream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    nameWithType: Stream.BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    nameWithType: Stream.BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  nameWithType.vb: Stream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  fullName.vb: System.IO.Stream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    nameWithType: Stream.BeginWrite
    fullName: System.IO.Stream.BeginWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    nameWithType: Stream.BeginWrite
    fullName: System.IO.Stream.BeginWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Close
  commentId: M:System.IO.Stream.Close
  parent: System.IO.Stream
  isExternal: true
  name: Close()
  nameWithType: Stream.Close()
  fullName: System.IO.Stream.Close()
  spec.csharp:
  - uid: System.IO.Stream.Close
    name: Close
    nameWithType: Stream.Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Close
    name: Close
    nameWithType: Stream.Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: CopyTo(Stream)
  nameWithType: Stream.CopyTo(Stream)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: CopyTo(Stream, Int32)
  nameWithType: Stream.CopyTo(Stream, Int32)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream)
  nameWithType: Stream.CopyToAsync(Stream)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream, Int32)
  nameWithType: Stream.CopyToAsync(Stream, Int32)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream, Int32, CancellationToken)
  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CreateWaitHandle
  commentId: M:System.IO.Stream.CreateWaitHandle
  parent: System.IO.Stream
  isExternal: true
  name: CreateWaitHandle()
  nameWithType: Stream.CreateWaitHandle()
  fullName: System.IO.Stream.CreateWaitHandle()
  spec.csharp:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    nameWithType: Stream.CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    nameWithType: Stream.CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Dispose
  commentId: M:System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: true
  name: Dispose()
  nameWithType: Stream.Dispose()
  fullName: System.IO.Stream.Dispose()
  spec.csharp:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Dispose(System.Boolean)
  commentId: M:System.IO.Stream.Dispose(System.Boolean)
  parent: System.IO.Stream
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: Stream.Dispose(Boolean)
  fullName: System.IO.Stream.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.IO.Stream.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.EndRead(System.IAsyncResult)
  commentId: M:System.IO.Stream.EndRead(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  name: EndRead(IAsyncResult)
  nameWithType: Stream.EndRead(IAsyncResult)
  fullName: System.IO.Stream.EndRead(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    nameWithType: Stream.EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    nameWithType: Stream.EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.EndWrite(System.IAsyncResult)
  commentId: M:System.IO.Stream.EndWrite(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  name: EndWrite(IAsyncResult)
  nameWithType: Stream.EndWrite(IAsyncResult)
  fullName: System.IO.Stream.EndWrite(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    nameWithType: Stream.EndWrite
    fullName: System.IO.Stream.EndWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    nameWithType: Stream.EndWrite
    fullName: System.IO.Stream.EndWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.FlushAsync
  commentId: M:System.IO.Stream.FlushAsync
  parent: System.IO.Stream
  isExternal: true
  name: FlushAsync()
  nameWithType: Stream.FlushAsync()
  fullName: System.IO.Stream.FlushAsync()
  spec.csharp:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    nameWithType: Stream.FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    nameWithType: Stream.FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: FlushAsync(CancellationToken)
  nameWithType: Stream.FlushAsync(CancellationToken)
  fullName: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    nameWithType: Stream.FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    nameWithType: Stream.FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.ObjectInvariant
  commentId: M:System.IO.Stream.ObjectInvariant
  parent: System.IO.Stream
  isExternal: true
  name: ObjectInvariant()
  nameWithType: Stream.ObjectInvariant()
  fullName: System.IO.Stream.ObjectInvariant()
  spec.csharp:
  - uid: System.IO.Stream.ObjectInvariant
    name: ObjectInvariant
    nameWithType: Stream.ObjectInvariant
    fullName: System.IO.Stream.ObjectInvariant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ObjectInvariant
    name: ObjectInvariant
    nameWithType: Stream.ObjectInvariant
    fullName: System.IO.Stream.ObjectInvariant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32)
  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)
  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32)
  fullName.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: ReadAsync(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    nameWithType: Stream.ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    nameWithType: Stream.ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32, CancellationToken)
  fullName.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    nameWithType: Stream.ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    nameWithType: Stream.ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.ReadByte
  commentId: M:System.IO.Stream.ReadByte
  parent: System.IO.Stream
  isExternal: true
  name: ReadByte()
  nameWithType: Stream.ReadByte()
  fullName: System.IO.Stream.ReadByte()
  spec.csharp:
  - uid: System.IO.Stream.ReadByte
    name: ReadByte
    nameWithType: Stream.ReadByte
    fullName: System.IO.Stream.ReadByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadByte
    name: ReadByte
    nameWithType: Stream.ReadByte
    fullName: System.IO.Stream.ReadByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Synchronized(System.IO.Stream)
  commentId: M:System.IO.Stream.Synchronized(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: Synchronized(Stream)
  nameWithType: Stream.Synchronized(Stream)
  fullName: System.IO.Stream.Synchronized(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    nameWithType: Stream.Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    nameWithType: Stream.Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32)
  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)
  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32)
  fullName.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: WriteAsync(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    nameWithType: Stream.WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    nameWithType: Stream.WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32, CancellationToken)
  fullName.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: Stream.WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: Stream.WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.WriteByte(System.Byte)
  commentId: M:System.IO.Stream.WriteByte(System.Byte)
  parent: System.IO.Stream
  isExternal: true
  name: WriteByte(Byte)
  nameWithType: Stream.WriteByte(Byte)
  fullName: System.IO.Stream.WriteByte(System.Byte)
  spec.csharp:
  - uid: System.IO.Stream.WriteByte(System.Byte)
    name: WriteByte
    nameWithType: Stream.WriteByte
    fullName: System.IO.Stream.WriteByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteByte(System.Byte)
    name: WriteByte
    nameWithType: Stream.WriteByte
    fullName: System.IO.Stream.WriteByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CanTimeout
  commentId: P:System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: true
  name: CanTimeout
  nameWithType: Stream.CanTimeout
  fullName: System.IO.Stream.CanTimeout
- uid: System.IO.Stream.ReadTimeout
  commentId: P:System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: true
  name: ReadTimeout
  nameWithType: Stream.ReadTimeout
  fullName: System.IO.Stream.ReadTimeout
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.InitializeLifetimeService
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: MarshalByRefObject.InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: MarshalByRefObject.InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Meadow.Hardware.SerialPort.BaseStream*
  commentId: Overload:Meadow.Hardware.SerialPort.BaseStream
  name: BaseStream
  nameWithType: SerialPort.BaseStream
  fullName: Meadow.Hardware.SerialPort.BaseStream
- uid: Meadow.Hardware.SerialPort.BaudRate*
  commentId: Overload:Meadow.Hardware.SerialPort.BaudRate
  name: BaudRate
  nameWithType: SerialPort.BaudRate
  fullName: Meadow.Hardware.SerialPort.BaudRate
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Meadow.Hardware.SerialPort.BytesToRead*
  commentId: Overload:Meadow.Hardware.SerialPort.BytesToRead
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
  fullName: Meadow.Hardware.SerialPort.BytesToRead
- uid: Meadow.Hardware.SerialPort.BytesToWrite*
  commentId: Overload:Meadow.Hardware.SerialPort.BytesToWrite
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
  fullName: Meadow.Hardware.SerialPort.BytesToWrite
- uid: Meadow.Hardware.SerialPort.DataBits*
  commentId: Overload:Meadow.Hardware.SerialPort.DataBits
  name: DataBits
  nameWithType: SerialPort.DataBits
  fullName: Meadow.Hardware.SerialPort.DataBits
- uid: Meadow.Hardware.SerialPort.Handshake*
  commentId: Overload:Meadow.Hardware.SerialPort.Handshake
  name: Handshake
  nameWithType: SerialPort.Handshake
  fullName: Meadow.Hardware.SerialPort.Handshake
- uid: Meadow.Hardware.Handshake
  commentId: T:Meadow.Hardware.Handshake
  parent: Meadow.Hardware
  name: Handshake
  nameWithType: Handshake
  fullName: Meadow.Hardware.Handshake
- uid: Meadow.Hardware.SerialPort.IsOpen*
  commentId: Overload:Meadow.Hardware.SerialPort.IsOpen
  name: IsOpen
  nameWithType: SerialPort.IsOpen
  fullName: Meadow.Hardware.SerialPort.IsOpen
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Meadow.Hardware.SerialPort.Parity*
  commentId: Overload:Meadow.Hardware.SerialPort.Parity
  name: Parity
  nameWithType: SerialPort.Parity
  fullName: Meadow.Hardware.SerialPort.Parity
- uid: Meadow.Hardware.Parity
  commentId: T:Meadow.Hardware.Parity
  parent: Meadow.Hardware
  name: Parity
  nameWithType: Parity
  fullName: Meadow.Hardware.Parity
- uid: Meadow.Hardware.SerialPort.PortName*
  commentId: Overload:Meadow.Hardware.SerialPort.PortName
  name: PortName
  nameWithType: SerialPort.PortName
  fullName: Meadow.Hardware.SerialPort.PortName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Meadow.Hardware.SerialPort.StopBits*
  commentId: Overload:Meadow.Hardware.SerialPort.StopBits
  name: StopBits
  nameWithType: SerialPort.StopBits
  fullName: Meadow.Hardware.SerialPort.StopBits
- uid: Meadow.Hardware.StopBits
  commentId: T:Meadow.Hardware.StopBits
  parent: Meadow.Hardware
  name: StopBits
  nameWithType: StopBits
  fullName: Meadow.Hardware.StopBits
- uid: System.IO.Stream.CanRead
  commentId: P:System.IO.Stream.CanRead
  parent: System.IO.Stream
  isExternal: true
  name: CanRead
  nameWithType: Stream.CanRead
  fullName: System.IO.Stream.CanRead
- uid: Meadow.Hardware.SerialPort.CanRead*
  commentId: Overload:Meadow.Hardware.SerialPort.CanRead
  name: CanRead
  nameWithType: SerialPort.CanRead
  fullName: Meadow.Hardware.SerialPort.CanRead
- uid: System.IO.Stream.CanSeek
  commentId: P:System.IO.Stream.CanSeek
  parent: System.IO.Stream
  isExternal: true
  name: CanSeek
  nameWithType: Stream.CanSeek
  fullName: System.IO.Stream.CanSeek
- uid: Meadow.Hardware.SerialPort.CanSeek*
  commentId: Overload:Meadow.Hardware.SerialPort.CanSeek
  name: CanSeek
  nameWithType: SerialPort.CanSeek
  fullName: Meadow.Hardware.SerialPort.CanSeek
- uid: System.IO.Stream.CanWrite
  commentId: P:System.IO.Stream.CanWrite
  parent: System.IO.Stream
  isExternal: true
  name: CanWrite
  nameWithType: Stream.CanWrite
  fullName: System.IO.Stream.CanWrite
- uid: Meadow.Hardware.SerialPort.CanWrite*
  commentId: Overload:Meadow.Hardware.SerialPort.CanWrite
  name: CanWrite
  nameWithType: SerialPort.CanWrite
  fullName: Meadow.Hardware.SerialPort.CanWrite
- uid: System.IO.Stream.Length
  commentId: P:System.IO.Stream.Length
  parent: System.IO.Stream
  isExternal: true
  name: Length
  nameWithType: Stream.Length
  fullName: System.IO.Stream.Length
- uid: Meadow.Hardware.SerialPort.Length*
  commentId: Overload:Meadow.Hardware.SerialPort.Length
  name: Length
  nameWithType: SerialPort.Length
  fullName: Meadow.Hardware.SerialPort.Length
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Stream.Position
  commentId: P:System.IO.Stream.Position
  parent: System.IO.Stream
  isExternal: true
  name: Position
  nameWithType: Stream.Position
  fullName: System.IO.Stream.Position
- uid: Meadow.Hardware.SerialPort.Position*
  commentId: Overload:Meadow.Hardware.SerialPort.Position
  name: Position
  nameWithType: SerialPort.Position
  fullName: Meadow.Hardware.SerialPort.Position
- uid: System.IO.Stream.WriteTimeout
  commentId: P:System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: true
  name: WriteTimeout
  nameWithType: Stream.WriteTimeout
  fullName: System.IO.Stream.WriteTimeout
- uid: Meadow.Hardware.SerialPort.WriteTimeout*
  commentId: Overload:Meadow.Hardware.SerialPort.WriteTimeout
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
  fullName: Meadow.Hardware.SerialPort.WriteTimeout
- uid: Meadow.Hardware.SerialPort.SerialDataReceivedEventHandler
  commentId: T:Meadow.Hardware.SerialPort.SerialDataReceivedEventHandler
  parent: Meadow.Hardware
  name: SerialPort.SerialDataReceivedEventHandler
  nameWithType: SerialPort.SerialDataReceivedEventHandler
  fullName: Meadow.Hardware.SerialPort.SerialDataReceivedEventHandler
- uid: Meadow.Hardware.SerialPort.SerialErrorReceivedEventHandler
  commentId: T:Meadow.Hardware.SerialPort.SerialErrorReceivedEventHandler
  parent: Meadow.Hardware
  name: SerialPort.SerialErrorReceivedEventHandler
  nameWithType: SerialPort.SerialErrorReceivedEventHandler
  fullName: Meadow.Hardware.SerialPort.SerialErrorReceivedEventHandler
- uid: Meadow.Hardware.SerialPort.#ctor*
  commentId: Overload:Meadow.Hardware.SerialPort.#ctor
  name: SerialPort
  nameWithType: SerialPort.SerialPort
  fullName: Meadow.Hardware.SerialPort.SerialPort
- uid: Meadow.Hardware.SerialPort.DiscardInBuffer*
  commentId: Overload:Meadow.Hardware.SerialPort.DiscardInBuffer
  name: DiscardInBuffer
  nameWithType: SerialPort.DiscardInBuffer
  fullName: Meadow.Hardware.SerialPort.DiscardInBuffer
- uid: Meadow.Hardware.SerialPort.DiscardOutBuffer*
  commentId: Overload:Meadow.Hardware.SerialPort.DiscardOutBuffer
  name: DiscardOutBuffer
  nameWithType: SerialPort.DiscardOutBuffer
  fullName: Meadow.Hardware.SerialPort.DiscardOutBuffer
- uid: Meadow.Hardware.SerialPort.Open*
  commentId: Overload:Meadow.Hardware.SerialPort.Open
  name: Open
  nameWithType: SerialPort.Open
  fullName: Meadow.Hardware.SerialPort.Open
- uid: System.IO.Stream.Flush
  commentId: M:System.IO.Stream.Flush
  parent: System.IO.Stream
  isExternal: true
  name: Flush()
  nameWithType: Stream.Flush()
  fullName: System.IO.Stream.Flush()
  spec.csharp:
  - uid: System.IO.Stream.Flush
    name: Flush
    nameWithType: Stream.Flush
    fullName: System.IO.Stream.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Flush
    name: Flush
    nameWithType: Stream.Flush
    fullName: System.IO.Stream.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Hardware.SerialPort.Flush*
  commentId: Overload:Meadow.Hardware.SerialPort.Flush
  name: Flush
  nameWithType: SerialPort.Flush
  fullName: Meadow.Hardware.SerialPort.Flush
- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: Read(Byte[], Int32, Int32)
  nameWithType: Stream.Read(Byte[], Int32, Int32)
  fullName: System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Stream.Read(Byte(), Int32, Int32)
  fullName.vb: System.IO.Stream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    nameWithType: Stream.Read
    fullName: System.IO.Stream.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    nameWithType: Stream.Read
    fullName: System.IO.Stream.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Hardware.SerialPort.Read*
  commentId: Overload:Meadow.Hardware.SerialPort.Read
  name: Read
  nameWithType: SerialPort.Read
  fullName: Meadow.Hardware.SerialPort.Read
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Stream
  isExternal: true
  name: Seek(Int64, SeekOrigin)
  nameWithType: Stream.Seek(Int64, SeekOrigin)
  fullName: System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin)
  spec.csharp:
  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    nameWithType: Stream.Seek
    fullName: System.IO.Stream.Seek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    nameWithType: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    nameWithType: Stream.Seek
    fullName: System.IO.Stream.Seek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    nameWithType: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Hardware.SerialPort.Seek*
  commentId: Overload:Meadow.Hardware.SerialPort.Seek
  name: Seek
  nameWithType: SerialPort.Seek
  fullName: Meadow.Hardware.SerialPort.Seek
- uid: System.IO.SeekOrigin
  commentId: T:System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.Stream.SetLength(System.Int64)
  commentId: M:System.IO.Stream.SetLength(System.Int64)
  parent: System.IO.Stream
  isExternal: true
  name: SetLength(Int64)
  nameWithType: Stream.SetLength(Int64)
  fullName: System.IO.Stream.SetLength(System.Int64)
  spec.csharp:
  - uid: System.IO.Stream.SetLength(System.Int64)
    name: SetLength
    nameWithType: Stream.SetLength
    fullName: System.IO.Stream.SetLength
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.SetLength(System.Int64)
    name: SetLength
    nameWithType: Stream.SetLength
    fullName: System.IO.Stream.SetLength
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Hardware.SerialPort.SetLength*
  commentId: Overload:Meadow.Hardware.SerialPort.SetLength
  name: SetLength
  nameWithType: SerialPort.SetLength
  fullName: Meadow.Hardware.SerialPort.SetLength
- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: Write(Byte[], Int32, Int32)
  nameWithType: Stream.Write(Byte[], Int32, Int32)
  fullName: System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Stream.Write(Byte(), Int32, Int32)
  fullName.vb: System.IO.Stream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    nameWithType: Stream.Write
    fullName: System.IO.Stream.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    nameWithType: Stream.Write
    fullName: System.IO.Stream.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Hardware.SerialPort.Write*
  commentId: Overload:Meadow.Hardware.SerialPort.Write
  name: Write
  nameWithType: SerialPort.Write
  fullName: Meadow.Hardware.SerialPort.Write
