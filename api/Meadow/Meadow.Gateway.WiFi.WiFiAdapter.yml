### YamlMime:ManagedReference
items:
- uid: Meadow.Gateway.WiFi.WiFiAdapter
  commentId: T:Meadow.Gateway.WiFi.WiFiAdapter
  id: WiFiAdapter
  parent: Meadow.Gateway.WiFi
  children:
  - Meadow.Gateway.WiFi.WiFiAdapter.#ctor
  - Meadow.Gateway.WiFi.WiFiAdapter.BeginScan
  - Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork,Meadow.Gateway.WiFi.ReconnectionType)
  - Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork,System.String,Meadow.Gateway.WiFi.ReconnectionType)
  - Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork,System.String,System.String,Meadow.Gateway.WiFi.ConnectionMethodType,Meadow.Gateway.WiFi.ReconnectionType)
  - Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork,System.String,System.String,Meadow.Gateway.WiFi.ReconnectionType)
  - Meadow.Gateway.WiFi.WiFiAdapter.Disconect
  - Meadow.Gateway.WiFi.WiFiAdapter.HasInternetAccess
  - Meadow.Gateway.WiFi.WiFiAdapter.IsConnected
  - Meadow.Gateway.WiFi.WiFiAdapter.Networks
  langs:
  - csharp
  - vb
  name: WiFiAdapter
  nameWithType: WiFiAdapter
  fullName: Meadow.Gateway.WiFi.WiFiAdapter
  type: Class
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: WiFiAdapter
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
    startLine: 10
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  summary: "\nRepresents a WiFi network adapter.\n"
  example: []
  syntax:
    content: public class WiFiAdapter
    content.vb: Public Class WiFiAdapter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Meadow.Gateway.WiFi.WiFiAdapter.Networks
  commentId: P:Meadow.Gateway.WiFi.WiFiAdapter.Networks
  id: Networks
  parent: Meadow.Gateway.WiFi.WiFiAdapter
  langs:
  - csharp
  - vb
  name: Networks
  nameWithType: WiFiAdapter.Networks
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.Networks
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Networks
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
    startLine: 12
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  syntax:
    content: public ObservableCollection<WifiNetwork> Networks { get; set; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ObservableCollection{Meadow.Gateway.WiFi.WifiNetwork}
    content.vb: Public Property Networks As ObservableCollection(Of WifiNetwork)
  overload: Meadow.Gateway.WiFi.WiFiAdapter.Networks*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Gateway.WiFi.WiFiAdapter.IsConnected
  commentId: P:Meadow.Gateway.WiFi.WiFiAdapter.IsConnected
  id: IsConnected
  parent: Meadow.Gateway.WiFi.WiFiAdapter
  langs:
  - csharp
  - vb
  name: IsConnected
  nameWithType: WiFiAdapter.IsConnected
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.IsConnected
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: IsConnected
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
    startLine: 14
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  syntax:
    content: public bool IsConnected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsConnected As Boolean
  overload: Meadow.Gateway.WiFi.WiFiAdapter.IsConnected*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Gateway.WiFi.WiFiAdapter.HasInternetAccess
  commentId: P:Meadow.Gateway.WiFi.WiFiAdapter.HasInternetAccess
  id: HasInternetAccess
  parent: Meadow.Gateway.WiFi.WiFiAdapter
  langs:
  - csharp
  - vb
  name: HasInternetAccess
  nameWithType: WiFiAdapter.HasInternetAccess
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.HasInternetAccess
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: HasInternetAccess
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
    startLine: 15
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  syntax:
    content: public bool HasInternetAccess { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasInternetAccess As Boolean
  overload: Meadow.Gateway.WiFi.WiFiAdapter.HasInternetAccess*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Gateway.WiFi.WiFiAdapter.#ctor
  commentId: M:Meadow.Gateway.WiFi.WiFiAdapter.#ctor
  id: '#ctor'
  parent: Meadow.Gateway.WiFi.WiFiAdapter
  langs:
  - csharp
  - vb
  name: WiFiAdapter()
  nameWithType: WiFiAdapter.WiFiAdapter()
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.WiFiAdapter()
  type: Constructor
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: .ctor
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
    startLine: 17
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  syntax:
    content: public WiFiAdapter()
    content.vb: Public Sub New
  overload: Meadow.Gateway.WiFi.WiFiAdapter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Gateway.WiFi.WiFiAdapter.BeginScan
  commentId: M:Meadow.Gateway.WiFi.WiFiAdapter.BeginScan
  id: BeginScan
  parent: Meadow.Gateway.WiFi.WiFiAdapter
  langs:
  - csharp
  - vb
  name: BeginScan()
  nameWithType: WiFiAdapter.BeginScan()
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.BeginScan()
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: BeginScan
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
    startLine: 22
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  syntax:
    content: public void BeginScan()
    content.vb: Public Sub BeginScan
  overload: Meadow.Gateway.WiFi.WiFiAdapter.BeginScan*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork,Meadow.Gateway.WiFi.ReconnectionType)
  commentId: M:Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork,Meadow.Gateway.WiFi.ReconnectionType)
  id: Connect(Meadow.Gateway.WiFi.WifiNetwork,Meadow.Gateway.WiFi.ReconnectionType)
  parent: Meadow.Gateway.WiFi.WiFiAdapter
  langs:
  - csharp
  - vb
  name: Connect(WifiNetwork, ReconnectionType)
  nameWithType: WiFiAdapter.Connect(WifiNetwork, ReconnectionType)
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork, Meadow.Gateway.WiFi.ReconnectionType)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Connect
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
    startLine: 29
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  syntax:
    content: public Task<ConnectionResult> Connect(WifiNetwork network, ReconnectionType reconnection = ReconnectionType.Automatic)
    parameters:
    - id: network
      type: Meadow.Gateway.WiFi.WifiNetwork
    - id: reconnection
      type: Meadow.Gateway.WiFi.ReconnectionType
    return:
      type: System.Threading.Tasks.Task{Meadow.Gateway.WiFi.ConnectionResult}
    content.vb: Public Function Connect(network As WifiNetwork, reconnection As ReconnectionType = ReconnectionType.Automatic) As Task(Of ConnectionResult)
  overload: Meadow.Gateway.WiFi.WiFiAdapter.Connect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork,System.String,Meadow.Gateway.WiFi.ReconnectionType)
  commentId: M:Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork,System.String,Meadow.Gateway.WiFi.ReconnectionType)
  id: Connect(Meadow.Gateway.WiFi.WifiNetwork,System.String,Meadow.Gateway.WiFi.ReconnectionType)
  parent: Meadow.Gateway.WiFi.WiFiAdapter
  langs:
  - csharp
  - vb
  name: Connect(WifiNetwork, String, ReconnectionType)
  nameWithType: WiFiAdapter.Connect(WifiNetwork, String, ReconnectionType)
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork, System.String, Meadow.Gateway.WiFi.ReconnectionType)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Connect
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
    startLine: 38
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  syntax:
    content: public Task<ConnectionResult> Connect(WifiNetwork network, string password, ReconnectionType reconnection = ReconnectionType.Automatic)
    parameters:
    - id: network
      type: Meadow.Gateway.WiFi.WifiNetwork
    - id: password
      type: System.String
    - id: reconnection
      type: Meadow.Gateway.WiFi.ReconnectionType
    return:
      type: System.Threading.Tasks.Task{Meadow.Gateway.WiFi.ConnectionResult}
    content.vb: Public Function Connect(network As WifiNetwork, password As String, reconnection As ReconnectionType = ReconnectionType.Automatic) As Task(Of ConnectionResult)
  overload: Meadow.Gateway.WiFi.WiFiAdapter.Connect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork,System.String,System.String,Meadow.Gateway.WiFi.ReconnectionType)
  commentId: M:Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork,System.String,System.String,Meadow.Gateway.WiFi.ReconnectionType)
  id: Connect(Meadow.Gateway.WiFi.WifiNetwork,System.String,System.String,Meadow.Gateway.WiFi.ReconnectionType)
  parent: Meadow.Gateway.WiFi.WiFiAdapter
  langs:
  - csharp
  - vb
  name: Connect(WifiNetwork, String, String, ReconnectionType)
  nameWithType: WiFiAdapter.Connect(WifiNetwork, String, String, ReconnectionType)
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork, System.String, System.String, Meadow.Gateway.WiFi.ReconnectionType)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Connect
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
    startLine: 49
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  syntax:
    content: public Task<ConnectionResult> Connect(WifiNetwork network, string password, string ssid, ReconnectionType reconnection = ReconnectionType.Automatic)
    parameters:
    - id: network
      type: Meadow.Gateway.WiFi.WifiNetwork
    - id: password
      type: System.String
    - id: ssid
      type: System.String
    - id: reconnection
      type: Meadow.Gateway.WiFi.ReconnectionType
    return:
      type: System.Threading.Tasks.Task{Meadow.Gateway.WiFi.ConnectionResult}
    content.vb: Public Function Connect(network As WifiNetwork, password As String, ssid As String, reconnection As ReconnectionType = ReconnectionType.Automatic) As Task(Of ConnectionResult)
  overload: Meadow.Gateway.WiFi.WiFiAdapter.Connect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork,System.String,System.String,Meadow.Gateway.WiFi.ConnectionMethodType,Meadow.Gateway.WiFi.ReconnectionType)
  commentId: M:Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork,System.String,System.String,Meadow.Gateway.WiFi.ConnectionMethodType,Meadow.Gateway.WiFi.ReconnectionType)
  id: Connect(Meadow.Gateway.WiFi.WifiNetwork,System.String,System.String,Meadow.Gateway.WiFi.ConnectionMethodType,Meadow.Gateway.WiFi.ReconnectionType)
  parent: Meadow.Gateway.WiFi.WiFiAdapter
  langs:
  - csharp
  - vb
  name: Connect(WifiNetwork, String, String, ConnectionMethodType, ReconnectionType)
  nameWithType: WiFiAdapter.Connect(WifiNetwork, String, String, ConnectionMethodType, ReconnectionType)
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.Connect(Meadow.Gateway.WiFi.WifiNetwork, System.String, System.String, Meadow.Gateway.WiFi.ConnectionMethodType, Meadow.Gateway.WiFi.ReconnectionType)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Connect
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
    startLine: 60
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  syntax:
    content: public Task<ConnectionResult> Connect(WifiNetwork network, string password, string ssid, ConnectionMethodType connectionMethodType, ReconnectionType reconnection = ReconnectionType.Automatic)
    parameters:
    - id: network
      type: Meadow.Gateway.WiFi.WifiNetwork
    - id: password
      type: System.String
    - id: ssid
      type: System.String
    - id: connectionMethodType
      type: Meadow.Gateway.WiFi.ConnectionMethodType
    - id: reconnection
      type: Meadow.Gateway.WiFi.ReconnectionType
    return:
      type: System.Threading.Tasks.Task{Meadow.Gateway.WiFi.ConnectionResult}
    content.vb: Public Function Connect(network As WifiNetwork, password As String, ssid As String, connectionMethodType As ConnectionMethodType, reconnection As ReconnectionType = ReconnectionType.Automatic) As Task(Of ConnectionResult)
  overload: Meadow.Gateway.WiFi.WiFiAdapter.Connect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Gateway.WiFi.WiFiAdapter.Disconect
  commentId: M:Meadow.Gateway.WiFi.WiFiAdapter.Disconect
  id: Disconect
  parent: Meadow.Gateway.WiFi.WiFiAdapter
  langs:
  - csharp
  - vb
  name: Disconect()
  nameWithType: WiFiAdapter.Disconect()
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.Disconect()
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Disconect
    path: ../Meadow.Core/source/Meadow.Core/Gateways/WiFi/WiFiAdapter.cs
    startLine: 73
  assemblies:
  - Meadow.Core
  namespace: Meadow.Gateway.WiFi
  syntax:
    content: public void Disconect()
    content.vb: Public Sub Disconect
  overload: Meadow.Gateway.WiFi.WiFiAdapter.Disconect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Meadow.Gateway.WiFi
  commentId: N:Meadow.Gateway.WiFi
  name: Meadow.Gateway.WiFi
  nameWithType: Meadow.Gateway.WiFi
  fullName: Meadow.Gateway.WiFi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Meadow.Gateway.WiFi.WiFiAdapter.Networks*
  commentId: Overload:Meadow.Gateway.WiFi.WiFiAdapter.Networks
  name: Networks
  nameWithType: WiFiAdapter.Networks
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.Networks
- uid: System.Collections.ObjectModel.ObservableCollection{Meadow.Gateway.WiFi.WifiNetwork}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{Meadow.Gateway.WiFi.WifiNetwork}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<WifiNetwork>
  nameWithType: ObservableCollection<WifiNetwork>
  fullName: System.Collections.ObjectModel.ObservableCollection<Meadow.Gateway.WiFi.WifiNetwork>
  nameWithType.vb: ObservableCollection(Of WifiNetwork)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of Meadow.Gateway.WiFi.WifiNetwork)
  name.vb: ObservableCollection(Of WifiNetwork)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Meadow.Gateway.WiFi.WifiNetwork
    name: WifiNetwork
    nameWithType: WifiNetwork
    fullName: Meadow.Gateway.WiFi.WifiNetwork
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Meadow.Gateway.WiFi.WifiNetwork
    name: WifiNetwork
    nameWithType: WifiNetwork
    fullName: Meadow.Gateway.WiFi.WifiNetwork
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Meadow.Gateway.WiFi.WiFiAdapter.IsConnected*
  commentId: Overload:Meadow.Gateway.WiFi.WiFiAdapter.IsConnected
  name: IsConnected
  nameWithType: WiFiAdapter.IsConnected
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.IsConnected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Meadow.Gateway.WiFi.WiFiAdapter.HasInternetAccess*
  commentId: Overload:Meadow.Gateway.WiFi.WiFiAdapter.HasInternetAccess
  name: HasInternetAccess
  nameWithType: WiFiAdapter.HasInternetAccess
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.HasInternetAccess
- uid: Meadow.Gateway.WiFi.WiFiAdapter.#ctor*
  commentId: Overload:Meadow.Gateway.WiFi.WiFiAdapter.#ctor
  name: WiFiAdapter
  nameWithType: WiFiAdapter.WiFiAdapter
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.WiFiAdapter
- uid: Meadow.Gateway.WiFi.WiFiAdapter.BeginScan*
  commentId: Overload:Meadow.Gateway.WiFi.WiFiAdapter.BeginScan
  name: BeginScan
  nameWithType: WiFiAdapter.BeginScan
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.BeginScan
- uid: Meadow.Gateway.WiFi.WiFiAdapter.Connect*
  commentId: Overload:Meadow.Gateway.WiFi.WiFiAdapter.Connect
  name: Connect
  nameWithType: WiFiAdapter.Connect
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.Connect
- uid: Meadow.Gateway.WiFi.WifiNetwork
  commentId: T:Meadow.Gateway.WiFi.WifiNetwork
  parent: Meadow.Gateway.WiFi
  name: WifiNetwork
  nameWithType: WifiNetwork
  fullName: Meadow.Gateway.WiFi.WifiNetwork
- uid: Meadow.Gateway.WiFi.ReconnectionType
  commentId: T:Meadow.Gateway.WiFi.ReconnectionType
  parent: Meadow.Gateway.WiFi
  name: ReconnectionType
  nameWithType: ReconnectionType
  fullName: Meadow.Gateway.WiFi.ReconnectionType
- uid: System.Threading.Tasks.Task{Meadow.Gateway.WiFi.ConnectionResult}
  commentId: T:System.Threading.Tasks.Task{Meadow.Gateway.WiFi.ConnectionResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ConnectionResult>
  nameWithType: Task<ConnectionResult>
  fullName: System.Threading.Tasks.Task<Meadow.Gateway.WiFi.ConnectionResult>
  nameWithType.vb: Task(Of ConnectionResult)
  fullName.vb: System.Threading.Tasks.Task(Of Meadow.Gateway.WiFi.ConnectionResult)
  name.vb: Task(Of ConnectionResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Meadow.Gateway.WiFi.ConnectionResult
    name: ConnectionResult
    nameWithType: ConnectionResult
    fullName: Meadow.Gateway.WiFi.ConnectionResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Meadow.Gateway.WiFi.ConnectionResult
    name: ConnectionResult
    nameWithType: ConnectionResult
    fullName: Meadow.Gateway.WiFi.ConnectionResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Meadow.Gateway.WiFi.ConnectionMethodType
  commentId: T:Meadow.Gateway.WiFi.ConnectionMethodType
  parent: Meadow.Gateway.WiFi
  name: ConnectionMethodType
  nameWithType: ConnectionMethodType
  fullName: Meadow.Gateway.WiFi.ConnectionMethodType
- uid: Meadow.Gateway.WiFi.WiFiAdapter.Disconect*
  commentId: Overload:Meadow.Gateway.WiFi.WiFiAdapter.Disconect
  name: Disconect
  nameWithType: WiFiAdapter.Disconect
  fullName: Meadow.Gateway.WiFi.WiFiAdapter.Disconect
