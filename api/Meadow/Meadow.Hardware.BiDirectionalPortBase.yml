### YamlMime:ManagedReference
items:
- uid: Meadow.Hardware.BiDirectionalPortBase
  commentId: T:Meadow.Hardware.BiDirectionalPortBase
  id: BiDirectionalPortBase
  parent: Meadow.Hardware
  children:
  - Meadow.Hardware.BiDirectionalPortBase.#ctor(Meadow.Hardware.IDigitalPin,System.Boolean,System.Boolean,Meadow.Hardware.ResistorMode)
  - Meadow.Hardware.BiDirectionalPortBase._currentDirection
  - Meadow.Hardware.BiDirectionalPortBase._currentState
  - Meadow.Hardware.BiDirectionalPortBase._disposed
  - Meadow.Hardware.BiDirectionalPortBase._interruptEnabled
  - Meadow.Hardware.BiDirectionalPortBase.Changed
  - Meadow.Hardware.BiDirectionalPortBase.Direction
  - Meadow.Hardware.BiDirectionalPortBase.Dispose
  - Meadow.Hardware.BiDirectionalPortBase.Dispose(System.Boolean)
  - Meadow.Hardware.BiDirectionalPortBase.GlitchFilter
  - Meadow.Hardware.BiDirectionalPortBase.InitialState
  - Meadow.Hardware.BiDirectionalPortBase.InterrupEnabled
  - Meadow.Hardware.BiDirectionalPortBase.Resistor
  - Meadow.Hardware.BiDirectionalPortBase.SignalType
  - Meadow.Hardware.BiDirectionalPortBase.State
  langs:
  - csharp
  - vb
  name: BiDirectionalPortBase
  nameWithType: BiDirectionalPortBase
  fullName: Meadow.Hardware.BiDirectionalPortBase
  type: Class
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: BiDirectionalPortBase
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 7
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  summary: "\nProvides a base implementation for BiDirectional Ports; digital ports \nthat can be both input and output.\n"
  example: []
  syntax:
    content: 'public abstract class BiDirectionalPortBase : object, IBiDirectionalPort, IDigitalInterruptPort, IDigitalInputPort, IDigitalOutputPort, IDigitalPort, IPort, IDisposable'
    content.vb: >-
      Public MustInherit Class BiDirectionalPortBase

          Inherits Object

          Implements IBiDirectionalPort, IDigitalInterruptPort, IDigitalInputPort, IDigitalOutputPort, IDigitalPort, IPort, IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - Meadow.Hardware.BiDirectionalPort
  implements:
  - Meadow.Hardware.IBiDirectionalPort
  - Meadow.Hardware.IDigitalInterruptPort
  - Meadow.Hardware.IDigitalInputPort
  - Meadow.Hardware.IDigitalOutputPort
  - Meadow.Hardware.IDigitalPort
  - Meadow.Hardware.IPort
  - IDisposable
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Meadow.Hardware.BiDirectionalPortBase.Changed
  commentId: E:Meadow.Hardware.BiDirectionalPortBase.Changed
  id: Changed
  parent: Meadow.Hardware.BiDirectionalPortBase
  langs:
  - csharp
  - vb
  name: Changed
  nameWithType: BiDirectionalPortBase.Changed
  fullName: Meadow.Hardware.BiDirectionalPortBase.Changed
  type: Event
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Changed
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 9
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public event EventHandler<PortEventArgs> Changed
    return:
      type: EventHandler{Meadow.Hardware.PortEventArgs}
    content.vb: Public Event Changed As EventHandler(Of PortEventArgs)
  implements:
  - Meadow.Hardware.IDigitalInterruptPort.Changed
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.BiDirectionalPortBase._disposed
  commentId: F:Meadow.Hardware.BiDirectionalPortBase._disposed
  id: _disposed
  parent: Meadow.Hardware.BiDirectionalPortBase
  langs:
  - csharp
  - vb
  name: _disposed
  nameWithType: BiDirectionalPortBase._disposed
  fullName: Meadow.Hardware.BiDirectionalPortBase._disposed
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: _disposed
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 12
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: protected bool _disposed
    return:
      type: System.Boolean
    content.vb: Protected _disposed As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Hardware.BiDirectionalPortBase._currentState
  commentId: F:Meadow.Hardware.BiDirectionalPortBase._currentState
  id: _currentState
  parent: Meadow.Hardware.BiDirectionalPortBase
  langs:
  - csharp
  - vb
  name: _currentState
  nameWithType: BiDirectionalPortBase._currentState
  fullName: Meadow.Hardware.BiDirectionalPortBase._currentState
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: _currentState
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 13
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: protected bool _currentState
    return:
      type: System.Boolean
    content.vb: Protected _currentState As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Hardware.BiDirectionalPortBase._interruptEnabled
  commentId: F:Meadow.Hardware.BiDirectionalPortBase._interruptEnabled
  id: _interruptEnabled
  parent: Meadow.Hardware.BiDirectionalPortBase
  langs:
  - csharp
  - vb
  name: _interruptEnabled
  nameWithType: BiDirectionalPortBase._interruptEnabled
  fullName: Meadow.Hardware.BiDirectionalPortBase._interruptEnabled
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: _interruptEnabled
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 14
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: protected bool _interruptEnabled
    return:
      type: System.Boolean
    content.vb: Protected _interruptEnabled As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Hardware.BiDirectionalPortBase._currentDirection
  commentId: F:Meadow.Hardware.BiDirectionalPortBase._currentDirection
  id: _currentDirection
  parent: Meadow.Hardware.BiDirectionalPortBase
  langs:
  - csharp
  - vb
  name: _currentDirection
  nameWithType: BiDirectionalPortBase._currentDirection
  fullName: Meadow.Hardware.BiDirectionalPortBase._currentDirection
  type: Field
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: _currentDirection
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 15
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: protected PortDirectionType _currentDirection
    return:
      type: Meadow.Hardware.PortDirectionType
    content.vb: Protected _currentDirection As PortDirectionType
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Hardware.BiDirectionalPortBase.SignalType
  commentId: P:Meadow.Hardware.BiDirectionalPortBase.SignalType
  id: SignalType
  parent: Meadow.Hardware.BiDirectionalPortBase
  langs:
  - csharp
  - vb
  name: SignalType
  nameWithType: BiDirectionalPortBase.SignalType
  fullName: Meadow.Hardware.BiDirectionalPortBase.SignalType
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: SignalType
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 17
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public SignalType SignalType { get; }
    parameters: []
    return:
      type: Meadow.Hardware.SignalType
    content.vb: Public ReadOnly Property SignalType As SignalType
  overload: Meadow.Hardware.BiDirectionalPortBase.SignalType*
  implements:
  - Meadow.Hardware.IPort.SignalType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Hardware.BiDirectionalPortBase.GlitchFilter
  commentId: P:Meadow.Hardware.BiDirectionalPortBase.GlitchFilter
  id: GlitchFilter
  parent: Meadow.Hardware.BiDirectionalPortBase
  langs:
  - csharp
  - vb
  name: GlitchFilter
  nameWithType: BiDirectionalPortBase.GlitchFilter
  fullName: Meadow.Hardware.BiDirectionalPortBase.GlitchFilter
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: GlitchFilter
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 22
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public bool GlitchFilter { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property GlitchFilter As Boolean
  overload: Meadow.Hardware.BiDirectionalPortBase.GlitchFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.BiDirectionalPortBase.InitialState
  commentId: P:Meadow.Hardware.BiDirectionalPortBase.InitialState
  id: InitialState
  parent: Meadow.Hardware.BiDirectionalPortBase
  langs:
  - csharp
  - vb
  name: InitialState
  nameWithType: BiDirectionalPortBase.InitialState
  fullName: Meadow.Hardware.BiDirectionalPortBase.InitialState
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: InitialState
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 23
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public bool InitialState { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property InitialState As Boolean
  overload: Meadow.Hardware.BiDirectionalPortBase.InitialState*
  implements:
  - Meadow.Hardware.IDigitalOutputPort.InitialState
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Hardware.BiDirectionalPortBase.Resistor
  commentId: P:Meadow.Hardware.BiDirectionalPortBase.Resistor
  id: Resistor
  parent: Meadow.Hardware.BiDirectionalPortBase
  langs:
  - csharp
  - vb
  name: Resistor
  nameWithType: BiDirectionalPortBase.Resistor
  fullName: Meadow.Hardware.BiDirectionalPortBase.Resistor
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Resistor
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 24
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public ResistorMode Resistor { get; }
    parameters: []
    return:
      type: Meadow.Hardware.ResistorMode
    content.vb: Public ReadOnly Property Resistor As ResistorMode
  overload: Meadow.Hardware.BiDirectionalPortBase.Resistor*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Hardware.BiDirectionalPortBase.#ctor(Meadow.Hardware.IDigitalPin,System.Boolean,System.Boolean,Meadow.Hardware.ResistorMode)
  commentId: M:Meadow.Hardware.BiDirectionalPortBase.#ctor(Meadow.Hardware.IDigitalPin,System.Boolean,System.Boolean,Meadow.Hardware.ResistorMode)
  id: '#ctor(Meadow.Hardware.IDigitalPin,System.Boolean,System.Boolean,Meadow.Hardware.ResistorMode)'
  parent: Meadow.Hardware.BiDirectionalPortBase
  langs:
  - csharp
  - vb
  name: BiDirectionalPortBase(IDigitalPin, Boolean, Boolean, ResistorMode)
  nameWithType: BiDirectionalPortBase.BiDirectionalPortBase(IDigitalPin, Boolean, Boolean, ResistorMode)
  fullName: Meadow.Hardware.BiDirectionalPortBase.BiDirectionalPortBase(Meadow.Hardware.IDigitalPin, System.Boolean, System.Boolean, Meadow.Hardware.ResistorMode)
  type: Constructor
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: .ctor
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 26
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: protected BiDirectionalPortBase(IDigitalPin pin, bool initialState = false, bool glitchFilter = false, ResistorMode resistorMode = default(ResistorMode))
    parameters:
    - id: pin
      type: Meadow.Hardware.IDigitalPin
    - id: initialState
      type: System.Boolean
    - id: glitchFilter
      type: System.Boolean
    - id: resistorMode
      type: Meadow.Hardware.ResistorMode
    content.vb: Protected Sub New(pin As IDigitalPin, initialState As Boolean = False, glitchFilter As Boolean = False, resistorMode As ResistorMode = Nothing)
  overload: Meadow.Hardware.BiDirectionalPortBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Hardware.BiDirectionalPortBase.Dispose
  commentId: M:Meadow.Hardware.BiDirectionalPortBase.Dispose
  id: Dispose
  parent: Meadow.Hardware.BiDirectionalPortBase
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: BiDirectionalPortBase.Dispose()
  fullName: Meadow.Hardware.BiDirectionalPortBase.Dispose()
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Dispose
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 36
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Meadow.Hardware.BiDirectionalPortBase.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.BiDirectionalPortBase.Dispose(System.Boolean)
  commentId: M:Meadow.Hardware.BiDirectionalPortBase.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Meadow.Hardware.BiDirectionalPortBase
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: BiDirectionalPortBase.Dispose(Boolean)
  fullName: Meadow.Hardware.BiDirectionalPortBase.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Dispose
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 42
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: protected abstract void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected MustOverride Sub Dispose(disposing As Boolean)
  overload: Meadow.Hardware.BiDirectionalPortBase.Dispose*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Meadow.Hardware.BiDirectionalPortBase.InterrupEnabled
  commentId: P:Meadow.Hardware.BiDirectionalPortBase.InterrupEnabled
  id: InterrupEnabled
  parent: Meadow.Hardware.BiDirectionalPortBase
  langs:
  - csharp
  - vb
  name: InterrupEnabled
  nameWithType: BiDirectionalPortBase.InterrupEnabled
  fullName: Meadow.Hardware.BiDirectionalPortBase.InterrupEnabled
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: InterrupEnabled
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 44
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public bool InterrupEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property InterrupEnabled As Boolean
  overload: Meadow.Hardware.BiDirectionalPortBase.InterrupEnabled*
  implements:
  - Meadow.Hardware.IDigitalInterruptPort.InterrupEnabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.BiDirectionalPortBase.Direction
  commentId: P:Meadow.Hardware.BiDirectionalPortBase.Direction
  id: Direction
  parent: Meadow.Hardware.BiDirectionalPortBase
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: BiDirectionalPortBase.Direction
  fullName: Meadow.Hardware.BiDirectionalPortBase.Direction
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: Direction
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 54
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public PortDirectionType Direction { get; }
    parameters: []
    return:
      type: Meadow.Hardware.PortDirectionType
    content.vb: Public ReadOnly Property Direction As PortDirectionType
  overload: Meadow.Hardware.BiDirectionalPortBase.Direction*
  implements:
  - Meadow.Hardware.IPort.Direction
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Meadow.Hardware.BiDirectionalPortBase.State
  commentId: P:Meadow.Hardware.BiDirectionalPortBase.State
  id: State
  parent: Meadow.Hardware.BiDirectionalPortBase
  langs:
  - csharp
  - vb
  name: State
  nameWithType: BiDirectionalPortBase.State
  fullName: Meadow.Hardware.BiDirectionalPortBase.State
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
      branch: master
      repo: https://github.com/WildernessLabs/Meadow.Core.git
    id: State
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Bases/BiDirectionalPortBase.cs
    startLine: 59
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public abstract bool State { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride Property State As Boolean
  overload: Meadow.Hardware.BiDirectionalPortBase.State*
  implements:
  - Meadow.Hardware.IDigitalInputPort.State
  - Meadow.Hardware.IDigitalPort.State
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Meadow.Hardware
  commentId: N:Meadow.Hardware
  name: Meadow.Hardware
  nameWithType: Meadow.Hardware
  fullName: Meadow.Hardware
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Meadow.Hardware.IBiDirectionalPort
  commentId: T:Meadow.Hardware.IBiDirectionalPort
  parent: Meadow.Hardware
  name: IBiDirectionalPort
  nameWithType: IBiDirectionalPort
  fullName: Meadow.Hardware.IBiDirectionalPort
- uid: Meadow.Hardware.IDigitalInterruptPort
  commentId: T:Meadow.Hardware.IDigitalInterruptPort
  parent: Meadow.Hardware
  name: IDigitalInterruptPort
  nameWithType: IDigitalInterruptPort
  fullName: Meadow.Hardware.IDigitalInterruptPort
- uid: Meadow.Hardware.IDigitalInputPort
  commentId: T:Meadow.Hardware.IDigitalInputPort
  parent: Meadow.Hardware
  name: IDigitalInputPort
  nameWithType: IDigitalInputPort
  fullName: Meadow.Hardware.IDigitalInputPort
- uid: Meadow.Hardware.IDigitalOutputPort
  commentId: T:Meadow.Hardware.IDigitalOutputPort
  parent: Meadow.Hardware
  name: IDigitalOutputPort
  nameWithType: IDigitalOutputPort
  fullName: Meadow.Hardware.IDigitalOutputPort
- uid: Meadow.Hardware.IDigitalPort
  commentId: T:Meadow.Hardware.IDigitalPort
  parent: Meadow.Hardware
  name: IDigitalPort
  nameWithType: IDigitalPort
  fullName: Meadow.Hardware.IDigitalPort
- uid: Meadow.Hardware.IPort
  commentId: T:Meadow.Hardware.IPort
  parent: Meadow.Hardware
  name: IPort
  nameWithType: IPort
  fullName: Meadow.Hardware.IPort
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Meadow.Hardware.IDigitalInterruptPort.Changed
  commentId: E:Meadow.Hardware.IDigitalInterruptPort.Changed
  parent: Meadow.Hardware.IDigitalInterruptPort
  name: Changed
  nameWithType: IDigitalInterruptPort.Changed
  fullName: Meadow.Hardware.IDigitalInterruptPort.Changed
- uid: EventHandler{Meadow.Hardware.PortEventArgs}
  commentId: '!:EventHandler{Meadow.Hardware.PortEventArgs}'
  definition: EventHandler`1
  name: EventHandler<PortEventArgs>
  nameWithType: EventHandler<PortEventArgs>
  fullName: EventHandler<Meadow.Hardware.PortEventArgs>
  nameWithType.vb: EventHandler(Of PortEventArgs)
  fullName.vb: EventHandler(Of Meadow.Hardware.PortEventArgs)
  name.vb: EventHandler(Of PortEventArgs)
  spec.csharp:
  - uid: EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Meadow.Hardware.PortEventArgs
    name: PortEventArgs
    nameWithType: PortEventArgs
    fullName: Meadow.Hardware.PortEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Meadow.Hardware.PortEventArgs
    name: PortEventArgs
    nameWithType: PortEventArgs
    fullName: Meadow.Hardware.PortEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: EventHandler`1
  isExternal: true
  name: EventHandler<>
  nameWithType: EventHandler<>
  fullName: EventHandler<>
  nameWithType.vb: EventHandler(Of )
  fullName.vb: EventHandler(Of )
  name.vb: EventHandler(Of )
  spec.csharp:
  - uid: EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Meadow.Hardware.PortDirectionType
  commentId: T:Meadow.Hardware.PortDirectionType
  parent: Meadow.Hardware
  name: PortDirectionType
  nameWithType: PortDirectionType
  fullName: Meadow.Hardware.PortDirectionType
- uid: Meadow.Hardware.BiDirectionalPortBase.SignalType*
  commentId: Overload:Meadow.Hardware.BiDirectionalPortBase.SignalType
  name: SignalType
  nameWithType: BiDirectionalPortBase.SignalType
  fullName: Meadow.Hardware.BiDirectionalPortBase.SignalType
- uid: Meadow.Hardware.IPort.SignalType
  commentId: P:Meadow.Hardware.IPort.SignalType
  parent: Meadow.Hardware.IPort
  name: SignalType
  nameWithType: IPort.SignalType
  fullName: Meadow.Hardware.IPort.SignalType
- uid: Meadow.Hardware.SignalType
  commentId: T:Meadow.Hardware.SignalType
  parent: Meadow.Hardware
  name: SignalType
  nameWithType: SignalType
  fullName: Meadow.Hardware.SignalType
- uid: Meadow.Hardware.BiDirectionalPortBase.GlitchFilter*
  commentId: Overload:Meadow.Hardware.BiDirectionalPortBase.GlitchFilter
  name: GlitchFilter
  nameWithType: BiDirectionalPortBase.GlitchFilter
  fullName: Meadow.Hardware.BiDirectionalPortBase.GlitchFilter
- uid: Meadow.Hardware.BiDirectionalPortBase.InitialState*
  commentId: Overload:Meadow.Hardware.BiDirectionalPortBase.InitialState
  name: InitialState
  nameWithType: BiDirectionalPortBase.InitialState
  fullName: Meadow.Hardware.BiDirectionalPortBase.InitialState
- uid: Meadow.Hardware.IDigitalOutputPort.InitialState
  commentId: P:Meadow.Hardware.IDigitalOutputPort.InitialState
  parent: Meadow.Hardware.IDigitalOutputPort
  name: InitialState
  nameWithType: IDigitalOutputPort.InitialState
  fullName: Meadow.Hardware.IDigitalOutputPort.InitialState
- uid: Meadow.Hardware.BiDirectionalPortBase.Resistor*
  commentId: Overload:Meadow.Hardware.BiDirectionalPortBase.Resistor
  name: Resistor
  nameWithType: BiDirectionalPortBase.Resistor
  fullName: Meadow.Hardware.BiDirectionalPortBase.Resistor
- uid: Meadow.Hardware.ResistorMode
  commentId: T:Meadow.Hardware.ResistorMode
  parent: Meadow.Hardware
  name: ResistorMode
  nameWithType: ResistorMode
  fullName: Meadow.Hardware.ResistorMode
- uid: Meadow.Hardware.BiDirectionalPortBase.#ctor*
  commentId: Overload:Meadow.Hardware.BiDirectionalPortBase.#ctor
  name: BiDirectionalPortBase
  nameWithType: BiDirectionalPortBase.BiDirectionalPortBase
  fullName: Meadow.Hardware.BiDirectionalPortBase.BiDirectionalPortBase
- uid: Meadow.Hardware.IDigitalPin
  commentId: T:Meadow.Hardware.IDigitalPin
  parent: Meadow.Hardware
  name: IDigitalPin
  nameWithType: IDigitalPin
  fullName: Meadow.Hardware.IDigitalPin
- uid: Meadow.Hardware.BiDirectionalPortBase.Dispose*
  commentId: Overload:Meadow.Hardware.BiDirectionalPortBase.Dispose
  name: Dispose
  nameWithType: BiDirectionalPortBase.Dispose
  fullName: Meadow.Hardware.BiDirectionalPortBase.Dispose
- uid: Meadow.Hardware.BiDirectionalPortBase.InterrupEnabled*
  commentId: Overload:Meadow.Hardware.BiDirectionalPortBase.InterrupEnabled
  name: InterrupEnabled
  nameWithType: BiDirectionalPortBase.InterrupEnabled
  fullName: Meadow.Hardware.BiDirectionalPortBase.InterrupEnabled
- uid: Meadow.Hardware.IDigitalInterruptPort.InterrupEnabled
  commentId: P:Meadow.Hardware.IDigitalInterruptPort.InterrupEnabled
  parent: Meadow.Hardware.IDigitalInterruptPort
  name: InterrupEnabled
  nameWithType: IDigitalInterruptPort.InterrupEnabled
  fullName: Meadow.Hardware.IDigitalInterruptPort.InterrupEnabled
- uid: Meadow.Hardware.BiDirectionalPortBase.Direction*
  commentId: Overload:Meadow.Hardware.BiDirectionalPortBase.Direction
  name: Direction
  nameWithType: BiDirectionalPortBase.Direction
  fullName: Meadow.Hardware.BiDirectionalPortBase.Direction
- uid: Meadow.Hardware.IPort.Direction
  commentId: P:Meadow.Hardware.IPort.Direction
  parent: Meadow.Hardware.IPort
  name: Direction
  nameWithType: IPort.Direction
  fullName: Meadow.Hardware.IPort.Direction
- uid: Meadow.Hardware.BiDirectionalPortBase.State*
  commentId: Overload:Meadow.Hardware.BiDirectionalPortBase.State
  name: State
  nameWithType: BiDirectionalPortBase.State
  fullName: Meadow.Hardware.BiDirectionalPortBase.State
- uid: Meadow.Hardware.IDigitalInputPort.State
  commentId: P:Meadow.Hardware.IDigitalInputPort.State
  parent: Meadow.Hardware.IDigitalInputPort
  name: State
  nameWithType: IDigitalInputPort.State
  fullName: Meadow.Hardware.IDigitalInputPort.State
- uid: Meadow.Hardware.IDigitalPort.State
  commentId: P:Meadow.Hardware.IDigitalPort.State
  parent: Meadow.Hardware.IDigitalPort
  name: State
  nameWithType: IDigitalPort.State
  fullName: Meadow.Hardware.IDigitalPort.State
