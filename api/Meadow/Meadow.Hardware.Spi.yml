### YamlMime:ManagedReference
items:
- uid: Meadow.Hardware.Spi
  commentId: T:Meadow.Hardware.Spi
  id: Spi
  parent: Meadow.Hardware
  children:
  - Meadow.Hardware.Spi.#ctor(Meadow.Hardware.Spi.Configuration)
  - Meadow.Hardware.Spi.Config
  - Meadow.Hardware.Spi.Dispose
  - Meadow.Hardware.Spi.Finalize
  - Meadow.Hardware.Spi.Write(System.Byte[])
  - Meadow.Hardware.Spi.Write(System.UInt16[])
  - Meadow.Hardware.Spi.WriteRead(System.Byte[],System.Byte[])
  - Meadow.Hardware.Spi.WriteRead(System.Byte[],System.Byte[],System.Int32)
  - Meadow.Hardware.Spi.WriteRead(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32)
  - Meadow.Hardware.Spi.WriteRead(System.UInt16[],System.Int32,System.Int32,System.UInt16[],System.Int32,System.Int32,System.Int32)
  - Meadow.Hardware.Spi.WriteRead(System.UInt16[],System.UInt16[])
  - Meadow.Hardware.Spi.WriteRead(System.UInt16[],System.UInt16[],System.Int32)
  langs:
  - csharp
  - vb
  name: Spi
  nameWithType: Spi
  fullName: Meadow.Hardware.Spi
  type: Class
  source:
    remote:
      path: source/Meadow.Core/Hardware/Spi.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: Spi
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Spi.cs
    startLine: 6
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: 'public class Spi : IDisposable'
    content.vb: >-
      Public Class Spi

          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Meadow.Hardware.Spi.#ctor(Meadow.Hardware.Spi.Configuration)
  commentId: M:Meadow.Hardware.Spi.#ctor(Meadow.Hardware.Spi.Configuration)
  id: '#ctor(Meadow.Hardware.Spi.Configuration)'
  parent: Meadow.Hardware.Spi
  langs:
  - csharp
  - vb
  name: Spi(Spi.Configuration)
  nameWithType: Spi.Spi(Spi.Configuration)
  fullName: Meadow.Hardware.Spi.Spi(Meadow.Hardware.Spi.Configuration)
  type: Constructor
  source:
    remote:
      path: source/Meadow.Core/Hardware/Spi.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: .ctor
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Spi.cs
    startLine: 16
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public Spi(Spi.Configuration config)
    parameters:
    - id: config
      type: Meadow.Hardware.Spi.Configuration
    content.vb: Public Sub New(config As Spi.Configuration)
  overload: Meadow.Hardware.Spi.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.Spi.Finalize
  commentId: M:Meadow.Hardware.Spi.Finalize
  id: Finalize
  parent: Meadow.Hardware.Spi
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: Spi.Finalize()
  fullName: Meadow.Hardware.Spi.Finalize()
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Spi.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: Finalize
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Spi.cs
    startLine: 21
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Meadow.Hardware.Spi.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Meadow.Hardware.Spi.Config
  commentId: P:Meadow.Hardware.Spi.Config
  id: Config
  parent: Meadow.Hardware.Spi
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: Spi.Config
  fullName: Meadow.Hardware.Spi.Config
  type: Property
  source:
    remote:
      path: source/Meadow.Core/Hardware/Spi.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: Config
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Spi.cs
    startLine: 23
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public Spi.Configuration Config { get; set; }
    parameters: []
    return:
      type: Meadow.Hardware.Spi.Configuration
    content.vb: Public Property Config As Spi.Configuration
  overload: Meadow.Hardware.Spi.Config*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.Spi.Dispose
  commentId: M:Meadow.Hardware.Spi.Dispose
  id: Dispose
  parent: Meadow.Hardware.Spi
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Spi.Dispose()
  fullName: Meadow.Hardware.Spi.Dispose()
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Spi.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: Dispose
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Spi.cs
    startLine: 25
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Meadow.Hardware.Spi.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Meadow.Hardware.Spi.Write(System.UInt16[])
  commentId: M:Meadow.Hardware.Spi.Write(System.UInt16[])
  id: Write(System.UInt16[])
  parent: Meadow.Hardware.Spi
  langs:
  - csharp
  - vb
  name: Write(UInt16[])
  nameWithType: Spi.Write(UInt16[])
  fullName: Meadow.Hardware.Spi.Write(System.UInt16[])
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Spi.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: Write
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Spi.cs
    startLine: 26
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public void Write(ushort[] writeBuffer)
    parameters:
    - id: writeBuffer
      type: System.UInt16[]
    content.vb: Public Sub Write(writeBuffer As UShort())
  overload: Meadow.Hardware.Spi.Write*
  nameWithType.vb: Spi.Write(UInt16())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Hardware.Spi.Write(System.UInt16())
  name.vb: Write(UInt16())
- uid: Meadow.Hardware.Spi.Write(System.Byte[])
  commentId: M:Meadow.Hardware.Spi.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: Meadow.Hardware.Spi
  langs:
  - csharp
  - vb
  name: Write(Byte[])
  nameWithType: Spi.Write(Byte[])
  fullName: Meadow.Hardware.Spi.Write(System.Byte[])
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Spi.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: Write
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Spi.cs
    startLine: 27
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public void Write(byte[] writeBuffer)
    parameters:
    - id: writeBuffer
      type: System.Byte[]
    content.vb: Public Sub Write(writeBuffer As Byte())
  overload: Meadow.Hardware.Spi.Write*
  nameWithType.vb: Spi.Write(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Hardware.Spi.Write(System.Byte())
  name.vb: Write(Byte())
- uid: Meadow.Hardware.Spi.WriteRead(System.UInt16[],System.UInt16[])
  commentId: M:Meadow.Hardware.Spi.WriteRead(System.UInt16[],System.UInt16[])
  id: WriteRead(System.UInt16[],System.UInt16[])
  parent: Meadow.Hardware.Spi
  langs:
  - csharp
  - vb
  name: WriteRead(UInt16[], UInt16[])
  nameWithType: Spi.WriteRead(UInt16[], UInt16[])
  fullName: Meadow.Hardware.Spi.WriteRead(System.UInt16[], System.UInt16[])
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Spi.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WriteRead
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Spi.cs
    startLine: 28
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public void WriteRead(ushort[] writeBuffer, ushort[] readBuffer)
    parameters:
    - id: writeBuffer
      type: System.UInt16[]
    - id: readBuffer
      type: System.UInt16[]
    content.vb: Public Sub WriteRead(writeBuffer As UShort(), readBuffer As UShort())
  overload: Meadow.Hardware.Spi.WriteRead*
  nameWithType.vb: Spi.WriteRead(UInt16(), UInt16())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Hardware.Spi.WriteRead(System.UInt16(), System.UInt16())
  name.vb: WriteRead(UInt16(), UInt16())
- uid: Meadow.Hardware.Spi.WriteRead(System.Byte[],System.Byte[])
  commentId: M:Meadow.Hardware.Spi.WriteRead(System.Byte[],System.Byte[])
  id: WriteRead(System.Byte[],System.Byte[])
  parent: Meadow.Hardware.Spi
  langs:
  - csharp
  - vb
  name: WriteRead(Byte[], Byte[])
  nameWithType: Spi.WriteRead(Byte[], Byte[])
  fullName: Meadow.Hardware.Spi.WriteRead(System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Spi.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WriteRead
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Spi.cs
    startLine: 29
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public void WriteRead(byte[] writeBuffer, byte[] readBuffer)
    parameters:
    - id: writeBuffer
      type: System.Byte[]
    - id: readBuffer
      type: System.Byte[]
    content.vb: Public Sub WriteRead(writeBuffer As Byte(), readBuffer As Byte())
  overload: Meadow.Hardware.Spi.WriteRead*
  nameWithType.vb: Spi.WriteRead(Byte(), Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Hardware.Spi.WriteRead(System.Byte(), System.Byte())
  name.vb: WriteRead(Byte(), Byte())
- uid: Meadow.Hardware.Spi.WriteRead(System.UInt16[],System.UInt16[],System.Int32)
  commentId: M:Meadow.Hardware.Spi.WriteRead(System.UInt16[],System.UInt16[],System.Int32)
  id: WriteRead(System.UInt16[],System.UInt16[],System.Int32)
  parent: Meadow.Hardware.Spi
  langs:
  - csharp
  - vb
  name: WriteRead(UInt16[], UInt16[], Int32)
  nameWithType: Spi.WriteRead(UInt16[], UInt16[], Int32)
  fullName: Meadow.Hardware.Spi.WriteRead(System.UInt16[], System.UInt16[], System.Int32)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Spi.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WriteRead
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Spi.cs
    startLine: 30
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public void WriteRead(ushort[] writeBuffer, ushort[] readBuffer, int startReadOffset)
    parameters:
    - id: writeBuffer
      type: System.UInt16[]
    - id: readBuffer
      type: System.UInt16[]
    - id: startReadOffset
      type: System.Int32
    content.vb: Public Sub WriteRead(writeBuffer As UShort(), readBuffer As UShort(), startReadOffset As Integer)
  overload: Meadow.Hardware.Spi.WriteRead*
  nameWithType.vb: Spi.WriteRead(UInt16(), UInt16(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Hardware.Spi.WriteRead(System.UInt16(), System.UInt16(), System.Int32)
  name.vb: WriteRead(UInt16(), UInt16(), Int32)
- uid: Meadow.Hardware.Spi.WriteRead(System.Byte[],System.Byte[],System.Int32)
  commentId: M:Meadow.Hardware.Spi.WriteRead(System.Byte[],System.Byte[],System.Int32)
  id: WriteRead(System.Byte[],System.Byte[],System.Int32)
  parent: Meadow.Hardware.Spi
  langs:
  - csharp
  - vb
  name: WriteRead(Byte[], Byte[], Int32)
  nameWithType: Spi.WriteRead(Byte[], Byte[], Int32)
  fullName: Meadow.Hardware.Spi.WriteRead(System.Byte[], System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Spi.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WriteRead
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Spi.cs
    startLine: 31
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public void WriteRead(byte[] writeBuffer, byte[] readBuffer, int startReadOffset)
    parameters:
    - id: writeBuffer
      type: System.Byte[]
    - id: readBuffer
      type: System.Byte[]
    - id: startReadOffset
      type: System.Int32
    content.vb: Public Sub WriteRead(writeBuffer As Byte(), readBuffer As Byte(), startReadOffset As Integer)
  overload: Meadow.Hardware.Spi.WriteRead*
  nameWithType.vb: Spi.WriteRead(Byte(), Byte(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Hardware.Spi.WriteRead(System.Byte(), System.Byte(), System.Int32)
  name.vb: WriteRead(Byte(), Byte(), Int32)
- uid: Meadow.Hardware.Spi.WriteRead(System.UInt16[],System.Int32,System.Int32,System.UInt16[],System.Int32,System.Int32,System.Int32)
  commentId: M:Meadow.Hardware.Spi.WriteRead(System.UInt16[],System.Int32,System.Int32,System.UInt16[],System.Int32,System.Int32,System.Int32)
  id: WriteRead(System.UInt16[],System.Int32,System.Int32,System.UInt16[],System.Int32,System.Int32,System.Int32)
  parent: Meadow.Hardware.Spi
  langs:
  - csharp
  - vb
  name: WriteRead(UInt16[], Int32, Int32, UInt16[], Int32, Int32, Int32)
  nameWithType: Spi.WriteRead(UInt16[], Int32, Int32, UInt16[], Int32, Int32, Int32)
  fullName: Meadow.Hardware.Spi.WriteRead(System.UInt16[], System.Int32, System.Int32, System.UInt16[], System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Spi.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WriteRead
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Spi.cs
    startLine: 32
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public void WriteRead(ushort[] writeBuffer, int writeOffset, int writeCount, ushort[] readBuffer, int readOffset, int readCount, int startReadOffset)
    parameters:
    - id: writeBuffer
      type: System.UInt16[]
    - id: writeOffset
      type: System.Int32
    - id: writeCount
      type: System.Int32
    - id: readBuffer
      type: System.UInt16[]
    - id: readOffset
      type: System.Int32
    - id: readCount
      type: System.Int32
    - id: startReadOffset
      type: System.Int32
    content.vb: Public Sub WriteRead(writeBuffer As UShort(), writeOffset As Integer, writeCount As Integer, readBuffer As UShort(), readOffset As Integer, readCount As Integer, startReadOffset As Integer)
  overload: Meadow.Hardware.Spi.WriteRead*
  nameWithType.vb: Spi.WriteRead(UInt16(), Int32, Int32, UInt16(), Int32, Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Hardware.Spi.WriteRead(System.UInt16(), System.Int32, System.Int32, System.UInt16(), System.Int32, System.Int32, System.Int32)
  name.vb: WriteRead(UInt16(), Int32, Int32, UInt16(), Int32, Int32, Int32)
- uid: Meadow.Hardware.Spi.WriteRead(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32)
  commentId: M:Meadow.Hardware.Spi.WriteRead(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32)
  id: WriteRead(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32)
  parent: Meadow.Hardware.Spi
  langs:
  - csharp
  - vb
  name: WriteRead(Byte[], Int32, Int32, Byte[], Int32, Int32, Int32)
  nameWithType: Spi.WriteRead(Byte[], Int32, Int32, Byte[], Int32, Int32, Int32)
  fullName: Meadow.Hardware.Spi.WriteRead(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Meadow.Core/Hardware/Spi.cs
      branch: master
      repo: git@github.com:WildernessLabs/Meadow.Core.git
    id: WriteRead
    path: ../Meadow.Core/source/Meadow.Core/Hardware/Spi.cs
    startLine: 33
  assemblies:
  - Meadow.Core
  namespace: Meadow.Hardware
  syntax:
    content: public void WriteRead(byte[] writeBuffer, int writeOffset, int writeCount, byte[] readBuffer, int readOffset, int readCount, int startReadOffset)
    parameters:
    - id: writeBuffer
      type: System.Byte[]
    - id: writeOffset
      type: System.Int32
    - id: writeCount
      type: System.Int32
    - id: readBuffer
      type: System.Byte[]
    - id: readOffset
      type: System.Int32
    - id: readCount
      type: System.Int32
    - id: startReadOffset
      type: System.Int32
    content.vb: Public Sub WriteRead(writeBuffer As Byte(), writeOffset As Integer, writeCount As Integer, readBuffer As Byte(), readOffset As Integer, readCount As Integer, startReadOffset As Integer)
  overload: Meadow.Hardware.Spi.WriteRead*
  nameWithType.vb: Spi.WriteRead(Byte(), Int32, Int32, Byte(), Int32, Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Meadow.Hardware.Spi.WriteRead(System.Byte(), System.Int32, System.Int32, System.Byte(), System.Int32, System.Int32, System.Int32)
  name.vb: WriteRead(Byte(), Int32, Int32, Byte(), Int32, Int32, Int32)
references:
- uid: Meadow.Hardware
  commentId: N:Meadow.Hardware
  name: Meadow.Hardware
  nameWithType: Meadow.Hardware
  fullName: Meadow.Hardware
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Meadow.Hardware.Spi.#ctor*
  commentId: Overload:Meadow.Hardware.Spi.#ctor
  name: Spi
  nameWithType: Spi.Spi
  fullName: Meadow.Hardware.Spi.Spi
- uid: Meadow.Hardware.Spi.Configuration
  commentId: T:Meadow.Hardware.Spi.Configuration
  parent: Meadow.Hardware
  name: Spi.Configuration
  nameWithType: Spi.Configuration
  fullName: Meadow.Hardware.Spi.Configuration
- uid: Meadow.Hardware.Spi.Finalize*
  commentId: Overload:Meadow.Hardware.Spi.Finalize
  name: Finalize
  nameWithType: Spi.Finalize
  fullName: Meadow.Hardware.Spi.Finalize
- uid: Meadow.Hardware.Spi.Config*
  commentId: Overload:Meadow.Hardware.Spi.Config
  name: Config
  nameWithType: Spi.Config
  fullName: Meadow.Hardware.Spi.Config
- uid: Meadow.Hardware.Spi.Dispose*
  commentId: Overload:Meadow.Hardware.Spi.Dispose
  name: Dispose
  nameWithType: Spi.Dispose
  fullName: Meadow.Hardware.Spi.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Meadow.Hardware.Spi.Write*
  commentId: Overload:Meadow.Hardware.Spi.Write
  name: Write
  nameWithType: Spi.Write
  fullName: Meadow.Hardware.Spi.Write
- uid: System.UInt16[]
  isExternal: true
  name: UInt16[]
  nameWithType: UInt16[]
  fullName: System.UInt16[]
  nameWithType.vb: UInt16()
  fullName.vb: System.UInt16()
  name.vb: UInt16()
  spec.csharp:
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Meadow.Hardware.Spi.WriteRead*
  commentId: Overload:Meadow.Hardware.Spi.WriteRead
  name: WriteRead
  nameWithType: Spi.WriteRead
  fullName: Meadow.Hardware.Spi.WriteRead
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
